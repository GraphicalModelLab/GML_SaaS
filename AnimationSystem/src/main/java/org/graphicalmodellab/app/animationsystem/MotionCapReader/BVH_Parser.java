package org.graphicalmodellab.app.animationsystem.MotionCapReader;
// (JavaCodeGenerator.meta.java:540)
                                                                                // (JavaCodeGenerator.meta.java:543)
/**
 * A syntax representation, generated by &#xAC;&lt;&gt;&lt;&#x222A;&#x222A; (notavaCC) 1.9.1.  Licensed under GPL usually.
 * <p>
 * {@link BVH_Parser#parseBvh}
 * parses a text and generates an abstruct syntax tree.
 * A node of the tree is an instance of sub-types of {@link Node}.
 * <p>
 * This class and any nested classes in this class are <strong>not synchronized</strong>.
 *
 */
public class BVH_Parser {                                                       // (JavaCodeGenerator.meta.java:628)
    /**
     * Constructs a parser.
     * @since    notavaCC 1.0
     */
    public BVH_Parser() {                                                       // (JavaCodeGenerator.meta.java:650)
    }                                                                           // (JavaCodeGenerator.meta.java:651)
                                                                                // (JavaCodeGenerator.meta.java:653)
                                                                                // (JavaCodeGenerator.meta.java:654)
    /**
     * Describes the EOF.
     * @see     BVH_Parser.Token#getSymbolID()
     * @since    notavaCC 1.0
     */
    public static final int EOF_TOKEN = 0;                                      // (JavaCodeGenerator.meta.java:680)
    /**
     * Describes the terminal symbol <code>SPACE</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_SPACE = 1;                                    // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>NUMBER</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_NUMBER = 2;                                   // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>REAL</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_REAL = 3;                                     // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>IDENTIFIER</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_IDENTIFIER = 4;                               // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>NUMBERS</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_NUMBERS = 5;                                  // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>HIERARCHY</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_HIERARCHY = 6;                                // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>ROOT</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_ROOT = 7;                                     // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>OFFSET</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_OFFSET = 8;                                   // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>CHANNELS</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_CHANNELS = 9;                                 // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>JOINT</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_JOINT = 10;                                   // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>END</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_END = 11;                                     // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>SITE</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_SITE = 12;                                    // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>MOTION</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_MOTION = 13;                                  // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>FRAMES</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_FRAMES = 14;                                  // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>FRAME</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_FRAME = 15;                                   // (JavaCodeGenerator.meta.java:717)
    /**
     * Describes the terminal symbol <code>TIME</code>.
     * @see     BVH_Parser.Token#getSymbolID()
     */
    public static final int TOKEN_TIME = 16;                                    // (JavaCodeGenerator.meta.java:717)
                                                                                // (JavaCodeGenerator.meta.java:740)
                                                                                // (JavaCodeGenerator.meta.java:741)
                                                                                // (JavaCodeGenerator.meta.java:742)
    /**
     * Creates a node of an abstract syntax tree.
     * <p>
     * <p>
     * The type of the node to create is described by <code>symbolID</code> as follows.
     * <table border=1>
     * <tr><th><code>symbolID</code></th><th>type to create</th></tr>
     * <tr>
     *   <td>{@link Bvh#ID}</td>
     *   <td>{@link BVH_Parser.Bvh}</td>
     * </tr>
     * <tr>
     *   <td>{@link Root#ID}</td>
     *   <td>{@link BVH_Parser.Root}</td>
     * </tr>
     * <tr>
     *   <td>{@link Components#ID}</td>
     *   <td>{@link BVH_Parser.Components}</td>
     * </tr>
     * <tr>
     *   <td>{@link Offset#ID}</td>
     *   <td>{@link BVH_Parser.Offset}</td>
     * </tr>
     * <tr>
     *   <td>{@link Channels#ID}</td>
     *   <td>{@link BVH_Parser.Channels}</td>
     * </tr>
     * <tr>
     *   <td>{@link KindsOfChannel#ID}</td>
     *   <td>{@link BVH_Parser.KindsOfChannel}</td>
     * </tr>
     * <tr>
     *   <td>{@link Joints#ID}</td>
     *   <td>{@link BVH_Parser.Joints}</td>
     * </tr>
     * <tr>
     *   <td>{@link Joint#ID}</td>
     *   <td>{@link BVH_Parser.Joint}</td>
     * </tr>
     * <tr>
     *   <td>{@link EndSite#ID}</td>
     *   <td>{@link BVH_Parser.EndSite}</td>
     * </tr>
     * <tr>
     *   <td>{@link Motion#ID}</td>
     *   <td>{@link BVH_Parser.Motion}</td>
     * </tr>
     * <tr>
     *   <td>{@link Numbers#ID}</td>
     *   <td>{@link BVH_Parser.Numbers}</td>
     * </tr>
     * <tr>
     *   <td>{@link Minus#ID}</td>
     *   <td>{@link BVH_Parser.Minus}</td>
     * </tr>
     * <tr>
     *   <td>{@link Plus#ID}</td>
     *   <td>{@link BVH_Parser.Plus}</td>
     * </tr>
     * </table>
     * <p>
     * The default implementation by the <code>BVH_Parser</code> is equivalent to <code>createNode(symbolID, parameters, false)</code>.
     *
     * @param   symbolID
     *      the kind of the node to create.
     * @param   parameters
     *      the parameters to initialize the node.
     * @return
     *      a created node.
     * @throws   ParseException
     *      if the text to parse doesn't satisfy some requirements.
     * @since    notavaCC 1.0
     */
    protected Node createNode(int symbolID, NodeInitializationParameters parameters) throws ParseException {    // (JavaCodeGenerator.meta.java:809)
        return createNode(symbolID, parameters, false);                         // (JavaCodeGenerator.meta.java:810)
    }                                                                           // (JavaCodeGenerator.meta.java:811)
                                                                                // (JavaCodeGenerator.meta.java:812)
    /**
     * Creates a node of an abstract syntax tree.  The created node is a instance of a class in {@link BVH_Parser.Default}.
     *
     * @param   symbolID
     *      the kind of the node to create.  See {@link #createNode(int, BVH_Parser.NodeInitializationParameters)}.
     * @param   parameters
     *      the parameters to initialize the node.
     * @param   compact
     *      if <code>true</code>, the method creates a compact node, which have only labeled children.
     * @return  a created node.
     * @since   notavaCC 1.0
     */
    protected final BVH_Parser.Default.Node createNode(int symbolID, NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:842)
        switch(symbolID) {                                                      // (JavaCodeGenerator.meta.java:843)
        case Bvh.ID:                                                            // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Bvh(parameters, compact);             // (JavaCodeGenerator.meta.java:851)
        case Root.ID:                                                           // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Root(parameters, compact);            // (JavaCodeGenerator.meta.java:851)
        case Components.ID:                                                     // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Components(parameters, compact);      // (JavaCodeGenerator.meta.java:851)
        case Offset.ID:                                                         // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Offset(parameters, compact);          // (JavaCodeGenerator.meta.java:851)
        case Channels.ID:                                                       // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Channels(parameters, compact);        // (JavaCodeGenerator.meta.java:851)
        case KindsOfChannel.ID:                                                 // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.KindsOfChannel(parameters, compact);    // (JavaCodeGenerator.meta.java:851)
        case Joints.ID:                                                         // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Joints(parameters, compact);          // (JavaCodeGenerator.meta.java:851)
        case Joint.ID:                                                          // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Joint(parameters, compact);           // (JavaCodeGenerator.meta.java:851)
        case EndSite.ID:                                                        // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.EndSite(parameters, compact);         // (JavaCodeGenerator.meta.java:851)
        case Motion.ID:                                                         // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Motion(parameters, compact);          // (JavaCodeGenerator.meta.java:851)
        case Numbers.ID:                                                        // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Numbers(parameters, compact);         // (JavaCodeGenerator.meta.java:851)
        case Minus.ID:                                                          // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Minus(parameters, compact);           // (JavaCodeGenerator.meta.java:851)
        case Plus.ID:                                                           // (JavaCodeGenerator.meta.java:850)
            return new BVH_Parser.Default.Plus(parameters, compact);            // (JavaCodeGenerator.meta.java:851)
        }                                                                       // (JavaCodeGenerator.meta.java:855)
        throw new java.lang.AssertionError("Node creation failed.");            // (JavaCodeGenerator.meta.java:856)
    }                                                                           // (JavaCodeGenerator.meta.java:857)
                                                                                // (JavaCodeGenerator.meta.java:858)
    protected BVH_Parser.AmbiguityAbsorber createAmbiguityAbsorber(int symbolID, java.util.Collection<Node> nodes) throws ParseException {    // (JavaCodeGenerator.meta.java:861)
        BVH_Parser.AmbiguityAbsorber result;                                    // (JavaCodeGenerator.meta.java:862)
        return null;                                                            // (JavaCodeGenerator.meta.java:872)
    }                                                                           // (JavaCodeGenerator.meta.java:873)
    private BVH_Parser.AmbiguityAbsorber __createAmbiguityAbsorberOrThrow__notavacc_reserved(int symbolID, java.util.Collection<Node> nodes) throws ParseException {    // (JavaCodeGenerator.meta.java:875)
        BVH_Parser.AmbiguityAbsorber result = createAmbiguityAbsorber(symbolID, nodes);    // (JavaCodeGenerator.meta.java:876)
        if (result != null)                                                     // (JavaCodeGenerator.meta.java:877)
            return result;                                                      // (JavaCodeGenerator.meta.java:878)
                                                                                // (JavaCodeGenerator.meta.java:879)
        java.io.StringWriter buffer = new java.io.StringWriter();               // (JavaCodeGenerator.meta.java:880)
        java.io.PrintWriter writer = new java.io.PrintWriter(buffer);           // (JavaCodeGenerator.meta.java:881)
        writer.println("DETECTED UNABSORBED AMBIGUITY OF " + "BVH_Parser.notavacc");    // (JavaCodeGenerator.meta.java:882)
        writer.println("This message is for the developer of the parser generated by notavaCC.");    // (JavaCodeGenerator.meta.java:883)
        writer.println("If you are not the developer of the program that output this message, contact the developper.");    // (JavaCodeGenerator.meta.java:884)
        writer.println("----");                                                 // (JavaCodeGenerator.meta.java:885)
        writer.println(__symbolIDToName__notavacc_reserved[symbolID] + " is ambiguous.  The following are the possible trees of the input, but there is no $absorber that absorbs this ambiguity.");    // (JavaCodeGenerator.meta.java:886)
        {                                                                       // (JavaCodeGenerator.meta.java:887)
            int i = 0;                                                          // (JavaCodeGenerator.meta.java:888)
            java.util.Iterator<Node> it40 = nodes.iterator();                   // (JavaCodeGenerator.meta.java:889)
            while (it40.hasNext()) {                                            // (JavaCodeGenerator.meta.java:890)
                Node node = (Node) it40.next();                                 // (JavaCodeGenerator.meta.java:891)
                i++;                                                            // (JavaCodeGenerator.meta.java:892)
                writer.println("[Tree " + i + "]");                             // (JavaCodeGenerator.meta.java:893)
                writer.println(node);                                           // (JavaCodeGenerator.meta.java:894)
            }                                                                   // (JavaCodeGenerator.meta.java:895)
        }                                                                       // (JavaCodeGenerator.meta.java:896)
        writer.println("----");                                                 // (JavaCodeGenerator.meta.java:897)
        writer.print("Perhaps, an easy way to avoid this error is to add the following line to " + "BVH_Parser.notavacc");    // (JavaCodeGenerator.meta.java:898)
        writer.println(".");                                                    // (JavaCodeGenerator.meta.java:901)
        writer.println();                                                       // (JavaCodeGenerator.meta.java:902)
        writer.print("$absorber AbsorberNameYouLike { ");                       // (JavaCodeGenerator.meta.java:903)
        {                                                                       // (JavaCodeGenerator.meta.java:904)
            int i = 0;                                                          // (JavaCodeGenerator.meta.java:905)
            java.util.Iterator<Node> it40 = nodes.iterator();                   // (JavaCodeGenerator.meta.java:906)
            while (it40.hasNext()) {                                            // (JavaCodeGenerator.meta.java:907)
                Node node = (Node) it40.next();                                 // (JavaCodeGenerator.meta.java:908)
                if (i != 0)                                                     // (JavaCodeGenerator.meta.java:909)
                    writer.print(" | ");                                        // (JavaCodeGenerator.meta.java:910)
                                                                                // (JavaCodeGenerator.meta.java:911)
                java.lang.String className = node.getClass().getName();         // (JavaCodeGenerator.meta.java:912)
                className = className.substring(className.lastIndexOf('.') + 1);    // (JavaCodeGenerator.meta.java:913)
                className = className.substring(className.lastIndexOf('$') + 1);    // (JavaCodeGenerator.meta.java:914)
                writer.print("label" + i + ":" + className);                    // (JavaCodeGenerator.meta.java:915)
                i++;                                                            // (JavaCodeGenerator.meta.java:916)
            }                                                                   // (JavaCodeGenerator.meta.java:917)
        }                                                                       // (JavaCodeGenerator.meta.java:918)
        writer.println(" }");                                                   // (JavaCodeGenerator.meta.java:919)
                                                                                // (JavaCodeGenerator.meta.java:920)
        writer.close();                                                         // (JavaCodeGenerator.meta.java:921)
        throw new ParseException.AmbiguousGrammarError(buffer.toString());      // (JavaCodeGenerator.meta.java:922)
    }                                                                           // (JavaCodeGenerator.meta.java:923)
                                                                                // (JavaCodeGenerator.meta.java:925)
    /**
     * This method is called when an whole abstract syntax tree is built.
     * The tree this method returns is regarded as the result of parsing.
     *
     * <p>
     *
     * @param   root
     *      the root of the tree generated by {@link BVH_Parser#createNode}.
     * @return  the result of parsing.
     * @since   notavaCC 1.0
     */
    protected Node modifyWholeTree(Node root) throws ParseException {           // (JavaCodeGenerator.meta.java:950)
        return root;                                                            // (JavaCodeGenerator.meta.java:951)
    }                                                                           // (JavaCodeGenerator.meta.java:952)
                                                                                // (JavaCodeGenerator.meta.java:953)
                                                                                // (JavaCodeGenerator.meta.java:954)
    /**
     * Gets the <code>java.lang.CharSequence</code> that represents the text in the given file.
     * <p>
     *
     * @param   file
     *      a file.
     * @param   charsetName
     *      the charset name of the file, or <code>null</code> for the default charset.
     * @return
     *      the <code>java.lang.CharSequence</code> that represents the text in the <code>file</code>.
     * @throws   java.io.IOException
     *      if some error is occured for the access to the <code>file</code>.
     * @since    notavaCC 1.0
     */
    protected final java.lang.CharSequence toCharSequence(java.io.File file, java.lang.String charsetName) throws java.io.IOException {    // (JavaCodeGenerator.meta.java:988)
        java.io.FileInputStream fis = null;                                     // (JavaCodeGenerator.meta.java:989)
        java.io.InputStreamReader reader = null;                                // (JavaCodeGenerator.meta.java:990)
        java.nio.channels.FileChannel fc = null;                                // (JavaCodeGenerator.meta.java:991)
        try {                                                                   // (JavaCodeGenerator.meta.java:992)
            fis = new java.io.FileInputStream(file);                            // (JavaCodeGenerator.meta.java:993)
            if (charsetName == null)                                            // (JavaCodeGenerator.meta.java:994)
                reader = new java.io.InputStreamReader(fis);                    // (JavaCodeGenerator.meta.java:995)
            else                                                                // (JavaCodeGenerator.meta.java:996)
                reader = new java.io.InputStreamReader(fis, charsetName);       // (JavaCodeGenerator.meta.java:997)
            java.nio.charset.Charset charset;                                   // (JavaCodeGenerator.meta.java:998)
            try {                                                               // (JavaCodeGenerator.meta.java:999)
                charset = java.nio.charset.Charset.forName(reader.getEncoding());    // (JavaCodeGenerator.meta.java:1000)
            } catch(java.nio.charset.UnsupportedCharsetException x) {           // (JavaCodeGenerator.meta.java:1001)
                charset = null;                                                 // (JavaCodeGenerator.meta.java:1002)
            }                                                                   // (JavaCodeGenerator.meta.java:1003)
            if (charset != null) {                                              // (JavaCodeGenerator.meta.java:1004)
                java.nio.charset.CharsetDecoder decoder = charset.newDecoder();    // (JavaCodeGenerator.meta.java:1005)
                fc = fis.getChannel();                                          // (JavaCodeGenerator.meta.java:1006)
                int size = (int) fc.size();                                     // (JavaCodeGenerator.meta.java:1007)
                java.nio.MappedByteBuffer bb = fc.map(java.nio.channels.FileChannel.MapMode.READ_ONLY, 0, size);    // (JavaCodeGenerator.meta.java:1008)
                return decoder.decode(bb);                                      // (JavaCodeGenerator.meta.java:1009)
            } else {                                                            // (JavaCodeGenerator.meta.java:1010)
                long length = file.length();                                    // (JavaCodeGenerator.meta.java:1011)
                if (length <= 0)                                                // (JavaCodeGenerator.meta.java:1012)
                    length = 1;                                                 // (JavaCodeGenerator.meta.java:1013)
                else if (length > java.lang.Integer.MAX_VALUE)                  // (JavaCodeGenerator.meta.java:1014)
                    length = java.lang.Integer.MAX_VALUE;                       // (JavaCodeGenerator.meta.java:1015)
                java.lang.StringBuilder result = new java.lang.StringBuilder((int) length);    // (JavaCodeGenerator.meta.java:1016)
                char[] buffer = new char[1024];                                 // (JavaCodeGenerator.meta.java:1017)
                for(;;) {                                                       // (JavaCodeGenerator.meta.java:1018)
                    int size = reader.read(buffer);                             // (JavaCodeGenerator.meta.java:1019)
                    if (size < 0)                                               // (JavaCodeGenerator.meta.java:1020)
                        break;                                                  // (JavaCodeGenerator.meta.java:1021)
                    result.append(buffer, 0, size);                             // (JavaCodeGenerator.meta.java:1022)
                }                                                               // (JavaCodeGenerator.meta.java:1023)
                return result;                                                  // (JavaCodeGenerator.meta.java:1024)
            }                                                                   // (JavaCodeGenerator.meta.java:1025)
        } finally {                                                             // (JavaCodeGenerator.meta.java:1026)
            if (fc != null)                                                     // (JavaCodeGenerator.meta.java:1027)
                fc.close();                                                     // (JavaCodeGenerator.meta.java:1028)
            if (reader != null)                                                 // (JavaCodeGenerator.meta.java:1029)
                reader.close();                                                 // (JavaCodeGenerator.meta.java:1030)
            else if (fis != null)                                               // (JavaCodeGenerator.meta.java:1031)
                fis.close();                                                    // (JavaCodeGenerator.meta.java:1032)
        }                                                                       // (JavaCodeGenerator.meta.java:1033)
    }                                                                           // (JavaCodeGenerator.meta.java:1034)
    /**
     * Gets the <code>java.lang.CharSequence</code> that represents the text from the given character stream.
     * <p>
     * This method reads characters from the stream until the end of the stream has been reached, and returns the <code>java.lang.CharSequence</code> that represents the characters.
     *
     * @param   reader
     *      a character stream.  This method will not <code>close</code> it.
     * @return
     *      the <code>java.lang.CharSequence</code> that represents the text from the <code>reader</code>.
     * @throws   java.io.IOException
     *      if some error is occured for the access to the <code>reader</code>.
     * @since    notavaCC 1.0
     */
    protected final java.lang.CharSequence toCharSequence(java.io.Reader reader) throws java.io.IOException {    // (JavaCodeGenerator.meta.java:1096)
        java.lang.StringBuilder result = new java.lang.StringBuilder();         // (JavaCodeGenerator.meta.java:1097)
        char[] buffer = new char[1024];                                         // (JavaCodeGenerator.meta.java:1098)
        for (;;) {                                                              // (JavaCodeGenerator.meta.java:1099)
            int size = reader.read(buffer);                                     // (JavaCodeGenerator.meta.java:1100)
            if (size < 0)                                                       // (JavaCodeGenerator.meta.java:1101)
                break;                                                          // (JavaCodeGenerator.meta.java:1102)
            result.append(buffer, 0, size);                                     // (JavaCodeGenerator.meta.java:1103)
        }                                                                       // (JavaCodeGenerator.meta.java:1104)
        return result;                                                          // (JavaCodeGenerator.meta.java:1105)
    }                                                                           // (JavaCodeGenerator.meta.java:1106)
                                                                                // (JavaCodeGenerator.meta.java:1107)
                                                                                // (JavaCodeGenerator.meta.java:1108)
    /**
     * Creates a lexical analyzer.
     * <p>
     * @param   sourceName
     *      the name of the source, used only to set the result of {@link BVH_Parser.Token#getSourceName()}.
     * @param   text
     *      the text to analyze.
     * @param   tabStop
     *      the number that the tab character advances the cursor to the next column that is a multiple of.  <code>tabStop</code> is used only to set the result of {@link BVH_Parser.Token#getColumn()}.
     * @return
     *      the lexical analyzer that analyze the <code>text</code>.
     * @throws   ParseException
     *      if the text to parse doesn't satisfy some requirements.
     * @since    notavaCC 1.0
     */
    protected BVH_Parser.LexicalAnalyzer createLexicalAnalyzer(java.lang.String sourceName, java.lang.CharSequence text, int tabStop) throws ParseException {    // (JavaCodeGenerator.meta.java:1150)
        return new BVH_Parser.Default.LexicalAnalyzer(sourceName, text, tabStop);    // (JavaCodeGenerator.meta.java:1151)
    }                                                                           // (JavaCodeGenerator.meta.java:1152)
                                                                                // (JavaCodeGenerator.meta.java:1153)
                                                                                // (JavaCodeGenerator.meta.java:1154)
    /**
     * Contains <code>private</code> fields that is used in order to create a node.  The constructor is <code>private</code>.
     * <p>
     *
     * @since   notavaCC 1.0
     */
    protected static class NodeInitializationParameters {                       // (JavaCodeGenerator.meta.java:1171)
        private NodeInitializationParameters() {                                // (JavaCodeGenerator.meta.java:1172)
        }                                                                       // (JavaCodeGenerator.meta.java:1173)
        private Node[] childNodes;                                              // (JavaCodeGenerator.meta.java:1174)
        private java.util.List labelBitsList;                                   // (JavaCodeGenerator.meta.java:1175)
    }                                                                           // (JavaCodeGenerator.meta.java:1176)
    /**
     * A visitor.
     * <p>
     *
     * @see     BVH_Parser.Visitor#visitAll(BVH_Parser.Node)
     * @since   notavaCC 1.0
     */
    public static class Visitor {                                               // (JavaCodeGenerator.meta.java:1212)
                                                                                // (JavaCodeGenerator.meta.java:1213)
        /**
         * Traverses a (sub-)tree.
         * <p>
         * The default implementation is as follows.  The user can override the method and change the behavior at will.
         * <pre>
         * visitNode(node);
         *
         * java.util.Iterator it = node.getChildNodes().iterator();
         * while (it.hasNext()) {
         *     BVH_Parser.Node child = (BVH_Parser.Node) it.next();
         *     visitAll(child);
         * }
         * </pre>
         *
         * @param   node
         *      the root of the (sub-)tree to traverse.
         * @since   notavaCC 1.0
         */
        public void visitAll(BVH_Parser.Node node) {                            // (JavaCodeGenerator.meta.java:1253)
            visitNode(node);                                                    // (JavaCodeGenerator.meta.java:1254)
                                                                                // (JavaCodeGenerator.meta.java:1255)
            java.util.Iterator it = node.getChildNodes().iterator();            // (JavaCodeGenerator.meta.java:1256)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:1257)
                BVH_Parser.Node child = (BVH_Parser.Node) it.next();            // (JavaCodeGenerator.meta.java:1258)
                visitAll(child);                                                // (JavaCodeGenerator.meta.java:1259)
            }                                                                   // (JavaCodeGenerator.meta.java:1260)
        }                                                                       // (JavaCodeGenerator.meta.java:1261)
        /**
         * Call <code>visit</code>.
         * <p>
         * The default implementation is to call all the method, that is defined in this class, whose name is <code>visit</code>, and that can take <code>node</code> as the argument.  For example, if <code>node instanceof {@link BVH_Parser.Token}</code>, both of {@link #visit(BVH_Parser.Node)} and {@link #visit(BVH_Parser.Token)} is called.  The order of the call is undefined.  The user can override the method and change the behavior at will.
         *
         * @param   node
         *      a node.
         * @since   notavaCC 1.0
         */
        protected void visitNode(BVH_Parser.Node node) {                        // (JavaCodeGenerator.meta.java:1283)
            visit((BVH_Parser.Node) node);                                      // (JavaCodeGenerator.meta.java:1284)
                                                                                // (JavaCodeGenerator.meta.java:1285)
            if (node instanceof BVH_Parser.Token)                               // (JavaCodeGenerator.meta.java:1286)
                visit((BVH_Parser.Token) node);                                 // (JavaCodeGenerator.meta.java:1287)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Bvh)                                 // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Bvh) node);                                   // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Root)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Root) node);                                  // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Components)                          // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Components) node);                            // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Offset)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Offset) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Channels)                            // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Channels) node);                              // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.KindsOfChannel)                      // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.KindsOfChannel) node);                        // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joints)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joints) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joint)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joint) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.EndSite)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.EndSite) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Motion)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Motion) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Numbers)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Numbers) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Minus)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Minus) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Plus)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Plus) node);                                  // (JavaCodeGenerator.meta.java:1318)
        }                                                                       // (JavaCodeGenerator.meta.java:1336)
                                                                                // (JavaCodeGenerator.meta.java:1337)
        /**
         * Called for a visited node.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Node node) {                            // (JavaCodeGenerator.meta.java:1355)
        }                                                                       // (JavaCodeGenerator.meta.java:1356)
        /**
         * Called for a visited {@link BVH_Parser.Token}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Token node) {                           // (JavaCodeGenerator.meta.java:1374)
        }                                                                       // (JavaCodeGenerator.meta.java:1375)
        /**
         * Called for a visited {@link BVH_Parser.Bvh}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Bvh node) {                             // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Root}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Root node) {                            // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Components}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Components node) {                      // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Offset}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Offset node) {                          // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Channels}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Channels node) {                        // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.KindsOfChannel}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.KindsOfChannel node) {                  // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joints}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joints node) {                          // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joint}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joint node) {                           // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.EndSite}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.EndSite node) {                         // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Motion}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Motion node) {                          // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Numbers}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Numbers node) {                         // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Minus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Minus node) {                           // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Plus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Plus node) {                            // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
    }                                                                           // (JavaCodeGenerator.meta.java:1409)
    /**
     * A visitor.
     * <p>
     *
     * @see     BVH_Parser.Visitor#visitAll(BVH_Parser.Node)
     * @since   notavaCC 1.0
     */
    public static class Visitor1<X0 extends java.lang.Throwable> {              // (JavaCodeGenerator.meta.java:1212)
                                                                                // (JavaCodeGenerator.meta.java:1213)
        /**
         * Traverses a (sub-)tree.
         * <p>
         * The default implementation is as follows.  The user can override the method and change the behavior at will.
         * <pre>
         * visitNode(node);
         *
         * java.util.Iterator it = node.getChildNodes().iterator();
         * while (it.hasNext()) {
         *     BVH_Parser.Node child = (BVH_Parser.Node) it.next();
         *     visitAll(child);
         * }
         * </pre>
         *
         * @param   node
         *      the root of the (sub-)tree to traverse.
         * @since   notavaCC 1.0
         */
        public void visitAll(BVH_Parser.Node node) throws X0 {                  // (JavaCodeGenerator.meta.java:1253)
            visitNode(node);                                                    // (JavaCodeGenerator.meta.java:1254)
                                                                                // (JavaCodeGenerator.meta.java:1255)
            java.util.Iterator it = node.getChildNodes().iterator();            // (JavaCodeGenerator.meta.java:1256)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:1257)
                BVH_Parser.Node child = (BVH_Parser.Node) it.next();            // (JavaCodeGenerator.meta.java:1258)
                visitAll(child);                                                // (JavaCodeGenerator.meta.java:1259)
            }                                                                   // (JavaCodeGenerator.meta.java:1260)
        }                                                                       // (JavaCodeGenerator.meta.java:1261)
        /**
         * Call <code>visit</code>.
         * <p>
         * The default implementation is to call all the method, that is defined in this class, whose name is <code>visit</code>, and that can take <code>node</code> as the argument.  For example, if <code>node instanceof {@link BVH_Parser.Token}</code>, both of {@link #visit(BVH_Parser.Node)} and {@link #visit(BVH_Parser.Token)} is called.  The order of the call is undefined.  The user can override the method and change the behavior at will.
         *
         * @param   node
         *      a node.
         * @since   notavaCC 1.0
         */
        protected void visitNode(BVH_Parser.Node node) throws X0 {              // (JavaCodeGenerator.meta.java:1283)
            visit((BVH_Parser.Node) node);                                      // (JavaCodeGenerator.meta.java:1284)
                                                                                // (JavaCodeGenerator.meta.java:1285)
            if (node instanceof BVH_Parser.Token)                               // (JavaCodeGenerator.meta.java:1286)
                visit((BVH_Parser.Token) node);                                 // (JavaCodeGenerator.meta.java:1287)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Bvh)                                 // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Bvh) node);                                   // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Root)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Root) node);                                  // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Components)                          // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Components) node);                            // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Offset)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Offset) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Channels)                            // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Channels) node);                              // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.KindsOfChannel)                      // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.KindsOfChannel) node);                        // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joints)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joints) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joint)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joint) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.EndSite)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.EndSite) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Motion)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Motion) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Numbers)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Numbers) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Minus)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Minus) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Plus)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Plus) node);                                  // (JavaCodeGenerator.meta.java:1318)
        }                                                                       // (JavaCodeGenerator.meta.java:1336)
                                                                                // (JavaCodeGenerator.meta.java:1337)
        /**
         * Called for a visited node.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Node node) throws X0 {                  // (JavaCodeGenerator.meta.java:1355)
        }                                                                       // (JavaCodeGenerator.meta.java:1356)
        /**
         * Called for a visited {@link BVH_Parser.Token}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Token node) throws X0 {                 // (JavaCodeGenerator.meta.java:1374)
        }                                                                       // (JavaCodeGenerator.meta.java:1375)
        /**
         * Called for a visited {@link BVH_Parser.Bvh}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Bvh node) throws X0 {                   // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Root}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Root node) throws X0 {                  // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Components}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Components node) throws X0 {            // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Offset}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Offset node) throws X0 {                // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Channels}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Channels node) throws X0 {              // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.KindsOfChannel}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.KindsOfChannel node) throws X0 {        // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joints}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joints node) throws X0 {                // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joint}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joint node) throws X0 {                 // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.EndSite}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.EndSite node) throws X0 {               // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Motion}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Motion node) throws X0 {                // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Numbers}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Numbers node) throws X0 {               // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Minus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Minus node) throws X0 {                 // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Plus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Plus node) throws X0 {                  // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
    }                                                                           // (JavaCodeGenerator.meta.java:1409)
    /**
     * A visitor.
     * <p>
     *
     * @see     BVH_Parser.Visitor#visitAll(BVH_Parser.Node)
     * @since   notavaCC 1.0
     */
    public static class Visitor2<X0 extends java.lang.Throwable, X1 extends java.lang.Throwable> {    // (JavaCodeGenerator.meta.java:1212)
                                                                                // (JavaCodeGenerator.meta.java:1213)
        /**
         * Traverses a (sub-)tree.
         * <p>
         * The default implementation is as follows.  The user can override the method and change the behavior at will.
         * <pre>
         * visitNode(node);
         *
         * java.util.Iterator it = node.getChildNodes().iterator();
         * while (it.hasNext()) {
         *     BVH_Parser.Node child = (BVH_Parser.Node) it.next();
         *     visitAll(child);
         * }
         * </pre>
         *
         * @param   node
         *      the root of the (sub-)tree to traverse.
         * @since   notavaCC 1.0
         */
        public void visitAll(BVH_Parser.Node node) throws X0, X1 {              // (JavaCodeGenerator.meta.java:1253)
            visitNode(node);                                                    // (JavaCodeGenerator.meta.java:1254)
                                                                                // (JavaCodeGenerator.meta.java:1255)
            java.util.Iterator it = node.getChildNodes().iterator();            // (JavaCodeGenerator.meta.java:1256)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:1257)
                BVH_Parser.Node child = (BVH_Parser.Node) it.next();            // (JavaCodeGenerator.meta.java:1258)
                visitAll(child);                                                // (JavaCodeGenerator.meta.java:1259)
            }                                                                   // (JavaCodeGenerator.meta.java:1260)
        }                                                                       // (JavaCodeGenerator.meta.java:1261)
        /**
         * Call <code>visit</code>.
         * <p>
         * The default implementation is to call all the method, that is defined in this class, whose name is <code>visit</code>, and that can take <code>node</code> as the argument.  For example, if <code>node instanceof {@link BVH_Parser.Token}</code>, both of {@link #visit(BVH_Parser.Node)} and {@link #visit(BVH_Parser.Token)} is called.  The order of the call is undefined.  The user can override the method and change the behavior at will.
         *
         * @param   node
         *      a node.
         * @since   notavaCC 1.0
         */
        protected void visitNode(BVH_Parser.Node node) throws X0, X1 {          // (JavaCodeGenerator.meta.java:1283)
            visit((BVH_Parser.Node) node);                                      // (JavaCodeGenerator.meta.java:1284)
                                                                                // (JavaCodeGenerator.meta.java:1285)
            if (node instanceof BVH_Parser.Token)                               // (JavaCodeGenerator.meta.java:1286)
                visit((BVH_Parser.Token) node);                                 // (JavaCodeGenerator.meta.java:1287)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Bvh)                                 // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Bvh) node);                                   // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Root)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Root) node);                                  // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Components)                          // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Components) node);                            // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Offset)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Offset) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Channels)                            // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Channels) node);                              // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.KindsOfChannel)                      // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.KindsOfChannel) node);                        // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joints)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joints) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joint)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joint) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.EndSite)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.EndSite) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Motion)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Motion) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Numbers)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Numbers) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Minus)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Minus) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Plus)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Plus) node);                                  // (JavaCodeGenerator.meta.java:1318)
        }                                                                       // (JavaCodeGenerator.meta.java:1336)
                                                                                // (JavaCodeGenerator.meta.java:1337)
        /**
         * Called for a visited node.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Node node) throws X0, X1 {              // (JavaCodeGenerator.meta.java:1355)
        }                                                                       // (JavaCodeGenerator.meta.java:1356)
        /**
         * Called for a visited {@link BVH_Parser.Token}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Token node) throws X0, X1 {             // (JavaCodeGenerator.meta.java:1374)
        }                                                                       // (JavaCodeGenerator.meta.java:1375)
        /**
         * Called for a visited {@link BVH_Parser.Bvh}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Bvh node) throws X0, X1 {               // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Root}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Root node) throws X0, X1 {              // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Components}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Components node) throws X0, X1 {        // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Offset}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Offset node) throws X0, X1 {            // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Channels}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Channels node) throws X0, X1 {          // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.KindsOfChannel}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.KindsOfChannel node) throws X0, X1 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joints}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joints node) throws X0, X1 {            // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joint}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joint node) throws X0, X1 {             // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.EndSite}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.EndSite node) throws X0, X1 {           // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Motion}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Motion node) throws X0, X1 {            // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Numbers}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Numbers node) throws X0, X1 {           // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Minus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Minus node) throws X0, X1 {             // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Plus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Plus node) throws X0, X1 {              // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
    }                                                                           // (JavaCodeGenerator.meta.java:1409)
    /**
     * A visitor.
     * <p>
     *
     * @see     BVH_Parser.Visitor#visitAll(BVH_Parser.Node)
     * @since   notavaCC 1.0
     */
    public static class Visitor3<X0 extends java.lang.Throwable, X1 extends java.lang.Throwable, X2 extends java.lang.Throwable> {    // (JavaCodeGenerator.meta.java:1212)
                                                                                // (JavaCodeGenerator.meta.java:1213)
        /**
         * Traverses a (sub-)tree.
         * <p>
         * The default implementation is as follows.  The user can override the method and change the behavior at will.
         * <pre>
         * visitNode(node);
         *
         * java.util.Iterator it = node.getChildNodes().iterator();
         * while (it.hasNext()) {
         *     BVH_Parser.Node child = (BVH_Parser.Node) it.next();
         *     visitAll(child);
         * }
         * </pre>
         *
         * @param   node
         *      the root of the (sub-)tree to traverse.
         * @since   notavaCC 1.0
         */
        public void visitAll(BVH_Parser.Node node) throws X0, X1, X2 {          // (JavaCodeGenerator.meta.java:1253)
            visitNode(node);                                                    // (JavaCodeGenerator.meta.java:1254)
                                                                                // (JavaCodeGenerator.meta.java:1255)
            java.util.Iterator it = node.getChildNodes().iterator();            // (JavaCodeGenerator.meta.java:1256)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:1257)
                BVH_Parser.Node child = (BVH_Parser.Node) it.next();            // (JavaCodeGenerator.meta.java:1258)
                visitAll(child);                                                // (JavaCodeGenerator.meta.java:1259)
            }                                                                   // (JavaCodeGenerator.meta.java:1260)
        }                                                                       // (JavaCodeGenerator.meta.java:1261)
        /**
         * Call <code>visit</code>.
         * <p>
         * The default implementation is to call all the method, that is defined in this class, whose name is <code>visit</code>, and that can take <code>node</code> as the argument.  For example, if <code>node instanceof {@link BVH_Parser.Token}</code>, both of {@link #visit(BVH_Parser.Node)} and {@link #visit(BVH_Parser.Token)} is called.  The order of the call is undefined.  The user can override the method and change the behavior at will.
         *
         * @param   node
         *      a node.
         * @since   notavaCC 1.0
         */
        protected void visitNode(BVH_Parser.Node node) throws X0, X1, X2 {      // (JavaCodeGenerator.meta.java:1283)
            visit((BVH_Parser.Node) node);                                      // (JavaCodeGenerator.meta.java:1284)
                                                                                // (JavaCodeGenerator.meta.java:1285)
            if (node instanceof BVH_Parser.Token)                               // (JavaCodeGenerator.meta.java:1286)
                visit((BVH_Parser.Token) node);                                 // (JavaCodeGenerator.meta.java:1287)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Bvh)                                 // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Bvh) node);                                   // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Root)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Root) node);                                  // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Components)                          // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Components) node);                            // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Offset)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Offset) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Channels)                            // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Channels) node);                              // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.KindsOfChannel)                      // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.KindsOfChannel) node);                        // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joints)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joints) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joint)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joint) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.EndSite)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.EndSite) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Motion)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Motion) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Numbers)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Numbers) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Minus)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Minus) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Plus)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Plus) node);                                  // (JavaCodeGenerator.meta.java:1318)
        }                                                                       // (JavaCodeGenerator.meta.java:1336)
                                                                                // (JavaCodeGenerator.meta.java:1337)
        /**
         * Called for a visited node.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Node node) throws X0, X1, X2 {          // (JavaCodeGenerator.meta.java:1355)
        }                                                                       // (JavaCodeGenerator.meta.java:1356)
        /**
         * Called for a visited {@link BVH_Parser.Token}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Token node) throws X0, X1, X2 {         // (JavaCodeGenerator.meta.java:1374)
        }                                                                       // (JavaCodeGenerator.meta.java:1375)
        /**
         * Called for a visited {@link BVH_Parser.Bvh}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Bvh node) throws X0, X1, X2 {           // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Root}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Root node) throws X0, X1, X2 {          // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Components}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Components node) throws X0, X1, X2 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Offset}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Offset node) throws X0, X1, X2 {        // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Channels}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Channels node) throws X0, X1, X2 {      // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.KindsOfChannel}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.KindsOfChannel node) throws X0, X1, X2 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joints}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joints node) throws X0, X1, X2 {        // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joint}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joint node) throws X0, X1, X2 {         // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.EndSite}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.EndSite node) throws X0, X1, X2 {       // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Motion}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Motion node) throws X0, X1, X2 {        // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Numbers}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Numbers node) throws X0, X1, X2 {       // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Minus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Minus node) throws X0, X1, X2 {         // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Plus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Plus node) throws X0, X1, X2 {          // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
    }                                                                           // (JavaCodeGenerator.meta.java:1409)
    /**
     * A visitor.
     * <p>
     *
     * @see     BVH_Parser.Visitor#visitAll(BVH_Parser.Node)
     * @since   notavaCC 1.0
     */
    public static class Visitor4<X0 extends java.lang.Throwable, X1 extends java.lang.Throwable, X2 extends java.lang.Throwable, X3 extends java.lang.Throwable> {    // (JavaCodeGenerator.meta.java:1212)
                                                                                // (JavaCodeGenerator.meta.java:1213)
        /**
         * Traverses a (sub-)tree.
         * <p>
         * The default implementation is as follows.  The user can override the method and change the behavior at will.
         * <pre>
         * visitNode(node);
         *
         * java.util.Iterator it = node.getChildNodes().iterator();
         * while (it.hasNext()) {
         *     BVH_Parser.Node child = (BVH_Parser.Node) it.next();
         *     visitAll(child);
         * }
         * </pre>
         *
         * @param   node
         *      the root of the (sub-)tree to traverse.
         * @since   notavaCC 1.0
         */
        public void visitAll(BVH_Parser.Node node) throws X0, X1, X2, X3 {      // (JavaCodeGenerator.meta.java:1253)
            visitNode(node);                                                    // (JavaCodeGenerator.meta.java:1254)
                                                                                // (JavaCodeGenerator.meta.java:1255)
            java.util.Iterator it = node.getChildNodes().iterator();            // (JavaCodeGenerator.meta.java:1256)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:1257)
                BVH_Parser.Node child = (BVH_Parser.Node) it.next();            // (JavaCodeGenerator.meta.java:1258)
                visitAll(child);                                                // (JavaCodeGenerator.meta.java:1259)
            }                                                                   // (JavaCodeGenerator.meta.java:1260)
        }                                                                       // (JavaCodeGenerator.meta.java:1261)
        /**
         * Call <code>visit</code>.
         * <p>
         * The default implementation is to call all the method, that is defined in this class, whose name is <code>visit</code>, and that can take <code>node</code> as the argument.  For example, if <code>node instanceof {@link BVH_Parser.Token}</code>, both of {@link #visit(BVH_Parser.Node)} and {@link #visit(BVH_Parser.Token)} is called.  The order of the call is undefined.  The user can override the method and change the behavior at will.
         *
         * @param   node
         *      a node.
         * @since   notavaCC 1.0
         */
        protected void visitNode(BVH_Parser.Node node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1283)
            visit((BVH_Parser.Node) node);                                      // (JavaCodeGenerator.meta.java:1284)
                                                                                // (JavaCodeGenerator.meta.java:1285)
            if (node instanceof BVH_Parser.Token)                               // (JavaCodeGenerator.meta.java:1286)
                visit((BVH_Parser.Token) node);                                 // (JavaCodeGenerator.meta.java:1287)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Bvh)                                 // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Bvh) node);                                   // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Root)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Root) node);                                  // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Components)                          // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Components) node);                            // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Offset)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Offset) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Channels)                            // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Channels) node);                              // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.KindsOfChannel)                      // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.KindsOfChannel) node);                        // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joints)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joints) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Joint)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Joint) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.EndSite)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.EndSite) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Motion)                              // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Motion) node);                                // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Numbers)                             // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Numbers) node);                               // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Minus)                               // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Minus) node);                                 // (JavaCodeGenerator.meta.java:1318)
                                                                                // (JavaCodeGenerator.meta.java:1309)
            if (node instanceof BVH_Parser.Plus)                                // (JavaCodeGenerator.meta.java:1317)
                visit((BVH_Parser.Plus) node);                                  // (JavaCodeGenerator.meta.java:1318)
        }                                                                       // (JavaCodeGenerator.meta.java:1336)
                                                                                // (JavaCodeGenerator.meta.java:1337)
        /**
         * Called for a visited node.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Node node) throws X0, X1, X2, X3 {      // (JavaCodeGenerator.meta.java:1355)
        }                                                                       // (JavaCodeGenerator.meta.java:1356)
        /**
         * Called for a visited {@link BVH_Parser.Token}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Token node) throws X0, X1, X2, X3 {     // (JavaCodeGenerator.meta.java:1374)
        }                                                                       // (JavaCodeGenerator.meta.java:1375)
        /**
         * Called for a visited {@link BVH_Parser.Bvh}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Bvh node) throws X0, X1, X2, X3 {       // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Root}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Root node) throws X0, X1, X2, X3 {      // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Components}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Components node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Offset}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Offset node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Channels}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Channels node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.KindsOfChannel}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.KindsOfChannel node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joints}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joints node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Joint}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Joint node) throws X0, X1, X2, X3 {     // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.EndSite}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.EndSite node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Motion}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Motion node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Numbers}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Numbers node) throws X0, X1, X2, X3 {    // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Minus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Minus node) throws X0, X1, X2, X3 {     // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
        /**
         * Called for a visited {@link BVH_Parser.Plus}.
         * <p>
         *
         * @param   node
         *      a visited node.
         * @see      #visitAll
         * @since    notavaCC 1.0
         */
        protected void visit(BVH_Parser.Plus node) throws X0, X1, X2, X3 {      // (JavaCodeGenerator.meta.java:1404)
        }                                                                       // (JavaCodeGenerator.meta.java:1405)
    }                                                                           // (JavaCodeGenerator.meta.java:1409)
                                                                                // (JavaCodeGenerator.meta.java:1412)
                                                                                // (JavaCodeGenerator.meta.java:1413)
    /**
     * A node of the abstract syntax tree that is the result of parsing.
     * <p>
     *
     * @since   notavaCC 1.0
     */
    public static interface Node {                                              // (JavaCodeGenerator.meta.java:1440)
        public static class ConcreteList extends java.util.LinkedList<Node> {    // (JavaCodeGenerator.meta.java:1442)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:1443)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:1444)
            }                                                                   // (JavaCodeGenerator.meta.java:1445)
            public ConcreteList(java.util.Collection<? extends Node> c) {       // (JavaCodeGenerator.meta.java:1446)
                super(c);                                                       // (JavaCodeGenerator.meta.java:1447)
            }                                                                   // (JavaCodeGenerator.meta.java:1448)
        }                                                                       // (JavaCodeGenerator.meta.java:1449)
        /**
         * Returns the list of the child nodes of <code>this</code>.
         *
         * @return  the list of the child nodes of <code>this</code>.
         * @since   notavaCC 1.0
         */
        public java.util.List<BVH_Parser.Node> getChildNodes();                 // (JavaCodeGenerator.meta.java:1475)
                                                                                // (JavaCodeGenerator.meta.java:1476)
        public AmbiguityAbsorber getWrappedAmbiguityAbsorber();                 // (JavaCodeGenerator.meta.java:1479)
    } // interface Node                                                         // (JavaCodeGenerator.meta.java:1481)
                                                                                // (JavaCodeGenerator.meta.java:1482)
    /**
     * A token, which is a fragment of a parsed text.
     * <p>
     * A token is a fragment of a parsed text (a source).  Tokens are usually constructed by {@link BVH_Parser.LexicalAnalyzer}s.  This class introduces the methods that represent what is the source of the token and where the token is placed in the source ({@link #getSourceName}, {@link #getIndex}, {@link #getLine}, {@link #getColumn}), however, the strict specification of the returned value is defined by the generator of the token, e.g., <code>LexicalAnalyzer</code>s.  Also, these methods may be unsuported and may throw {@link java.lang.UnsupportedOperationException}.
     *
     * @since   notavaCC 1.0
     */
    public static interface Token extends Node {                                // (JavaCodeGenerator.meta.java:1502)
        public static class ConcreteList extends java.util.LinkedList<Token> {    // (JavaCodeGenerator.meta.java:1504)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:1505)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:1506)
            }                                                                   // (JavaCodeGenerator.meta.java:1507)
            public ConcreteList(java.util.Collection<? extends Token> c) {      // (JavaCodeGenerator.meta.java:1508)
                super(c);                                                       // (JavaCodeGenerator.meta.java:1509)
            }                                                                   // (JavaCodeGenerator.meta.java:1510)
        }                                                                       // (JavaCodeGenerator.meta.java:1511)
        /**
         * Returns the kind of <code>this</code> token.
         * <p>
         * The result value should be one of the following:</p>
         *
         * <table border=1>
         * <tr><th>value</th><th>described token</th></tr>
         * <tr>
         *   <td>{@link BVH_Parser#EOF_TOKEN}</td>
         *   <td><tt>&lt;EOF&gt;</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_SPACE}</td>
         *   <td><tt>SPACE</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_NUMBER}</td>
         *   <td><tt>NUMBER</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_REAL}</td>
         *   <td><tt>REAL</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_IDENTIFIER}</td>
         *   <td><tt>IDENTIFIER</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_NUMBERS}</td>
         *   <td><tt>NUMBERS</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_HIERARCHY}</td>
         *   <td><tt>HIERARCHY</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_ROOT}</td>
         *   <td><tt>ROOT</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_OFFSET}</td>
         *   <td><tt>OFFSET</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_CHANNELS}</td>
         *   <td><tt>CHANNELS</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_JOINT}</td>
         *   <td><tt>JOINT</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_END}</td>
         *   <td><tt>END</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_SITE}</td>
         *   <td><tt>SITE</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_MOTION}</td>
         *   <td><tt>MOTION</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_FRAMES}</td>
         *   <td><tt>FRAMES</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_FRAME}</td>
         *   <td><tt>FRAME</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link BVH_Parser#TOKEN_TIME}</td>
         *   <td><tt>TIME</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link 17}</td>
         *   <td><tt>&quot;-&quot;</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link 18}</td>
         *   <td><tt>&quot;:&quot;</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link 19}</td>
         *   <td><tt>&quot;{&quot;</tt></td>
         * </tr>
         * <tr>
         *   <td>{@link 20}</td>
         *   <td><tt>&quot;}&quot;</tt></td>
         * </tr>
         * </table>
         *
         * @return  the kind of <code>this</code> token.
         * @since   notavaCC 1.0
         */
        public int getSymbolID();                                               // (JavaCodeGenerator.meta.java:1572)
                                                                                // (JavaCodeGenerator.meta.java:1573)
        /**
         * Returnds <code>true</code> if <code>this</code> is a white token.
         * <p>
         * This method returns <code>true</code> if and only if <code>getSymbolID()</code> is one of the following:
         * <ul>
         *   <td>{@link BVH_Parser#TOKEN_SPACE}</td>
         * </ul>
         *
         * @return  <code>true</code> if <code>this</code> is a while token.
         * @since   notavaCC 1.0
         */
        public boolean isWhite();                                               // (JavaCodeGenerator.meta.java:1623)
                                                                                // (JavaCodeGenerator.meta.java:1624)
        /**
         * Returns the string <code>this</code> token corresponds to.
         * <p>
         * If the string contains some meta notation like Unicode escapes, the returned value is the represented string (e.g., A) rather than the representation (e.g., \u005Cu0041).  If not, the returned value is the same as {@link #getOriginalImage()}.
         *
         * @return  the string <code>this</code> token corresponds to.
         * @see     BVH_Parser.Token#getOriginalImage()
         * @since   notavaCC 1.0
         */
        public java.lang.String getImage();                                     // (JavaCodeGenerator.meta.java:1646)
                                                                                // (JavaCodeGenerator.meta.java:1647)
        /**
         * Returns the string <code>this</code> token corresponds to.
         * <p>
         * If the string contains some meta notation like Unicode escapes, the returned value is the representation (e.g., \u005Cu0041) rather than the represented string (e.g., A).  If not, the returned value is the same as {@link #getImage()}.
         *
         * @return  the string <code>this</code> token corresponds to.
         * @see     BVH_Parser.Token#getImage()
         * @since   notavaCC 1.0
         */
        public java.lang.String getOriginalImage();                             // (JavaCodeGenerator.meta.java:1669)
                                                                                // (JavaCodeGenerator.meta.java:1670)
        /**
         * Returns the source name <code>this</code> token coressponds to.
         *
         * @return  the source name <code>this</code> token coressponds to.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public java.lang.String getSourceName() throws java.lang.UnsupportedOperationException;    // (JavaCodeGenerator.meta.java:1690)
                                                                                // (JavaCodeGenerator.meta.java:1691)
        /**
         * Returns the zero-based index number in the source where <code>this</code> token begins.
         *
         * @return  the index number in the source where <code>this</code> token begins.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public int getIndex() throws java.lang.UnsupportedOperationException;    // (JavaCodeGenerator.meta.java:1711)
        /**
         * Returns the one-based line number in the source where <code>this</code> token begins.
         *
         * @return  the line number in the source where <code>this</code> token begins.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public int getLine() throws java.lang.UnsupportedOperationException;    // (JavaCodeGenerator.meta.java:1731)
        /**
         * Returns the one-based column number in the source where <code>this</code> token begins.
         *
         * @return  the column number in the source where <code>this</code> token begins.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public int getColumn() throws java.lang.UnsupportedOperationException;    // (JavaCodeGenerator.meta.java:1751)
                                                                                // (JavaCodeGenerator.meta.java:1752)
        /**
         * Returns the {@linkplain #getOriginalImage image} and the position of <code>this</code> token if supported.
         * For instance, <code>`identifier' (line 2, column 3)</code> or <code>`identifier'</code>.
         * The format is not specified strictly.
         *
         * @return  the {@linkplain #getOriginalImage image} and the parenthesized position of <code>this</code> token.
         * @since   notavaCC 1.0
         */
        public java.lang.String toString();                                     // (JavaCodeGenerator.meta.java:1771)
    } // interface Token                                                        // (JavaCodeGenerator.meta.java:1772)
                                                                                // (JavaCodeGenerator.meta.java:1773)
                                                                                // (JavaCodeGenerator.meta.java:1774)
    /**
     * Generator of a sequence of {@link BVH_Parser.Token}s.
     *
     * @since   notavaCC 1.0
     */
    public static abstract class LexicalAnalyzer {                              // (JavaCodeGenerator.meta.java:1789)
        /**
         * Returns the next token in the sequence.
         * <p>
         * If there is no tokens, the {@linkplain BVH_Parser.Token#getSymbolID() symbol ID} of the returned value should be {@link BVH_Parser#EOF_TOKEN}, but the {@linkplain BVH_Parser.Token#getImage() image} or the {@linkplain BVH_Parser.Token#getIndex() index} etc. are not specified (may be {@linkplain java.lang.UnsupportedOperationException unsupported}).
         *
         * @return  the next token in the sequence.
         * @since   notavaCC 1.0
         */
        public abstract Token next() throws ParseException;                     // (JavaCodeGenerator.meta.java:1809)
    } // LexicalAnalyzer                                                        // (JavaCodeGenerator.meta.java:1810)
                                                                                // (JavaCodeGenerator.meta.java:1811)
                                                                                // (JavaCodeGenerator.meta.java:1812)
    public static interface AmbiguityAbsorber extends Node {                    // (JavaCodeGenerator.meta.java:1815)
    }                                                                           // (JavaCodeGenerator.meta.java:1816)
                                                                                // (JavaCodeGenerator.meta.java:1817)
                                                                                // (JavaCodeGenerator.meta.java:1847)
    /**
     * Parses a <code>Bvh</code> in the given file.
     * <p>
     * This is equivalent to <code>parseBvh(file.getPath(), file, charsetName, 8)</code>.
     *
     * @param   file
     *      the file including the text to parse.
     * @param   charsetName
     *      the charset name of the file, or <code>null</code> for the default charset.
     * @return
     *      the abstract syntax tree.
     * @throws   java.io.IOException
     *      if some error is occured for the access to the file.
     * @throws   ParseException
     *      if the text in the file doesn't satisfy some requirements.
     */
    public BVH_Parser.Bvh parseBvh(java.io.File file, java.lang.String charsetName) throws java.io.IOException, ParseException {    // (JavaCodeGenerator.meta.java:1912)
        return parseBvh(file.getPath(), file, charsetName, 8);                  // (JavaCodeGenerator.meta.java:1913)
    }                                                                           // (JavaCodeGenerator.meta.java:1914)
                                                                                // (JavaCodeGenerator.meta.java:1915)
    /**
     * Parses a <code>Bvh</code> in the given file.
     *
     * @param   sourceName
     *      the name of the source, used only to set the result of {@link BVH_Parser.Token#getSourceName()}.
     * @param   file
     *      the file including the text to parse.
     * @param   charsetName
     *      the charset name of the file, or <code>null</code> for the default charset.
     * @param   tabStop
     *      the number that the tab character advances the cursor to the next column that is a multiple of.  <code>tabStop</code> is used only to set the result of {@link BVH_Parser.Token#getColumn()}.
     * @return
     *      the abstract syntax tree.
     * @throws   java.io.IOException
     *      if some error is occured for the access to the file.
     * @throws   ParseException
     *      if the text in the file doesn't satisfy some requirements.
     */
    public BVH_Parser.Bvh parseBvh(java.lang.String sourceName, java.io.File file, java.lang.String charsetName, int tabStop) throws java.io.IOException, ParseException {    // (JavaCodeGenerator.meta.java:1971)
        return parseBvh(sourceName, toCharSequence(file, charsetName), tabStop);    // (JavaCodeGenerator.meta.java:1972)
    }                                                                           // (JavaCodeGenerator.meta.java:1973)
                                                                                // (JavaCodeGenerator.meta.java:1974)
    /**
     * Parses a <code>Bvh</code> in the given character stream.
     *
     * @param   sourceName
     *      the name of the source, used only to set the result of {@link BVH_Parser.Token#getSourceName()}.
     * @param   reader
     *      a character stream.  This method will not <code>close</code> it.
     * @param   tabStop
     *      the number that the tab character advances the cursor to the next column that is a multiple of.  <code>tabStop</code> is used only to set the result of {@link BVH_Parser.Token#getColumn()}.
     * @return
     *      the abstract syntax tree.
     * @throws   java.io.IOException
     *      if some error is occured for the access to the file.
     * @throws   ParseException
     *      if the text in the file doesn't satisfy some requirements.
     */
    public BVH_Parser.Bvh parseBvh(java.lang.String sourceName, java.io.Reader reader, int tabStop) throws java.io.IOException, ParseException {    // (JavaCodeGenerator.meta.java:2027)
        return parseBvh(sourceName, toCharSequence(reader), tabStop);           // (JavaCodeGenerator.meta.java:2028)
    }                                                                           // (JavaCodeGenerator.meta.java:2029)
                                                                                // (JavaCodeGenerator.meta.java:2030)
    /**
     * Parses a <code>Bvh</code> in the given text.
     *
     * @param   sourceName
     *      the name of the source, used only to set the result of {@link BVH_Parser.Token#getSourceName()}.
     * @param   text
     *      the text to parse.
     * @param   tabStop
     *      the number that the tab character advances the cursor to the next column that is a multiple of.  <code>tabStop</code> is used only to set the result of {@link BVH_Parser.Token#getColumn()}.
     * @return
     *      the abstract syntax tree.
     * @throws   ParseException
     *      if the text doesn't satisfy some requirements.
     */
    public BVH_Parser.Bvh parseBvh(java.lang.String sourceName, java.lang.CharSequence text, int tabStop) throws ParseException {    // (JavaCodeGenerator.meta.java:2078)
        BVH_Parser.LexicalAnalyzer analyzer = createLexicalAnalyzer(sourceName, text, tabStop);    // (JavaCodeGenerator.meta.java:2079)
        return parseBvh(analyzer);                                              // (JavaCodeGenerator.meta.java:2080)
    }                                                                           // (JavaCodeGenerator.meta.java:2081)
                                                                                // (JavaCodeGenerator.meta.java:2082)
    /**
     * Parses the sequence of tokens.
     *
     * @param   analyzer
     *      the lexical analyzer that gives the sequence of tokens to parse.
     * @return
     *      the abstract syntax tree.
     * @throws   ParseException
     *      if the sequence of tokens doesn't satisfy some requirements.
     */
    public BVH_Parser.Bvh parseBvh(BVH_Parser.LexicalAnalyzer analyzer) throws ParseException {    // (JavaCodeGenerator.meta.java:2122)
        int initialState = 1;                                                   // (JavaCodeGenerator.meta.java:2123)
                                                                                // (JavaCodeGenerator.meta.java:2124)
        BVH_Parser.Bvh result;                                                  // (JavaCodeGenerator.meta.java:2126)
        BVH_Parser.Node node = __parse__notavacc_reserved(analyzer, initialState);    // (JavaCodeGenerator.meta.java:2127)
        if (node instanceof BVH_Parser.Bvh) {                                   // (JavaCodeGenerator.meta.java:2128)
            result = (BVH_Parser.Bvh) node;                                     // (JavaCodeGenerator.meta.java:2129)
        } else {                                                                // (JavaCodeGenerator.meta.java:2130)
            result = (BVH_Parser.Bvh) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Bvh.class);    // (JavaCodeGenerator.meta.java:2134)
        }                                                                       // (JavaCodeGenerator.meta.java:2137)
                                                                                // (JavaCodeGenerator.meta.java:2141)
        return (BVH_Parser.Bvh) modifyWholeTree(result);                        // (JavaCodeGenerator.meta.java:2142)
    }                                                                           // (JavaCodeGenerator.meta.java:2143)
    /**
     * An abstract-syntax-tree node <code>Bvh</code>.
     *
     *
     */
    public static interface Bvh extends BVH_Parser.Node {                       // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 21;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Bvh> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Bvh> c) {        // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Root root();                                          // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.Motion motion();                                      // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Root</code>.
     *
     *
     */
    public static interface Root extends BVH_Parser.Node {                      // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 22;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Root> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Root> c) {       // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Token name();                                         // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.Components coms();                                    // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Components</code>.
     *
     *
     */
    public static interface Components extends BVH_Parser.Node {                // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 27;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Components> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Components> c) {    // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Offset offset();                                      // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.Channels channels();                                  // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.Joints joints();                                      // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Offset</code>.
     *
     *
     */
    public static interface Offset extends BVH_Parser.Node {                    // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 28;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Offset> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Offset> c) {     // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Numbers numbers();                                    // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Channels</code>.
     *
     *
     */
    public static interface Channels extends BVH_Parser.Node {                  // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 29;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Channels> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Channels> c) {    // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Node d();                                             // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.KindsOfChannel kinds();                               // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>KindsOfChannel</code>.
     *
     *
     */
    public static interface KindsOfChannel extends BVH_Parser.Node {            // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 33;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<KindsOfChannel> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends KindsOfChannel> c) {    // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Token d1();                                           // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.KindsOfChannel next();                                // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Joints</code>.
     *
     *
     */
    public static interface Joints extends BVH_Parser.Node {                    // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 30;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Joints> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Joints> c) {     // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Node joint();                                         // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.Joints next();                                        // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Joint</code>.
     *
     *
     */
    public static interface Joint extends BVH_Parser.Node {                     // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 31;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Joint> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Joint> c) {      // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Token name();                                         // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.Components coms();                                    // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>EndSite</code>.
     *
     *
     */
    public static interface EndSite extends BVH_Parser.Node {                   // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 32;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<EndSite> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends EndSite> c) {    // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Offset offset();                                      // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Motion</code>.
     *
     *
     */
    public static interface Motion extends BVH_Parser.Node {                    // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 23;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Motion> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Motion> c) {     // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Node frame();                                         // (JavaCodeGenerator.meta.java:2276)
        /**
         */
        public BVH_Parser.Numbers numbers();                                    // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Numbers</code>.
     *
     *
     */
    public static interface Numbers extends BVH_Parser.Node {                   // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 26;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Numbers> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Numbers> c) {    // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Token d();                                            // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Minus</code>.
     *
     *
     */
    public static interface Minus extends BVH_Parser.Node {                     // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 24;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Minus> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Minus> c) {      // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Token data();                                         // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
    /**
     * An abstract-syntax-tree node <code>Plus</code>.
     *
     *
     */
    public static interface Plus extends BVH_Parser.Node {                      // (JavaCodeGenerator.meta.java:2185)
        /**
         * The ID value of the type.
         * @see     BVH_Parser#createNode
         * @since   notavaCC 1.0
         */
        public static final int ID = 25;                                        // (JavaCodeGenerator.meta.java:2207)
        public static class ConcreteList extends java.util.LinkedList<Plus> {    // (JavaCodeGenerator.meta.java:2210)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2211)
            public ConcreteList() {                                             // (JavaCodeGenerator.meta.java:2212)
            }                                                                   // (JavaCodeGenerator.meta.java:2213)
            public ConcreteList(java.util.Collection<? extends Plus> c) {       // (JavaCodeGenerator.meta.java:2214)
                super(c);                                                       // (JavaCodeGenerator.meta.java:2215)
            }                                                                   // (JavaCodeGenerator.meta.java:2216)
        }                                                                       // (JavaCodeGenerator.meta.java:2217)
        /**
         */
        public BVH_Parser.Token data();                                         // (JavaCodeGenerator.meta.java:2276)
    }                                                                           // (JavaCodeGenerator.meta.java:2278)
                                                                                // (JavaCodeGenerator.meta.java:2281)
                                                                                // (JavaCodeGenerator.meta.java:2282)
    /**
     * Describes a error of a text.
     *
     * @since   notavaCC 1.0
     */
    public static class ParseException extends java.lang.Exception {            // (JavaCodeGenerator.meta.java:2305)
        private static final long serialVersionUID = 0;                         // (JavaCodeGenerator.meta.java:2306)
        private final java.lang.String sourceName;                              // (JavaCodeGenerator.meta.java:2307)
        private final int index;                                                // (JavaCodeGenerator.meta.java:2308)
        private final int line;                                                 // (JavaCodeGenerator.meta.java:2309)
        private final int column;                                               // (JavaCodeGenerator.meta.java:2310)
                                                                                // (JavaCodeGenerator.meta.java:2311)
        /**
         * Constructs an exception.
         *
         * @param   msg
         *            a message to describes the error.
         * @param   sourceName
         *            the source name where the exception is occured, or null if not supported.
         * @param   index
         *            the index number where the exception is occured, or -1 if not supported.
         * @param   line
         *            the line number where the exception is occured, or -1 if not supported.
         * @param   column
         *            the column number where the exception is occured, or -1 if not supported.
         * @since   notavaCC 1.0
         */
        public ParseException(java.lang.String msg, java.lang.String sourceName, int index, int line, int column) {    // (JavaCodeGenerator.meta.java:2345)
            super(msg);                                                         // (JavaCodeGenerator.meta.java:2346)
            this.sourceName = sourceName;                                       // (JavaCodeGenerator.meta.java:2347)
            this.index = index;                                                 // (JavaCodeGenerator.meta.java:2348)
            this.line = line;                                                   // (JavaCodeGenerator.meta.java:2349)
            this.column = column;                                               // (JavaCodeGenerator.meta.java:2350)
        }                                                                       // (JavaCodeGenerator.meta.java:2351)
        /**
         * Constructs an exception.
         *
         * @param   msg
         *            a message to describes the error.
         * @param   position
         *            a token that describes the position of the error.
         * @since   notavaCC 1.0
         */
        public ParseException(java.lang.String msg, BVH_Parser.Token position) {    // (JavaCodeGenerator.meta.java:2373)
            super(msg);                                                         // (JavaCodeGenerator.meta.java:2374)
                                                                                // (JavaCodeGenerator.meta.java:2375)
            java.lang.String sourceName = null;                                 // (JavaCodeGenerator.meta.java:2376)
            int index = -1;                                                     // (JavaCodeGenerator.meta.java:2377)
            int line = -1;                                                      // (JavaCodeGenerator.meta.java:2378)
            int column = -1;                                                    // (JavaCodeGenerator.meta.java:2379)
                                                                                // (JavaCodeGenerator.meta.java:2380)
            try {                                                               // (JavaCodeGenerator.meta.java:2381)
                sourceName = position.getSourceName();                          // (JavaCodeGenerator.meta.java:2382)
            } catch (java.lang.UnsupportedOperationException x) {               // (JavaCodeGenerator.meta.java:2383)
            }                                                                   // (JavaCodeGenerator.meta.java:2384)
            try {                                                               // (JavaCodeGenerator.meta.java:2385)
                index = position.getIndex();                                    // (JavaCodeGenerator.meta.java:2386)
            } catch (java.lang.UnsupportedOperationException x) {               // (JavaCodeGenerator.meta.java:2387)
            }                                                                   // (JavaCodeGenerator.meta.java:2388)
            try {                                                               // (JavaCodeGenerator.meta.java:2389)
                line = position.getLine();                                      // (JavaCodeGenerator.meta.java:2390)
            } catch (java.lang.UnsupportedOperationException x) {               // (JavaCodeGenerator.meta.java:2391)
            }                                                                   // (JavaCodeGenerator.meta.java:2392)
            try {                                                               // (JavaCodeGenerator.meta.java:2393)
                column = position.getColumn();                                  // (JavaCodeGenerator.meta.java:2394)
            } catch (java.lang.UnsupportedOperationException x) {               // (JavaCodeGenerator.meta.java:2395)
            }                                                                   // (JavaCodeGenerator.meta.java:2396)
                                                                                // (JavaCodeGenerator.meta.java:2397)
            this.sourceName = sourceName;                                       // (JavaCodeGenerator.meta.java:2398)
            this.index = index;                                                 // (JavaCodeGenerator.meta.java:2399)
            this.line = line;                                                   // (JavaCodeGenerator.meta.java:2400)
            this.column = column;                                               // (JavaCodeGenerator.meta.java:2401)
        }                                                                       // (JavaCodeGenerator.meta.java:2402)
                                                                                // (JavaCodeGenerator.meta.java:2403)
        /**
         * Returns the source name where the exception is occured.
         *
         * @return  the source name where the exception is occured.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public final java.lang.String getSourceName() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2423)
            if (sourceName == null)                                             // (JavaCodeGenerator.meta.java:2424)
                throw new java.lang.UnsupportedOperationException();            // (JavaCodeGenerator.meta.java:2425)
            return sourceName;                                                  // (JavaCodeGenerator.meta.java:2426)
        }                                                                       // (JavaCodeGenerator.meta.java:2427)
                                                                                // (JavaCodeGenerator.meta.java:2428)
        /**
         * Returns the index number where the exception is occured.
         *
         * @return  the index number where the exception is occured.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public final int getIndex() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2448)
            if (index == -1)                                                    // (JavaCodeGenerator.meta.java:2449)
                throw new java.lang.UnsupportedOperationException();            // (JavaCodeGenerator.meta.java:2450)
            return index;                                                       // (JavaCodeGenerator.meta.java:2451)
        }                                                                       // (JavaCodeGenerator.meta.java:2452)
                                                                                // (JavaCodeGenerator.meta.java:2453)
        /**
         * Returns the line number where the exception is occured.
         *
         * @return  the line number where the exception is occured.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public final int getLine() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2473)
            if (line == -1)                                                     // (JavaCodeGenerator.meta.java:2474)
                throw new java.lang.UnsupportedOperationException();            // (JavaCodeGenerator.meta.java:2475)
            return line;                                                        // (JavaCodeGenerator.meta.java:2476)
        }                                                                       // (JavaCodeGenerator.meta.java:2477)
                                                                                // (JavaCodeGenerator.meta.java:2478)
        /**
         * Returns the column number where the exception is occured.
         *
         * @return  the column number where the exception is occured.
         * @throws   java.lang.UnsupportedOperationException
         *      if the method is not suported.
         * @since   notavaCC 1.0
         */
        public final int getColumn() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2498)
            if (column == -1)                                                   // (JavaCodeGenerator.meta.java:2499)
                throw new java.lang.UnsupportedOperationException();            // (JavaCodeGenerator.meta.java:2500)
            return column;                                                      // (JavaCodeGenerator.meta.java:2501)
        }                                                                       // (JavaCodeGenerator.meta.java:2502)
                                                                                // (JavaCodeGenerator.meta.java:2503)
        /**
         * Returns the GNU-Compiler-Collection-style string that describes the position of the error.
         * <p>
         * This method throws an UnsupportedOperationException if <code>getSourceName()</code> is not supported.
         * Otherwise, it returns <code>getSourceName()</code> if <code>getLine()</code> is not supported.
         * Otherwise, it returns <code>getSourceName() + ":" + getLine()</code> if <code>getColumn()</code> is not supported.
         * Otherwise, it returns <code>getSourceName() + ":" + getLine() + ":" + getColumn()</code>.
         *
         * @return
         *      the GCC-style string describing the position of the error.
         * @throws   UnsupportedOperationException
         *      getSourceName() was not suppoted.
         * @since   notavaCC 1.0
         */
        public final java.lang.String getGCCStylePositionString() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2531)
            if (line == -1) {                                                   // (JavaCodeGenerator.meta.java:2532)
                return getSourceName();                                         // (JavaCodeGenerator.meta.java:2533)
            } else if (column == -1) {                                          // (JavaCodeGenerator.meta.java:2534)
                return getSourceName() + ":" + line;                            // (JavaCodeGenerator.meta.java:2535)
            } else {                                                            // (JavaCodeGenerator.meta.java:2536)
                return getSourceName() + ":" + line + ":" + column;             // (JavaCodeGenerator.meta.java:2537)
            }                                                                   // (JavaCodeGenerator.meta.java:2538)
        }                                                                       // (JavaCodeGenerator.meta.java:2539)
                                                                                // (JavaCodeGenerator.meta.java:2540)
        /**
         * Indicates the source of the notavaCC, which generates this Java program, has ambiguity.
         * @since   notavaCC 1.0
         */
        public static class AmbiguousGrammarError extends java.lang.AssertionError {    // (JavaCodeGenerator.meta.java:2552)
            private static final long serialVersionUID = 0;                     // (JavaCodeGenerator.meta.java:2553)
            public AmbiguousGrammarError(java.lang.String message) {            // (JavaCodeGenerator.meta.java:2554)
                super(message);                                                 // (JavaCodeGenerator.meta.java:2555)
            }                                                                   // (JavaCodeGenerator.meta.java:2556)
        }                                                                       // (JavaCodeGenerator.meta.java:2557)
    } // class ParseException                                                   // (JavaCodeGenerator.meta.java:2558)
                                                                                // (JavaCodeGenerator.meta.java:2559)
                                                                                // (JavaCodeGenerator.meta.java:2560)
    /**
     * A namespace for the default implementations.
     *
     * @since   notavaCC 1.0
     */
    public static interface Default {                                           // (JavaCodeGenerator.meta.java:2575)
        /**
         * Provides a simple implementation of {@link BVH_Parser.Node}.
         *
         * @since   notavaCC 1.0
         */
        public static abstract class Node implements BVH_Parser.Node {          // (JavaCodeGenerator.meta.java:2590)
            private static final java.util.List<BVH_Parser.Node> EMPTY_LIST = new java.util.ArrayList<BVH_Parser.Node>();    // (JavaCodeGenerator.meta.java:2592)
                                                                                // (JavaCodeGenerator.meta.java:2594)
            private java.util.List<BVH_Parser.Node> childNodes;                 // (JavaCodeGenerator.meta.java:2595)
            /**
             * Constucts an instance.
             * <p>
             * The returned list of {@link #getChildNodes()} is the <code>childNodes</code> rather than a copy of it.
             *
             * @param   childNodes
             *            a list of child nodes.
             * @since   notavaCC 1.0
             */
            public Node(java.util.List<BVH_Parser.Node> childNodes) {           // (JavaCodeGenerator.meta.java:2617)
                this.childNodes = childNodes;                                   // (JavaCodeGenerator.meta.java:2618)
            }                                                                   // (JavaCodeGenerator.meta.java:2619)
            public java.util.List<BVH_Parser.Node> getChildNodes() {            // (JavaCodeGenerator.meta.java:2620)
                return this.childNodes;                                         // (JavaCodeGenerator.meta.java:2621)
            }                                                                   // (JavaCodeGenerator.meta.java:2622)
                                                                                // (JavaCodeGenerator.meta.java:2623)
            public BVH_Parser.AmbiguityAbsorber getWrappedAmbiguityAbsorber() {    // (JavaCodeGenerator.meta.java:2625)
                return null;                                                    // (JavaCodeGenerator.meta.java:2626)
            }                                                                   // (JavaCodeGenerator.meta.java:2627)
                                                                                // (JavaCodeGenerator.meta.java:2629)
            /**
             * Replaces the child node <code>oldChild</code> with <code>newChild</code>.
             * <p>
             * This method
             * replaces <code>oldChild</code> in <code>getChildNodes()</code> with <code>newChild</code>.
             * Also, this method replaces the values returned by the methods that are defined in the subinterfaces of {@link BVH_Parser.Node} and that return particular children.
             *
             * @param   oldChild
             *            a replaced child node.
             * @param   newChild
             *            a child node to replace <code>oldChild</code>.
             * @since   notavaCC 1.0
             */
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:2668)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:2669)
            }                                                                   // (JavaCodeGenerator.meta.java:2670)
                                                                                // (JavaCodeGenerator.meta.java:2671)
            public java.lang.String toString() {                                // (JavaCodeGenerator.meta.java:2672)
                java.io.StringWriter buffer = new java.io.StringWriter();       // (JavaCodeGenerator.meta.java:2673)
                java.io.PrintWriter writer = new java.io.PrintWriter(buffer);    // (JavaCodeGenerator.meta.java:2674)
                                                                                // (JavaCodeGenerator.meta.java:2675)
                BVH_Parser.Node node = this;                                    // (JavaCodeGenerator.meta.java:2676)
                while (!(node instanceof BVH_Parser.Token)) {                   // (JavaCodeGenerator.meta.java:2677)
                    if (node.getChildNodes().isEmpty()) {                       // (JavaCodeGenerator.meta.java:2678)
                        node = null;                                            // (JavaCodeGenerator.meta.java:2679)
                        break;                                                  // (JavaCodeGenerator.meta.java:2680)
                    }                                                           // (JavaCodeGenerator.meta.java:2681)
                    node = (BVH_Parser.Node) node.getChildNodes().get(0);       // (JavaCodeGenerator.meta.java:2682)
                }                                                               // (JavaCodeGenerator.meta.java:2683)
                if (node != null) {                                             // (JavaCodeGenerator.meta.java:2684)
                    BVH_Parser.Token token = (BVH_Parser.Token) node;           // (JavaCodeGenerator.meta.java:2685)
                    try {                                                       // (JavaCodeGenerator.meta.java:2686)
                        writer.print(token.getSourceName() + ":");              // (JavaCodeGenerator.meta.java:2687)
                        writer.print(token.getLine() + ":");                    // (JavaCodeGenerator.meta.java:2688)
                        writer.println(token.getOriginalImage());               // (JavaCodeGenerator.meta.java:2689)
                    } catch (java.lang.UnsupportedOperationException x) {       // (JavaCodeGenerator.meta.java:2690)
                    }                                                           // (JavaCodeGenerator.meta.java:2691)
                }                                                               // (JavaCodeGenerator.meta.java:2692)
                                                                                // (JavaCodeGenerator.meta.java:2693)
                toString(this, 0, writer);                                      // (JavaCodeGenerator.meta.java:2694)
                writer.close();                                                 // (JavaCodeGenerator.meta.java:2695)
                if (writer.checkError())                                        // (JavaCodeGenerator.meta.java:2696)
                    throw new java.lang.RuntimeException();                     // (JavaCodeGenerator.meta.java:2697)
                return buffer.toString();                                       // (JavaCodeGenerator.meta.java:2698)
            }                                                                   // (JavaCodeGenerator.meta.java:2699)
            private static void toString(BVH_Parser.Node node, int indent, java.io.PrintWriter writer) {    // (JavaCodeGenerator.meta.java:2700)
                for (int i = 0; i < indent; i++)                                // (JavaCodeGenerator.meta.java:2701)
                    writer.print("  ");                                         // (JavaCodeGenerator.meta.java:2702)
                                                                                // (JavaCodeGenerator.meta.java:2703)
                if (node == null) {                                             // (JavaCodeGenerator.meta.java:2704)
                    writer.println("null");                                     // (JavaCodeGenerator.meta.java:2705)
                } else if (node instanceof Token) {                             // (JavaCodeGenerator.meta.java:2706)
                    Token token = (Token) node;                                 // (JavaCodeGenerator.meta.java:2707)
                    writer.println(token);                                      // (JavaCodeGenerator.meta.java:2708)
                    //writer.println("token: " + token.getOriginalImage());     // (JavaCodeGenerator.meta.java:2709)
                } else {                                                        // (JavaCodeGenerator.meta.java:2710)
                    java.lang.String binaryName = node.getClass().getName();    // (JavaCodeGenerator.meta.java:2711)
                    binaryName = binaryName.substring(binaryName.lastIndexOf(".") + 1);    // (JavaCodeGenerator.meta.java:2712)
                    binaryName = binaryName.substring(binaryName.lastIndexOf("$") + 1);    // (JavaCodeGenerator.meta.java:2713)
                    writer.println(binaryName);                                 // (JavaCodeGenerator.meta.java:2714)
                    indent++;                                                   // (JavaCodeGenerator.meta.java:2715)
                    java.util.Iterator it = node.getChildNodes().iterator();    // (JavaCodeGenerator.meta.java:2716)
                    while (it.hasNext()) {                                      // (JavaCodeGenerator.meta.java:2717)
                        BVH_Parser.Node n = (BVH_Parser.Node) it.next();        // (JavaCodeGenerator.meta.java:2718)
                        toString(n, indent, writer);                            // (JavaCodeGenerator.meta.java:2719)
                    }                                                           // (JavaCodeGenerator.meta.java:2720)
                }                                                               // (JavaCodeGenerator.meta.java:2721)
            }                                                                   // (JavaCodeGenerator.meta.java:2722)
        } // Default.Node                                                       // (JavaCodeGenerator.meta.java:2723)
                                                                                // (JavaCodeGenerator.meta.java:2724)
        /**
         * Provides a simple implementation of {@link BVH_Parser.Token}.
         *
         * @since   notavaCC 1.0
         */
        public static class Token extends Default.Node implements BVH_Parser.Token {    // (JavaCodeGenerator.meta.java:2738)
            private final int symbolID;                                         // (JavaCodeGenerator.meta.java:2739)
            private final java.lang.String image;                               // (JavaCodeGenerator.meta.java:2740)
            private final java.lang.String originalImage;                       // (JavaCodeGenerator.meta.java:2741)
            private final java.lang.String sourceName;                          // (JavaCodeGenerator.meta.java:2742)
            private final int index;                                            // (JavaCodeGenerator.meta.java:2743)
            private final int line;                                             // (JavaCodeGenerator.meta.java:2744)
            private final int column;                                           // (JavaCodeGenerator.meta.java:2745)
            /**
             * Constructs a token.
             * <p>
             *
             * @param   symbolID
             *      the symbol ID of the token, returned by <code>getSymbolID</code>.
             * @param   image
             *      the image string, returned by <code>getImage</code> and <code>getOriginalImage</code>.
             * @since   notavaCC 1.0
             */
            public Token(int symbolID, java.lang.String image) {                // (JavaCodeGenerator.meta.java:2770)
                this(symbolID, image, image, null, -1, -1, -1);                 // (JavaCodeGenerator.meta.java:2771)
            }                                                                   // (JavaCodeGenerator.meta.java:2772)
                                                                                // (JavaCodeGenerator.meta.java:2773)
            /**
             * Constructs a token.
             * <p>
             *
             * @param   symbolID
             *      the symbol ID of the token, returned by <code>getSymbolID</code>.
             * @param   image
             *      the image string, returned by <code>getImage</code>.
             * @param   originalImage
             *      the image string, returned by <code>getOriginalImage</code>.
             * @param   sourceName
             *      the source name returned by <code>getSourceName</code>, or <code>null</code> if not supported.
             * @param   index
             *      the index returned by <code>getIndex</code>, or <code>-1</code> if not supported.
             * @param   line
             *      the line number returned by <code>getLine</code>, or <code>-1</code> if not supported.
             * @param   column
             *      the column number returned by <code>getColumn</code>, or <code>-1</code> if not supported.
             * @since   notavaCC 1.0
             */
            public Token(int symbolID, java.lang.String image, java.lang.String originalImage, java.lang.String sourceName, int index, int line, int column) {    // (JavaCodeGenerator.meta.java:2817)
                super(BVH_Parser.Default.Node.EMPTY_LIST);                      // (JavaCodeGenerator.meta.java:2819)
                this.symbolID = symbolID;                                       // (JavaCodeGenerator.meta.java:2822)
                this.image = image;                                             // (JavaCodeGenerator.meta.java:2823)
                this.originalImage = originalImage;                             // (JavaCodeGenerator.meta.java:2824)
                this.sourceName = sourceName;                                   // (JavaCodeGenerator.meta.java:2825)
                this.index = index;                                             // (JavaCodeGenerator.meta.java:2826)
                this.line = line;                                               // (JavaCodeGenerator.meta.java:2827)
                this.column = column;                                           // (JavaCodeGenerator.meta.java:2828)
            }                                                                   // (JavaCodeGenerator.meta.java:2829)
            /**
             * Constructs a token.
             * <p>
             *
             * @param   symbolID
             *      the symbol ID of the token, returned by <code>getSymbolID</code>.
             * @param   image
             *      the image string, returned by <code>getImage</code>.
             * @param   originalImage
             *      the image string, returned by <code>getOriginalImage</code>.
             * @param   token
             *      a token that gives the returned value of <code>getSourceName</code>, <code>getIndex</code>, <code>getLine</code> and <code>getColumn</code>.
             * @since   notavaCC 1.0
             */
            public Token(int symbolID, java.lang.String image, java.lang.String originalImage, BVH_Parser.Token token) {    // (JavaCodeGenerator.meta.java:2861)
                super(BVH_Parser.Default.Node.EMPTY_LIST);                      // (JavaCodeGenerator.meta.java:2863)
                java.lang.String sourceName = null;                             // (JavaCodeGenerator.meta.java:2866)
                int index = -1;                                                 // (JavaCodeGenerator.meta.java:2867)
                int line = -1;                                                  // (JavaCodeGenerator.meta.java:2868)
                int column = -1;                                                // (JavaCodeGenerator.meta.java:2869)
                try {                                                           // (JavaCodeGenerator.meta.java:2870)
                    sourceName = token.getSourceName();                         // (JavaCodeGenerator.meta.java:2871)
                } catch (java.lang.UnsupportedOperationException x) {           // (JavaCodeGenerator.meta.java:2872)
                }                                                               // (JavaCodeGenerator.meta.java:2873)
                try {                                                           // (JavaCodeGenerator.meta.java:2874)
                    index = token.getIndex();                                   // (JavaCodeGenerator.meta.java:2875)
                } catch (java.lang.UnsupportedOperationException x) {           // (JavaCodeGenerator.meta.java:2876)
                }                                                               // (JavaCodeGenerator.meta.java:2877)
                try {                                                           // (JavaCodeGenerator.meta.java:2878)
                    line = token.getLine();                                     // (JavaCodeGenerator.meta.java:2879)
                } catch (java.lang.UnsupportedOperationException x) {           // (JavaCodeGenerator.meta.java:2880)
                }                                                               // (JavaCodeGenerator.meta.java:2881)
                try {                                                           // (JavaCodeGenerator.meta.java:2882)
                    column = token.getColumn();                                 // (JavaCodeGenerator.meta.java:2883)
                } catch (java.lang.UnsupportedOperationException x) {           // (JavaCodeGenerator.meta.java:2884)
                }                                                               // (JavaCodeGenerator.meta.java:2885)
                                                                                // (JavaCodeGenerator.meta.java:2886)
                this.symbolID = symbolID;                                       // (JavaCodeGenerator.meta.java:2887)
                this.image = image;                                             // (JavaCodeGenerator.meta.java:2888)
                this.originalImage = originalImage;                             // (JavaCodeGenerator.meta.java:2889)
                this.sourceName = sourceName;                                   // (JavaCodeGenerator.meta.java:2890)
                this.index = index;                                             // (JavaCodeGenerator.meta.java:2891)
                this.line = line;                                               // (JavaCodeGenerator.meta.java:2892)
                this.column = column;                                           // (JavaCodeGenerator.meta.java:2893)
            }                                                                   // (JavaCodeGenerator.meta.java:2894)
            public int getSymbolID() {                                          // (JavaCodeGenerator.meta.java:2895)
                return symbolID;                                                // (JavaCodeGenerator.meta.java:2896)
            }                                                                   // (JavaCodeGenerator.meta.java:2897)
            public boolean isWhite() {                                          // (JavaCodeGenerator.meta.java:2898)
                return 1 <= symbolID && symbolID < 2;                           // (JavaCodeGenerator.meta.java:2899)
            }                                                                   // (JavaCodeGenerator.meta.java:2900)
            public java.lang.String getImage() {                                // (JavaCodeGenerator.meta.java:2901)
                return image;                                                   // (JavaCodeGenerator.meta.java:2902)
            }                                                                   // (JavaCodeGenerator.meta.java:2903)
            public java.lang.String getOriginalImage() {                        // (JavaCodeGenerator.meta.java:2904)
                return originalImage;                                           // (JavaCodeGenerator.meta.java:2905)
            }                                                                   // (JavaCodeGenerator.meta.java:2906)
                                                                                // (JavaCodeGenerator.meta.java:2907)
                                                                                // (JavaCodeGenerator.meta.java:2908)
            public java.lang.String getSourceName() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2909)
                if (sourceName == null)                                         // (JavaCodeGenerator.meta.java:2910)
                    throw new java.lang.UnsupportedOperationException();        // (JavaCodeGenerator.meta.java:2911)
                return sourceName;                                              // (JavaCodeGenerator.meta.java:2912)
            }                                                                   // (JavaCodeGenerator.meta.java:2913)
            public int getIndex() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2914)
                if (index == -1)                                                // (JavaCodeGenerator.meta.java:2915)
                    throw new java.lang.UnsupportedOperationException();        // (JavaCodeGenerator.meta.java:2916)
                return index;                                                   // (JavaCodeGenerator.meta.java:2917)
            }                                                                   // (JavaCodeGenerator.meta.java:2918)
            public int getLine() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2919)
                if (line == -1)                                                 // (JavaCodeGenerator.meta.java:2920)
                    throw new java.lang.UnsupportedOperationException();        // (JavaCodeGenerator.meta.java:2921)
                return line;                                                    // (JavaCodeGenerator.meta.java:2922)
            }                                                                   // (JavaCodeGenerator.meta.java:2923)
            public int getColumn() throws java.lang.UnsupportedOperationException {    // (JavaCodeGenerator.meta.java:2924)
                if (column == -1)                                               // (JavaCodeGenerator.meta.java:2925)
                    throw new java.lang.UnsupportedOperationException();        // (JavaCodeGenerator.meta.java:2926)
                return column;                                                  // (JavaCodeGenerator.meta.java:2927)
            }                                                                   // (JavaCodeGenerator.meta.java:2928)
                                                                                // (JavaCodeGenerator.meta.java:2929)
            public java.lang.String toString() {                                // (JavaCodeGenerator.meta.java:2930)
                //java.lang.StringBuilder result = new java.lang.StringBuilder(__quoted__notavacc_reserved(getOriginalImage()));    // (JavaCodeGenerator.meta.java:2931)
                                                                                // (JavaCodeGenerator.meta.java:2932)
                java.lang.StringBuilder result = new java.lang.StringBuilder();    // (JavaCodeGenerator.meta.java:2933)
                result.append("`");                                             // (JavaCodeGenerator.meta.java:2934)
                java.lang.String original = getOriginalImage();                 // (JavaCodeGenerator.meta.java:2935)
                for (int i = 0; i < original.length(); i++) {                   // (JavaCodeGenerator.meta.java:2936)
                    char ch = original.charAt(i);                               // (JavaCodeGenerator.meta.java:2937)
                    switch (ch) {                                               // (JavaCodeGenerator.meta.java:2938)
                    default:                                                    // (JavaCodeGenerator.meta.java:2939)
                        if (ch < ' ' || ch == '\u007F') {                       // (JavaCodeGenerator.meta.java:2940)
                            result.append("\\u").append(__toHexCode__notavacc_reserved(ch));    // (JavaCodeGenerator.meta.java:2941)
                        } else {                                                // (JavaCodeGenerator.meta.java:2942)
                            result.append(ch);                                  // (JavaCodeGenerator.meta.java:2943)
                        }                                                       // (JavaCodeGenerator.meta.java:2944)
                        break;                                                  // (JavaCodeGenerator.meta.java:2945)
                    case '\n':   result.append("\\n");      break;              // (JavaCodeGenerator.meta.java:2946)
                    case '\t':   result.append("\\t");      break;              // (JavaCodeGenerator.meta.java:2947)
                    case '\b':   result.append("\\b");      break;              // (JavaCodeGenerator.meta.java:2948)
                    case '\r':   result.append("\\r");      break;              // (JavaCodeGenerator.meta.java:2949)
                    case '\f':   result.append("\\f");      break;              // (JavaCodeGenerator.meta.java:2950)
                        //case '\\':   result.append("\\\\");     break;        // (JavaCodeGenerator.meta.java:2951)
                        //case '\'':   result.append("\\\'");     break;        // (JavaCodeGenerator.meta.java:2952)
                        //case '\"':   result.append("\\\"");     break;        // (JavaCodeGenerator.meta.java:2953)
                    }                                                           // (JavaCodeGenerator.meta.java:2954)
                }                                                               // (JavaCodeGenerator.meta.java:2955)
                result.append("'");                                             // (JavaCodeGenerator.meta.java:2956)
                                                                                // (JavaCodeGenerator.meta.java:2957)
                if (column != -1 || line != -1) {                               // (JavaCodeGenerator.meta.java:2958)
                    result.append(" (");                                        // (JavaCodeGenerator.meta.java:2959)
                    if (line != -1) {                                           // (JavaCodeGenerator.meta.java:2960)
                        result.append("line ");                                 // (JavaCodeGenerator.meta.java:2961)
                        result.append(getLine());                               // (JavaCodeGenerator.meta.java:2962)
                        if (column != -1)                                       // (JavaCodeGenerator.meta.java:2963)
                            result.append(", ");                                // (JavaCodeGenerator.meta.java:2964)
                    }                                                           // (JavaCodeGenerator.meta.java:2965)
                    if (column != -1) {                                         // (JavaCodeGenerator.meta.java:2966)
                        result.append("column ");                               // (JavaCodeGenerator.meta.java:2967)
                        result.append(getColumn());                             // (JavaCodeGenerator.meta.java:2968)
                    }                                                           // (JavaCodeGenerator.meta.java:2969)
                    result.append(")");                                         // (JavaCodeGenerator.meta.java:2970)
                }                                                               // (JavaCodeGenerator.meta.java:2971)
                return result.toString();                                       // (JavaCodeGenerator.meta.java:2972)
            }                                                                   // (JavaCodeGenerator.meta.java:2973)
        } // class Default.Token                                                // (JavaCodeGenerator.meta.java:2974)
                                                                                // (JavaCodeGenerator.meta.java:2975)
        /**
         * The default {@link BVH_Parser.LexicalAnalyzer}.
         *
         * @since   notavaCC 1.0
         */
        public static class LexicalAnalyzer extends BVH_Parser.LexicalAnalyzer {    // (JavaCodeGenerator.meta.java:2989)
            /**
             * The <code>sourceName</code> given to the constructor.
             *
             * @since   notavaCC 1.0
             */
            protected final java.lang.String sourceName;                        // (JavaCodeGenerator.meta.java:3003)
            /**
             * The <code>text</code> given to the constructor.
             *
             * @since   notavaCC 1.0
             */
            protected final java.lang.CharSequence text;                        // (JavaCodeGenerator.meta.java:3017)
            /**
             * The exclusive end index of the target {@link #text} region.
             *
             * @since   notavaCC 1.0
             */
            protected final int end;                                            // (JavaCodeGenerator.meta.java:3031)
            /**
             * The <code>tabStop</code> given to the constructor.
             *
             * @since   notavaCC 1.0
             */
            protected final int tabStop;                                        // (JavaCodeGenerator.meta.java:3045)
            /**
             * The <code>table</code> given to the constructor.
             *
             * @since   notavaCC 1.0
             */
            private final int[][] table;                                        // (JavaCodeGenerator.meta.java:3059)
            /**
             * The <code>initialState</code> given to the constructor.
             *
             * @since   notavaCC 1.0
             */
            private final int initialState;                                     // (JavaCodeGenerator.meta.java:3073)
            /**
             * The zero-based index the {@linkplain #next() next} token begins at.
             *
             * @since   notavaCC 1.0
             */
            protected int index;                                                // (JavaCodeGenerator.meta.java:3087)
            /**
             * The zero-based line number the {@linkplain #next() next} token begins at.
             *
             * @since   notavaCC 1.0
             */
            protected int line;                                                 // (JavaCodeGenerator.meta.java:3101)
            /**
             * The zero-based column number the {@linkplain #next() next} token begins at.
             *
             * @since   notavaCC 1.0
             */
            protected int column;                                               // (JavaCodeGenerator.meta.java:3115)
            /**
             * Constructs a lexical analyzer.
             * <p>
             *
             * @param   sourceName
             *      the name of the source, used only to set the result of {@link BVH_Parser.Token#getSourceName()}.
             * @param   text
             *      the text to parse.
             * @param   tabStop
             *      the number that the tab character advances the cursor to the next column that is a multiple of.  <code>tabStop</code> is used only to set the result of {@link BVH_Parser.Token#getColumn()}.
             * @since    notavaCC 1.0
             */
            public LexicalAnalyzer(java.lang.String sourceName, java.lang.CharSequence text, int tabStop) {    // (JavaCodeGenerator.meta.java:3143)
                this(sourceName, text, tabStop, 0, text.length(), 0, 0);        // (JavaCodeGenerator.meta.java:3144)
            }                                                                   // (JavaCodeGenerator.meta.java:3145)
            /**
             * Constructs a lexical analyzer that analyze a part of a text.
             * <p>
             *
             * @param   sourceName
             *      the name of the source, used only to set the result of {@link BVH_Parser.Token#getSourceName()}.
             * @param   text
             *      the text to parse.
             * @param   tabStop
             *      the number that the tab character advances the cursor to the next column that is a multiple of.  <code>tabStop</code> is used only to set the result of {@link BVH_Parser.Token#getColumn()}.
             * @param   start
             *      the inclusive start index of the text region to analyze.
             * @param   end
             *      the exclusive end index of the text region to analyze.
             * @param   line
             *      the zero-based line number of the <code>start</code> index.
             * @param   column
             *      the zero-based column number of the <code>start</code> index.
             * @since    notavaCC 1.0
             */
            public LexicalAnalyzer(java.lang.String sourceName, java.lang.CharSequence text, int tabStop, int start, int end, int line, int column) {    // (JavaCodeGenerator.meta.java:3189)
                this(sourceName, text, tabStop, start, end, line, column, BVH_Parser.__dfaTable__notavacc_reserved, 0);    // (JavaCodeGenerator.meta.java:3190)
            }                                                                   // (JavaCodeGenerator.meta.java:3191)
            private LexicalAnalyzer(java.lang.String sourceName, java.lang.CharSequence text, int tabStop, int start, int end, int line, int column, int[][] table, int initialState) {    // (JavaCodeGenerator.meta.java:3192)
                this.sourceName = sourceName;                                   // (JavaCodeGenerator.meta.java:3193)
                this.text = text;                                               // (JavaCodeGenerator.meta.java:3194)
                this.end = end;                                                 // (JavaCodeGenerator.meta.java:3195)
                this.tabStop = tabStop;                                         // (JavaCodeGenerator.meta.java:3196)
                this.table = table;                                             // (JavaCodeGenerator.meta.java:3197)
                this.initialState = initialState;                               // (JavaCodeGenerator.meta.java:3198)
                this.index = start;                                             // (JavaCodeGenerator.meta.java:3199)
                this.line = line;                                               // (JavaCodeGenerator.meta.java:3200)
                this.column = column;                                           // (JavaCodeGenerator.meta.java:3201)
            }                                                                   // (JavaCodeGenerator.meta.java:3202)
            public BVH_Parser.Token next() throws ParseException {              // (JavaCodeGenerator.meta.java:3203)
                if (index >= end)                                               // (JavaCodeGenerator.meta.java:3204)
                    return new BVH_Parser.Default.Token(EOF_TOKEN, "", "", sourceName, index, -1, -1);    // (JavaCodeGenerator.meta.java:3205)
                                                                                // (JavaCodeGenerator.meta.java:3206)
                int state = initialState;                                       // (JavaCodeGenerator.meta.java:3207)
                                                                                // (JavaCodeGenerator.meta.java:3208)
                final int startIndex = index;                                   // (JavaCodeGenerator.meta.java:3209)
                final int startLine = line;                                     // (JavaCodeGenerator.meta.java:3210)
                final int startColumn = column;                                 // (JavaCodeGenerator.meta.java:3211)
                int lastHitID = -1;                                             // (JavaCodeGenerator.meta.java:3212)
                int lastHitIndex = -1;                                          // (JavaCodeGenerator.meta.java:3213)
                int lastHitLine = -1;                                           // (JavaCodeGenerator.meta.java:3214)
                int lastHitColumn = -1;                                         // (JavaCodeGenerator.meta.java:3215)
                int lastHitImageLength = 0;                                     // (JavaCodeGenerator.meta.java:3216)
                java.lang.StringBuilder image = new java.lang.StringBuilder();    // (JavaCodeGenerator.meta.java:3217)
                                                                                // (JavaCodeGenerator.meta.java:3218)
                try {                                                           // (JavaCodeGenerator.meta.java:3219)
                    dfa:                                                        // (JavaCodeGenerator.meta.java:3220)
                    while (index < end) {                                       // (JavaCodeGenerator.meta.java:3221)
                        char ch = nextChar();                                   // (JavaCodeGenerator.meta.java:3222)
                        image.append(ch);                                       // (JavaCodeGenerator.meta.java:3223)
                                                                                // (JavaCodeGenerator.meta.java:3224)
                        int[] map = table[state];                               // (JavaCodeGenerator.meta.java:3225)
                        int base = 1;                                           // (JavaCodeGenerator.meta.java:3226)
                        int width = (map.length - 1) / 3;                       // (JavaCodeGenerator.meta.java:3227)
                        while (width > 1) {                                     // (JavaCodeGenerator.meta.java:3229)
                            int halfWidth = width >> 1;                         // (JavaCodeGenerator.meta.java:3230)
                            int mid = base + halfWidth * 3;                     // (JavaCodeGenerator.meta.java:3231)
                            if (ch >= map[mid]) {                               // (JavaCodeGenerator.meta.java:3232)
                                base = mid;                                     // (JavaCodeGenerator.meta.java:3233)
                                width -= halfWidth;                             // (JavaCodeGenerator.meta.java:3234)
                            } else {                                            // (JavaCodeGenerator.meta.java:3235)
                                width = halfWidth;                              // (JavaCodeGenerator.meta.java:3236)
                            }                                                   // (JavaCodeGenerator.meta.java:3237)
                        }                                                       // (JavaCodeGenerator.meta.java:3238)
                        int i = 0;                                              // (JavaCodeGenerator.meta.java:3239)
                        for (;;) {                                              // (JavaCodeGenerator.meta.java:3240)
                            if (i++ >= width)                                   // (JavaCodeGenerator.meta.java:3241)
                                break dfa;                                      // (JavaCodeGenerator.meta.java:3242)
                            if (map[base] <= ch & ch <= map[base + 1]) {        // (JavaCodeGenerator.meta.java:3243)
                                state = map[base + 2];                          // (JavaCodeGenerator.meta.java:3244)
                                break;                                          // (JavaCodeGenerator.meta.java:3245)
                            }                                                   // (JavaCodeGenerator.meta.java:3246)
                            base += 3;                                          // (JavaCodeGenerator.meta.java:3247)
                        }                                                       // (JavaCodeGenerator.meta.java:3248)
                        int hitID = table[state][0];                            // (JavaCodeGenerator.meta.java:3249)
                        if (hitID != -1) {                                      // (JavaCodeGenerator.meta.java:3250)
                            lastHitID = hitID;                                  // (JavaCodeGenerator.meta.java:3251)
                            lastHitIndex = index;                               // (JavaCodeGenerator.meta.java:3252)
                            lastHitLine = line;                                 // (JavaCodeGenerator.meta.java:3253)
                            lastHitColumn = column;                             // (JavaCodeGenerator.meta.java:3254)
                            lastHitImageLength = image.length();                // (JavaCodeGenerator.meta.java:3255)
                        }                                                       // (JavaCodeGenerator.meta.java:3256)
                    }                                                           // (JavaCodeGenerator.meta.java:3257)
                                                                                // (JavaCodeGenerator.meta.java:3258)
                    if (lastHitID == -1) {                                      // (JavaCodeGenerator.meta.java:3259)
                        throw new ParseException("An invalid character sequence starting with '" + text.subSequence(startIndex, index) + "' (line " + (startLine + 1) + ", column " + (startColumn + 1) + ")", sourceName, startIndex, startLine + 1, startColumn + 1);    // (JavaCodeGenerator.meta.java:3260)
                    }                                                           // (JavaCodeGenerator.meta.java:3261)
                } finally {                                                     // (JavaCodeGenerator.meta.java:3262)
                    index = startIndex;                                         // (JavaCodeGenerator.meta.java:3263)
                    line = startLine;                                           // (JavaCodeGenerator.meta.java:3264)
                    column = startColumn;                                       // (JavaCodeGenerator.meta.java:3265)
                }                                                               // (JavaCodeGenerator.meta.java:3266)
                                                                                // (JavaCodeGenerator.meta.java:3267)
                BVH_Parser.Token result = new BVH_Parser.Default.Token(lastHitID, image.substring(0, lastHitImageLength).intern(), text.subSequence(startIndex, lastHitIndex).toString().intern(), sourceName, startIndex, startLine + 1, startColumn + 1);    // (JavaCodeGenerator.meta.java:3268)
                                                                                // (JavaCodeGenerator.meta.java:3269)
                index = lastHitIndex;                                           // (JavaCodeGenerator.meta.java:3270)
                line = lastHitLine;                                             // (JavaCodeGenerator.meta.java:3271)
                column = lastHitColumn;                                         // (JavaCodeGenerator.meta.java:3272)
                                                                                // (JavaCodeGenerator.meta.java:3273)
                return result;                                                  // (JavaCodeGenerator.meta.java:3274)
            } // next()                                                         // (JavaCodeGenerator.meta.java:3275)
            /**
             * Returns the next character in the {@link #text}.
             * <p>
             * This method returns the character starting at {@link #index} in the sequence and updates {@link #index}, {@link #line}, and {@link #column} to point the next character of the returned character.  This method is overridden in order to deal with a string as a character through the input sequence like Unicode escapes of Java.
             *
             * @return  the next character in the sequence.
             * @throws  java.lang.IndexOutOfBoundsException  if <code>index >= end</code>
             * @since   notavaCC 1.0
             */
            protected char nextChar() throws ParseException, java.lang.IndexOutOfBoundsException {    // (JavaCodeGenerator.meta.java:3298)
                return nextExactChar();                                         // (JavaCodeGenerator.meta.java:3299)
            }                                                                   // (JavaCodeGenerator.meta.java:3300)
            /**
             * Returns the next character in the {@link #text} based on the Unicode escapes.
             *
             * @return  the next character in the sequence.
             * @throws  ParseException
             *              for a illegal escape.
             * @throws  java.lang.IndexOutOfBoundsException
             *              if <code>index >= end</code>
             * @since   notavaCC 1.0
             */
            protected final char nextUnicodeEscapedChar() throws ParseException, java.lang.IndexOutOfBoundsException {    // (JavaCodeGenerator.meta.java:3324)
                int startIndex = this.index;                                    // (JavaCodeGenerator.meta.java:3325)
                int startLine = line;                                           // (JavaCodeGenerator.meta.java:3326)
                int startColumn = column;                                       // (JavaCodeGenerator.meta.java:3327)
                {                                                               // (JavaCodeGenerator.meta.java:3328)
                    int index = startIndex;                                     // (JavaCodeGenerator.meta.java:3329)
                    if (text.charAt(index) == '\\' && index + 1 < end && text.charAt(index + 1) == 'u') {    // (JavaCodeGenerator.meta.java:3330)
                        int count = 0;                                          // (JavaCodeGenerator.meta.java:3331)
                        while (index >= 0 && text.charAt(index--) == '\\')      // (JavaCodeGenerator.meta.java:3332)
                            count++;                                            // (JavaCodeGenerator.meta.java:3333)
                        if (count % 2 == 0)                                     // (JavaCodeGenerator.meta.java:3334)
                            return nextExactChar();                             // (JavaCodeGenerator.meta.java:3335)
                    } else {                                                    // (JavaCodeGenerator.meta.java:3336)
                        return nextExactChar();                                 // (JavaCodeGenerator.meta.java:3337)
                    }                                                           // (JavaCodeGenerator.meta.java:3338)
                }                                                               // (JavaCodeGenerator.meta.java:3339)
                                                                                // (JavaCodeGenerator.meta.java:3340)
                char ch = nextExactChar();                                      // (JavaCodeGenerator.meta.java:3341)
                assert (ch =='\\');                                             // (JavaCodeGenerator.meta.java:3342)
                ch = nextExactChar();                                           // (JavaCodeGenerator.meta.java:3343)
                assert (ch == 'u');                                             // (JavaCodeGenerator.meta.java:3344)
                try {                                                           // (JavaCodeGenerator.meta.java:3345)
                    do {                                                        // (JavaCodeGenerator.meta.java:3346)
                        ch = nextExactChar();                                   // (JavaCodeGenerator.meta.java:3347)
                    } while (ch == 'u');                                        // (JavaCodeGenerator.meta.java:3348)
                    java.lang.StringBuilder number = new java.lang.StringBuilder(4);    // (JavaCodeGenerator.meta.java:3349)
                    number.append(ch);                                          // (JavaCodeGenerator.meta.java:3350)
                    number.append(nextExactChar());                             // (JavaCodeGenerator.meta.java:3351)
                    number.append(nextExactChar());                             // (JavaCodeGenerator.meta.java:3352)
                    number.append(nextExactChar());                             // (JavaCodeGenerator.meta.java:3353)
                    int code = java.lang.Integer.parseInt(number.toString(), 16);    // (JavaCodeGenerator.meta.java:3354)
                    return (char) code;                                         // (JavaCodeGenerator.meta.java:3355)
                } catch (java.lang.NumberFormatException x) {                   // (JavaCodeGenerator.meta.java:3356)
                } catch (java.lang.IndexOutOfBoundsException x) {               // (JavaCodeGenerator.meta.java:3357)
                }                                                               // (JavaCodeGenerator.meta.java:3358)
                throw new ParseException("illigal Unicode escape: " + text.subSequence(startIndex, index), sourceName, startIndex, startLine, startColumn);    // (JavaCodeGenerator.meta.java:3359)
            }                                                                   // (JavaCodeGenerator.meta.java:3360)
            private final char nextExactChar() throws ParseException, java.lang.IndexOutOfBoundsException {    // (JavaCodeGenerator.meta.java:3361)
                if (index >= end)                                               // (JavaCodeGenerator.meta.java:3362)
                    throw new java.lang.IndexOutOfBoundsException();            // (JavaCodeGenerator.meta.java:3363)
                char ch = text.charAt(index++);                                 // (JavaCodeGenerator.meta.java:3364)
                switch (ch) {                                                   // (JavaCodeGenerator.meta.java:3365)
                case '\r':                                                      // (JavaCodeGenerator.meta.java:3366)
                case '\n':                                                      // (JavaCodeGenerator.meta.java:3367)
                    if (ch == '\r') {                                           // (JavaCodeGenerator.meta.java:3368)
                        if (index < end && text.charAt(index) == '\n')          // (JavaCodeGenerator.meta.java:3369)
                            break;                                              // (JavaCodeGenerator.meta.java:3370)
                    }                                                           // (JavaCodeGenerator.meta.java:3371)
                    line++;                                                     // (JavaCodeGenerator.meta.java:3372)
                    column = 0;                                                 // (JavaCodeGenerator.meta.java:3373)
                    break;                                                      // (JavaCodeGenerator.meta.java:3374)
                case '\t':                                                      // (JavaCodeGenerator.meta.java:3375)
                    if (tabStop >= 1)                                           // (JavaCodeGenerator.meta.java:3376)
                        column = column - (column % tabStop) + tabStop;         // (JavaCodeGenerator.meta.java:3377)
                    break;                                                      // (JavaCodeGenerator.meta.java:3378)
                default:                                                        // (JavaCodeGenerator.meta.java:3379)
                    column++;                                                   // (JavaCodeGenerator.meta.java:3380)
                    break;                                                      // (JavaCodeGenerator.meta.java:3381)
                }                                                               // (JavaCodeGenerator.meta.java:3382)
                return ch;                                                      // (JavaCodeGenerator.meta.java:3383)
            }                                                                   // (JavaCodeGenerator.meta.java:3384)
        } // class Default.LexicalAnalyzer                                      // (JavaCodeGenerator.meta.java:3385)
                                                                                // (JavaCodeGenerator.meta.java:3386)
                                                                                // (JavaCodeGenerator.meta.java:3387)
        public static class AmbiguityAbsorber extends Default.Node implements BVH_Parser.AmbiguityAbsorber {    // (JavaCodeGenerator.meta.java:3389)
            public AmbiguityAbsorber(java.util.List<BVH_Parser.Node> ambiguityNodes) {    // (JavaCodeGenerator.meta.java:3390)
                super(ambiguityNodes);                                          // (JavaCodeGenerator.meta.java:3391)
            }                                                                   // (JavaCodeGenerator.meta.java:3392)
            public BVH_Parser.AmbiguityAbsorber getWrappedAmbiguityAbsorber() {    // (JavaCodeGenerator.meta.java:3393)
                return this;                                                    // (JavaCodeGenerator.meta.java:3394)
            }                                                                   // (JavaCodeGenerator.meta.java:3395)
        }                                                                       // (JavaCodeGenerator.meta.java:3396)
                                                                                // (JavaCodeGenerator.meta.java:3397)
                                                                                // (JavaCodeGenerator.meta.java:3568)
        /**
         * An implementation of <code>Bvh</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Bvh extends Default.Node implements BVH_Parser.Bvh {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Root root;                                       // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Root root() {                                     // (JavaCodeGenerator.meta.java:3628)
                return root;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.Motion motion;                                   // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Motion motion() {                                 // (JavaCodeGenerator.meta.java:3628)
                return motion;                                                  // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Bvh(java.util.List<BVH_Parser.Node> childNodes) {           // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Bvh(BVH_Parser.Bvh source) {                                 // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.root = source.root();                                      // (JavaCodeGenerator.meta.java:3713)
                this.motion = source.motion();                                  // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Bvh(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 15)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Root)) {               // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Root.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.root = (BVH_Parser.Root) node;                     // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 10)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Motion)) {             // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Motion.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.motion = (BVH_Parser.Motion) node;                 // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Bvh(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Root root, BVH_Parser.Motion motion) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.root = root;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (root != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(root);                                  // (JavaCodeGenerator.meta.java:3915)
                this.motion = motion;                                           // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (motion != null)                                             // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(motion);                                // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.root == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Root tmp;                                // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Root)            // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Root) newChild;               // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Root) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Root.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.root = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.motion == null) {                              // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Motion tmp;                              // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Motion)          // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Motion) newChild;             // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Motion) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Motion.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.motion = tmp;                                  // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.root) || this.root != null && oldChild.equals(this.root.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Root tmp;                                // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Root)            // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Root) newChild;               // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Root) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Root.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.root = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.motion) || this.motion != null && oldChild.equals(this.motion.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Motion tmp;                              // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Motion)          // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Motion) newChild;             // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Motion) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Motion.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.motion = tmp;                                  // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.root)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Root tmp;                                // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Root)            // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Root) newChild;               // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Root) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Root.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.root = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.motion)) {                     // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Motion tmp;                              // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Motion)          // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Motion) newChild;             // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Motion) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Motion.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.motion = tmp;                                  // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.root == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.root = (BVH_Parser.Root) newChild;                 // (JavaCodeGenerator.meta.java:4100)
                    if (this.motion == null)                                    // (JavaCodeGenerator.meta.java:4099)
                        this.motion = (BVH_Parser.Motion) newChild;             // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.root) || this.root != null && oldChild.equals(this.root.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.root = (BVH_Parser.Root) newChild;                 // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.motion) || this.motion != null && oldChild.equals(this.motion.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.motion = (BVH_Parser.Motion) newChild;             // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.root))                             // (JavaCodeGenerator.meta.java:4125)
                        this.root = (BVH_Parser.Root) newChild;                 // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.motion))                           // (JavaCodeGenerator.meta.java:4125)
                        this.motion = (BVH_Parser.Motion) newChild;             // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Bvh                                                          // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Root</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Root extends Default.Node implements BVH_Parser.Root {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Token name;                                      // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Token name() {                                    // (JavaCodeGenerator.meta.java:3628)
                return name;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.Components coms;                                 // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Components coms() {                               // (JavaCodeGenerator.meta.java:3628)
                return coms;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Root(java.util.List<BVH_Parser.Node> childNodes) {          // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Root(BVH_Parser.Root source) {                               // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.name = source.name();                                      // (JavaCodeGenerator.meta.java:3713)
                this.coms = source.coms();                                      // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Root(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 11)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Token)) {              // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.name = (BVH_Parser.Token) node;                    // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 2)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Components)) {         // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.coms = (BVH_Parser.Components) node;               // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Root(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Token name, BVH_Parser.Components coms) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.name = name;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (name != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(name);                                  // (JavaCodeGenerator.meta.java:3915)
                this.coms = coms;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (coms != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(coms);                                  // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.name == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.name = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.coms == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Components tmp;                          // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Components)      // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Components) newChild;         // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Components) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.coms = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.name) || this.name != null && oldChild.equals(this.name.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.name = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.coms) || this.coms != null && oldChild.equals(this.coms.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Components tmp;                          // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Components)      // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Components) newChild;         // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Components) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.coms = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.name)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.name = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.coms)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Components tmp;                          // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Components)      // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Components) newChild;         // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Components) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.coms = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.name == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.name = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4100)
                    if (this.coms == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.coms = (BVH_Parser.Components) newChild;           // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.name) || this.name != null && oldChild.equals(this.name.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.name = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.coms) || this.coms != null && oldChild.equals(this.coms.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.coms = (BVH_Parser.Components) newChild;           // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.name))                             // (JavaCodeGenerator.meta.java:4125)
                        this.name = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.coms))                             // (JavaCodeGenerator.meta.java:4125)
                        this.coms = (BVH_Parser.Components) newChild;           // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Root                                                         // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Components</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Components extends Default.Node implements BVH_Parser.Components {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Offset offset;                                   // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Offset offset() {                                 // (JavaCodeGenerator.meta.java:3628)
                return offset;                                                  // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.Channels channels;                               // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Channels channels() {                             // (JavaCodeGenerator.meta.java:3628)
                return channels;                                                // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.Joints joints;                                   // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Joints joints() {                                 // (JavaCodeGenerator.meta.java:3628)
                return joints;                                                  // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Components(java.util.List<BVH_Parser.Node> childNodes) {    // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Components(BVH_Parser.Components source) {                   // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.offset = source.offset();                                  // (JavaCodeGenerator.meta.java:3713)
                this.channels = source.channels();                              // (JavaCodeGenerator.meta.java:3713)
                this.joints = source.joints();                                  // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Components(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 14)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Offset)) {             // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.offset = (BVH_Parser.Offset) node;                 // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 1)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Channels)) {           // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Channels.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.channels = (BVH_Parser.Channels) node;             // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 8)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Joints)) {             // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.joints = (BVH_Parser.Joints) node;                 // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Components(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Offset offset, BVH_Parser.Channels channels, BVH_Parser.Joints joints) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.offset = offset;                                           // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (offset != null)                                             // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(offset);                                // (JavaCodeGenerator.meta.java:3915)
                this.channels = channels;                                       // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (channels != null)                                           // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(channels);                              // (JavaCodeGenerator.meta.java:3915)
                this.joints = joints;                                           // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (joints != null)                                             // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(joints);                                // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.offset == null) {                              // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Offset tmp;                              // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Offset)          // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Offset) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.offset = tmp;                                  // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.channels == null) {                            // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Channels tmp;                            // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Channels)        // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Channels) newChild;           // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Channels) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Channels.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.channels = tmp;                                // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.joints == null) {                              // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Joints tmp;                              // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Joints)          // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Joints) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.joints = tmp;                                  // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.offset) || this.offset != null && oldChild.equals(this.offset.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Offset tmp;                              // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Offset)          // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Offset) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.offset = tmp;                                  // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.channels) || this.channels != null && oldChild.equals(this.channels.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Channels tmp;                            // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Channels)        // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Channels) newChild;           // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Channels) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Channels.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.channels = tmp;                                // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.joints) || this.joints != null && oldChild.equals(this.joints.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Joints tmp;                              // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Joints)          // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Joints) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.joints = tmp;                                  // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.offset)) {                     // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Offset tmp;                              // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Offset)          // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Offset) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.offset = tmp;                                  // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.channels)) {                   // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Channels tmp;                            // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Channels)        // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Channels) newChild;           // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Channels) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Channels.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.channels = tmp;                                // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.joints)) {                     // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Joints tmp;                              // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Joints)          // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Joints) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.joints = tmp;                                  // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.offset == null)                                    // (JavaCodeGenerator.meta.java:4099)
                        this.offset = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4100)
                    if (this.channels == null)                                  // (JavaCodeGenerator.meta.java:4099)
                        this.channels = (BVH_Parser.Channels) newChild;         // (JavaCodeGenerator.meta.java:4100)
                    if (this.joints == null)                                    // (JavaCodeGenerator.meta.java:4099)
                        this.joints = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.offset) || this.offset != null && oldChild.equals(this.offset.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.offset = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.channels) || this.channels != null && oldChild.equals(this.channels.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.channels = (BVH_Parser.Channels) newChild;         // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.joints) || this.joints != null && oldChild.equals(this.joints.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.joints = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.offset))                           // (JavaCodeGenerator.meta.java:4125)
                        this.offset = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.channels))                         // (JavaCodeGenerator.meta.java:4125)
                        this.channels = (BVH_Parser.Channels) newChild;         // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.joints))                           // (JavaCodeGenerator.meta.java:4125)
                        this.joints = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Components                                                   // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Offset</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Offset extends Default.Node implements BVH_Parser.Offset {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Numbers numbers;                                 // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Numbers numbers() {                               // (JavaCodeGenerator.meta.java:3628)
                return numbers;                                                 // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Offset(java.util.List<BVH_Parser.Node> childNodes) {        // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Offset(BVH_Parser.Offset source) {                           // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.numbers = source.numbers();                                // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Offset(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 13)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Numbers)) {            // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.numbers = (BVH_Parser.Numbers) node;               // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Offset(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Numbers numbers) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.numbers = numbers;                                         // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (numbers != null)                                            // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(numbers);                               // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.numbers == null) {                             // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Numbers tmp;                             // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Numbers)         // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Numbers) newChild;            // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Numbers) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.numbers = tmp;                                 // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.numbers) || this.numbers != null && oldChild.equals(this.numbers.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Numbers tmp;                             // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Numbers)         // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Numbers) newChild;            // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Numbers) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.numbers = tmp;                                 // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.numbers)) {                    // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Numbers tmp;                             // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Numbers)         // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Numbers) newChild;            // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Numbers) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.numbers = tmp;                                 // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.numbers == null)                                   // (JavaCodeGenerator.meta.java:4099)
                        this.numbers = (BVH_Parser.Numbers) newChild;           // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.numbers) || this.numbers != null && oldChild.equals(this.numbers.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.numbers = (BVH_Parser.Numbers) newChild;           // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.numbers))                          // (JavaCodeGenerator.meta.java:4125)
                        this.numbers = (BVH_Parser.Numbers) newChild;           // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Offset                                                       // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Channels</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Channels extends Default.Node implements BVH_Parser.Channels {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Node d;                                          // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Node d() {                                        // (JavaCodeGenerator.meta.java:3628)
                return d;                                                       // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.KindsOfChannel kinds;                            // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.KindsOfChannel kinds() {                          // (JavaCodeGenerator.meta.java:3628)
                return kinds;                                                   // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Channels(java.util.List<BVH_Parser.Node> childNodes) {      // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Channels(BVH_Parser.Channels source) {                       // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.d = source.d();                                            // (JavaCodeGenerator.meta.java:3713)
                this.kinds = source.kinds();                                    // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Channels(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 3)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Node)) {               // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.d = (BVH_Parser.Node) node;                        // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 9)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.KindsOfChannel)) {     // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.kinds = (BVH_Parser.KindsOfChannel) node;          // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Channels(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Node d, BVH_Parser.KindsOfChannel kinds) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.d = d;                                                     // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (d != null)                                                  // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(d);                                     // (JavaCodeGenerator.meta.java:3915)
                this.kinds = kinds;                                             // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (kinds != null)                                              // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(kinds);                                 // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.d == null) {                                   // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.d = tmp;                                       // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.kinds == null) {                               // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.KindsOfChannel tmp;                      // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.KindsOfChannel)    // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.KindsOfChannel) newChild;     // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.KindsOfChannel) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.kinds = tmp;                                   // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.d) || this.d != null && oldChild.equals(this.d.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.d = tmp;                                       // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.kinds) || this.kinds != null && oldChild.equals(this.kinds.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.KindsOfChannel tmp;                      // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.KindsOfChannel)    // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.KindsOfChannel) newChild;     // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.KindsOfChannel) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.kinds = tmp;                                   // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.d)) {                          // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.d = tmp;                                       // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.kinds)) {                      // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.KindsOfChannel tmp;                      // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.KindsOfChannel)    // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.KindsOfChannel) newChild;     // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.KindsOfChannel) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.kinds = tmp;                                   // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.d == null)                                         // (JavaCodeGenerator.meta.java:4099)
                        this.d = (BVH_Parser.Node) newChild;                    // (JavaCodeGenerator.meta.java:4100)
                    if (this.kinds == null)                                     // (JavaCodeGenerator.meta.java:4099)
                        this.kinds = (BVH_Parser.KindsOfChannel) newChild;      // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.d) || this.d != null && oldChild.equals(this.d.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.d = (BVH_Parser.Node) newChild;                    // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.kinds) || this.kinds != null && oldChild.equals(this.kinds.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.kinds = (BVH_Parser.KindsOfChannel) newChild;      // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.d))                                // (JavaCodeGenerator.meta.java:4125)
                        this.d = (BVH_Parser.Node) newChild;                    // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.kinds))                            // (JavaCodeGenerator.meta.java:4125)
                        this.kinds = (BVH_Parser.KindsOfChannel) newChild;      // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Channels                                                     // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>KindsOfChannel</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class KindsOfChannel extends Default.Node implements BVH_Parser.KindsOfChannel {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Token d1;                                        // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Token d1() {                                      // (JavaCodeGenerator.meta.java:3628)
                return d1;                                                      // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.KindsOfChannel next;                             // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.KindsOfChannel next() {                           // (JavaCodeGenerator.meta.java:3628)
                return next;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private KindsOfChannel(java.util.List<BVH_Parser.Node> childNodes) {    // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public KindsOfChannel(BVH_Parser.KindsOfChannel source) {           // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.d1 = source.d1();                                          // (JavaCodeGenerator.meta.java:3713)
                this.next = source.next();                                      // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public KindsOfChannel(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 4)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Token)) {              // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.d1 = (BVH_Parser.Token) node;                      // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 12)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.KindsOfChannel)) {     // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.next = (BVH_Parser.KindsOfChannel) node;           // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public KindsOfChannel(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Token d1, BVH_Parser.KindsOfChannel next) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.d1 = d1;                                                   // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (d1 != null)                                                 // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(d1);                                    // (JavaCodeGenerator.meta.java:3915)
                this.next = next;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (next != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(next);                                  // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.d1 == null) {                                  // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.d1 = tmp;                                      // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.next == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.KindsOfChannel tmp;                      // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.KindsOfChannel)    // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.KindsOfChannel) newChild;     // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.KindsOfChannel) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.next = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.d1) || this.d1 != null && oldChild.equals(this.d1.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.d1 = tmp;                                      // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.next) || this.next != null && oldChild.equals(this.next.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.KindsOfChannel tmp;                      // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.KindsOfChannel)    // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.KindsOfChannel) newChild;     // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.KindsOfChannel) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.next = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.d1)) {                         // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.d1 = tmp;                                      // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.next)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.KindsOfChannel tmp;                      // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.KindsOfChannel)    // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.KindsOfChannel) newChild;     // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.KindsOfChannel) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.KindsOfChannel.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.next = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.d1 == null)                                        // (JavaCodeGenerator.meta.java:4099)
                        this.d1 = (BVH_Parser.Token) newChild;                  // (JavaCodeGenerator.meta.java:4100)
                    if (this.next == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.next = (BVH_Parser.KindsOfChannel) newChild;       // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.d1) || this.d1 != null && oldChild.equals(this.d1.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.d1 = (BVH_Parser.Token) newChild;                  // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.next) || this.next != null && oldChild.equals(this.next.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.next = (BVH_Parser.KindsOfChannel) newChild;       // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.d1))                               // (JavaCodeGenerator.meta.java:4125)
                        this.d1 = (BVH_Parser.Token) newChild;                  // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.next))                             // (JavaCodeGenerator.meta.java:4125)
                        this.next = (BVH_Parser.KindsOfChannel) newChild;       // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class KindsOfChannel                                               // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Joints</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Joints extends Default.Node implements BVH_Parser.Joints {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Node joint;                                      // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Node joint() {                                    // (JavaCodeGenerator.meta.java:3628)
                return joint;                                                   // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.Joints next;                                     // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Joints next() {                                   // (JavaCodeGenerator.meta.java:3628)
                return next;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Joints(java.util.List<BVH_Parser.Node> childNodes) {        // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Joints(BVH_Parser.Joints source) {                           // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.joint = source.joint();                                    // (JavaCodeGenerator.meta.java:3713)
                this.next = source.next();                                      // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Joints(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 7)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Node)) {               // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.joint = (BVH_Parser.Node) node;                    // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 12)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Joints)) {             // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.next = (BVH_Parser.Joints) node;                   // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Joints(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Node joint, BVH_Parser.Joints next) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.joint = joint;                                             // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (joint != null)                                              // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(joint);                                 // (JavaCodeGenerator.meta.java:3915)
                this.next = next;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (next != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(next);                                  // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.joint == null) {                               // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.joint = tmp;                                   // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.next == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Joints tmp;                              // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Joints)          // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Joints) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.next = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.joint) || this.joint != null && oldChild.equals(this.joint.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.joint = tmp;                                   // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.next) || this.next != null && oldChild.equals(this.next.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Joints tmp;                              // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Joints)          // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Joints) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.next = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.joint)) {                      // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.joint = tmp;                                   // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.next)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Joints tmp;                              // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Joints)          // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Joints) newChild;             // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Joints) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Joints.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.next = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.joint == null)                                     // (JavaCodeGenerator.meta.java:4099)
                        this.joint = (BVH_Parser.Node) newChild;                // (JavaCodeGenerator.meta.java:4100)
                    if (this.next == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.next = (BVH_Parser.Joints) newChild;               // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.joint) || this.joint != null && oldChild.equals(this.joint.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.joint = (BVH_Parser.Node) newChild;                // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.next) || this.next != null && oldChild.equals(this.next.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.next = (BVH_Parser.Joints) newChild;               // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.joint))                            // (JavaCodeGenerator.meta.java:4125)
                        this.joint = (BVH_Parser.Node) newChild;                // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.next))                             // (JavaCodeGenerator.meta.java:4125)
                        this.next = (BVH_Parser.Joints) newChild;               // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Joints                                                       // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Joint</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Joint extends Default.Node implements BVH_Parser.Joint {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Token name;                                      // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Token name() {                                    // (JavaCodeGenerator.meta.java:3628)
                return name;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.Components coms;                                 // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Components coms() {                               // (JavaCodeGenerator.meta.java:3628)
                return coms;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Joint(java.util.List<BVH_Parser.Node> childNodes) {         // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Joint(BVH_Parser.Joint source) {                             // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.name = source.name();                                      // (JavaCodeGenerator.meta.java:3713)
                this.coms = source.coms();                                      // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Joint(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 11)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Token)) {              // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.name = (BVH_Parser.Token) node;                    // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 2)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Components)) {         // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.coms = (BVH_Parser.Components) node;               // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Joint(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Token name, BVH_Parser.Components coms) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.name = name;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (name != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(name);                                  // (JavaCodeGenerator.meta.java:3915)
                this.coms = coms;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (coms != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(coms);                                  // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.name == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.name = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.coms == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Components tmp;                          // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Components)      // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Components) newChild;         // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Components) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.coms = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.name) || this.name != null && oldChild.equals(this.name.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.name = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.coms) || this.coms != null && oldChild.equals(this.coms.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Components tmp;                          // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Components)      // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Components) newChild;         // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Components) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.coms = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.name)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.name = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.coms)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Components tmp;                          // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Components)      // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Components) newChild;         // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Components) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Components.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.coms = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.name == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.name = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4100)
                    if (this.coms == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.coms = (BVH_Parser.Components) newChild;           // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.name) || this.name != null && oldChild.equals(this.name.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.name = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.coms) || this.coms != null && oldChild.equals(this.coms.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.coms = (BVH_Parser.Components) newChild;           // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.name))                             // (JavaCodeGenerator.meta.java:4125)
                        this.name = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.coms))                             // (JavaCodeGenerator.meta.java:4125)
                        this.coms = (BVH_Parser.Components) newChild;           // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Joint                                                        // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>EndSite</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class EndSite extends Default.Node implements BVH_Parser.EndSite {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Offset offset;                                   // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Offset offset() {                                 // (JavaCodeGenerator.meta.java:3628)
                return offset;                                                  // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private EndSite(java.util.List<BVH_Parser.Node> childNodes) {       // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public EndSite(BVH_Parser.EndSite source) {                         // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.offset = source.offset();                                  // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public EndSite(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 14)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Offset)) {             // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.offset = (BVH_Parser.Offset) node;                 // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public EndSite(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Offset offset) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.offset = offset;                                           // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (offset != null)                                             // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(offset);                                // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.offset == null) {                              // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Offset tmp;                              // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Offset)          // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Offset) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.offset = tmp;                                  // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.offset) || this.offset != null && oldChild.equals(this.offset.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Offset tmp;                              // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Offset)          // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Offset) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.offset = tmp;                                  // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.offset)) {                     // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Offset tmp;                              // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Offset)          // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Offset) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Offset.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.offset = tmp;                                  // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.offset == null)                                    // (JavaCodeGenerator.meta.java:4099)
                        this.offset = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.offset) || this.offset != null && oldChild.equals(this.offset.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.offset = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.offset))                           // (JavaCodeGenerator.meta.java:4125)
                        this.offset = (BVH_Parser.Offset) newChild;             // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class EndSite                                                      // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Motion</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Motion extends Default.Node implements BVH_Parser.Motion {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Node frame;                                      // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Node frame() {                                    // (JavaCodeGenerator.meta.java:3628)
                return frame;                                                   // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
            private BVH_Parser.Numbers numbers;                                 // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Numbers numbers() {                               // (JavaCodeGenerator.meta.java:3628)
                return numbers;                                                 // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Motion(java.util.List<BVH_Parser.Node> childNodes) {        // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Motion(BVH_Parser.Motion source) {                           // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.frame = source.frame();                                    // (JavaCodeGenerator.meta.java:3713)
                this.numbers = source.numbers();                                // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Motion(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 6)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Node)) {               // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.frame = (BVH_Parser.Node) node;                    // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                    if ((no & (1 << 13)) != 0) {                                // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Numbers)) {            // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.numbers = (BVH_Parser.Numbers) node;               // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Motion(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Node frame, BVH_Parser.Numbers numbers) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.frame = frame;                                             // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (frame != null)                                              // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(frame);                                 // (JavaCodeGenerator.meta.java:3915)
                this.numbers = numbers;                                         // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (numbers != null)                                            // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(numbers);                               // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.frame == null) {                               // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.frame = tmp;                                   // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                        if (this.numbers == null) {                             // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Numbers tmp;                             // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Numbers)         // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Numbers) newChild;            // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Numbers) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.numbers = tmp;                                 // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.frame) || this.frame != null && oldChild.equals(this.frame.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.frame = tmp;                                   // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                        if (oldChild.equals(this.numbers) || this.numbers != null && oldChild.equals(this.numbers.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Numbers tmp;                             // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Numbers)         // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Numbers) newChild;            // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Numbers) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.numbers = tmp;                                 // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.frame)) {                      // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Node tmp;                                // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Node)            // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Node) newChild;               // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Node) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Node.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.frame = tmp;                                   // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                        if (oldChild.equals(this.numbers)) {                    // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Numbers tmp;                             // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Numbers)         // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Numbers) newChild;            // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Numbers) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Numbers.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.numbers = tmp;                                 // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.frame == null)                                     // (JavaCodeGenerator.meta.java:4099)
                        this.frame = (BVH_Parser.Node) newChild;                // (JavaCodeGenerator.meta.java:4100)
                    if (this.numbers == null)                                   // (JavaCodeGenerator.meta.java:4099)
                        this.numbers = (BVH_Parser.Numbers) newChild;           // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.frame) || this.frame != null && oldChild.equals(this.frame.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.frame = (BVH_Parser.Node) newChild;                // (JavaCodeGenerator.meta.java:4113)
                    if (oldChild.equals(this.numbers) || this.numbers != null && oldChild.equals(this.numbers.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.numbers = (BVH_Parser.Numbers) newChild;           // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.frame))                            // (JavaCodeGenerator.meta.java:4125)
                        this.frame = (BVH_Parser.Node) newChild;                // (JavaCodeGenerator.meta.java:4126)
                    if (oldChild.equals(this.numbers))                          // (JavaCodeGenerator.meta.java:4125)
                        this.numbers = (BVH_Parser.Numbers) newChild;           // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Motion                                                       // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Numbers</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Numbers extends Default.Node implements BVH_Parser.Numbers {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Token d;                                         // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Token d() {                                       // (JavaCodeGenerator.meta.java:3628)
                return d;                                                       // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Numbers(java.util.List<BVH_Parser.Node> childNodes) {       // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Numbers(BVH_Parser.Numbers source) {                         // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.d = source.d();                                            // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Numbers(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 3)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Token)) {              // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.d = (BVH_Parser.Token) node;                       // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Numbers(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Token d) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.d = d;                                                     // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (d != null)                                                  // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(d);                                     // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.d == null) {                                   // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.d = tmp;                                       // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.d) || this.d != null && oldChild.equals(this.d.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.d = tmp;                                       // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.d)) {                          // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.d = tmp;                                       // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.d == null)                                         // (JavaCodeGenerator.meta.java:4099)
                        this.d = (BVH_Parser.Token) newChild;                   // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.d) || this.d != null && oldChild.equals(this.d.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.d = (BVH_Parser.Token) newChild;                   // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.d))                                // (JavaCodeGenerator.meta.java:4125)
                        this.d = (BVH_Parser.Token) newChild;                   // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Numbers                                                      // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Minus</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Minus extends Default.Node implements BVH_Parser.Minus {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Token data;                                      // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Token data() {                                    // (JavaCodeGenerator.meta.java:3628)
                return data;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Minus(java.util.List<BVH_Parser.Node> childNodes) {         // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Minus(BVH_Parser.Minus source) {                             // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.data = source.data();                                      // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Minus(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 5)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Token)) {              // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.data = (BVH_Parser.Token) node;                    // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Minus(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Token data) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.data = data;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (data != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(data);                                  // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.data == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.data = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.data) || this.data != null && oldChild.equals(this.data.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.data = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.data)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.data = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.data == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.data = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.data) || this.data != null && oldChild.equals(this.data.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.data = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.data))                             // (JavaCodeGenerator.meta.java:4125)
                        this.data = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Minus                                                        // (JavaCodeGenerator.meta.java:4188)
        /**
         * An implementation of <code>Plus</code> node.
         *
         * @since   notavaCC 1.0
         */
        public static class Plus extends Default.Node implements BVH_Parser.Plus {    // (JavaCodeGenerator.meta.java:3620)
            private BVH_Parser.Token data;                                      // (JavaCodeGenerator.meta.java:3627)
            public BVH_Parser.Token data() {                                    // (JavaCodeGenerator.meta.java:3628)
                return data;                                                    // (JavaCodeGenerator.meta.java:3629)
            }                                                                   // (JavaCodeGenerator.meta.java:3630)
                                                                                // (JavaCodeGenerator.meta.java:3644)
            private Plus(java.util.List<BVH_Parser.Node> childNodes) {          // (JavaCodeGenerator.meta.java:3650)
                super(childNodes);                                              // (JavaCodeGenerator.meta.java:3651)
            }                                                                   // (JavaCodeGenerator.meta.java:3652)
                                                                                // (JavaCodeGenerator.meta.java:3654)
            /**
             * Constructs a instance with the child nodes given by <code>source.getChildNodes()</code> etc.
             * <code>List</code> objects are copied.
             *
             * @param   source
             *            the source.
             */
            public Plus(BVH_Parser.Plus source) {                               // (JavaCodeGenerator.meta.java:3688)
                this(new java.util.LinkedList<BVH_Parser.Node>(source.getChildNodes()));    // (JavaCodeGenerator.meta.java:3692)
                                                                                // (JavaCodeGenerator.meta.java:3694)
                this.data = source.data();                                      // (JavaCodeGenerator.meta.java:3713)
            }                                                                   // (JavaCodeGenerator.meta.java:3717)
                                                                                // (JavaCodeGenerator.meta.java:3718)
            /**
             * Constructs a instance with the child nodes given by <code>parameters</code>.
             *
             * @param   parameters
             *            the parameters for initialization.
             * @param   compact
             *            remove the children that are not labeled.
             */
            public Plus(BVH_Parser.NodeInitializationParameters parameters, boolean compact) {    // (JavaCodeGenerator.meta.java:3738)
                this(new java.util.LinkedList<BVH_Parser.Node>());              // (JavaCodeGenerator.meta.java:3742)
                                                                                // (JavaCodeGenerator.meta.java:3744)
                BVH_Parser.Node[] childNodes = parameters.childNodes;           // (JavaCodeGenerator.meta.java:3745)
                java.util.List labelBitsList = parameters.labelBitsList;        // (JavaCodeGenerator.meta.java:3746)
                                                                                // (JavaCodeGenerator.meta.java:3747)
                                                                                // (JavaCodeGenerator.meta.java:3763)
                java.util.Iterator it = labelBitsList.iterator();               // (JavaCodeGenerator.meta.java:3781)
                int size = labelBitsList.size();                                // (JavaCodeGenerator.meta.java:3782)
                for (int i = 0; i < size; i++) {                                // (JavaCodeGenerator.meta.java:3783)
                    java.lang.Integer number = (java.lang.Integer) it.next();    // (JavaCodeGenerator.meta.java:3785)
                    int no = (number == null) ? 0 : number.intValue();          // (JavaCodeGenerator.meta.java:3786)
                    if (!compact || no != 0)                                    // (JavaCodeGenerator.meta.java:3793)
                        getChildNodes().add(childNodes[i]);                     // (JavaCodeGenerator.meta.java:3794)
                    if ((no & (1 << 5)) != 0) {                                 // (JavaCodeGenerator.meta.java:3813)
                        BVH_Parser.Node node = childNodes[i];                   // (JavaCodeGenerator.meta.java:3833)
                        if (!(node instanceof BVH_Parser.Token)) {              // (JavaCodeGenerator.meta.java:3834)
                            node = __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) node, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:3838)
                        }                                                       // (JavaCodeGenerator.meta.java:3841)
                        this.data = (BVH_Parser.Token) node;                    // (JavaCodeGenerator.meta.java:3842)
                    }                                                           // (JavaCodeGenerator.meta.java:3847)
                }                                                               // (JavaCodeGenerator.meta.java:3851)
                                                                                // (JavaCodeGenerator.meta.java:3854)
            }                                                                   // (JavaCodeGenerator.meta.java:3871)
                                                                                // (JavaCodeGenerator.meta.java:3872)
            public Plus(java.util.List<BVH_Parser.Node> childNodes, BVH_Parser.Token data) {    // (JavaCodeGenerator.meta.java:3885)
                this(childNodes);                                               // (JavaCodeGenerator.meta.java:3886)
                                                                                // (JavaCodeGenerator.meta.java:3887)
                this.data = data;                                               // (JavaCodeGenerator.meta.java:3904)
                                                                                // (JavaCodeGenerator.meta.java:3906)
                if (data != null)                                               // (JavaCodeGenerator.meta.java:3914)
                    getChildNodes().add(data);                                  // (JavaCodeGenerator.meta.java:3915)
                                                                                // (JavaCodeGenerator.meta.java:3918)
            }                                                                   // (JavaCodeGenerator.meta.java:3937)
                                                                                // (JavaCodeGenerator.meta.java:3940)
            public void replaceChild(BVH_Parser.Node oldChild, BVH_Parser.Node newChild) {    // (JavaCodeGenerator.meta.java:3941)
                if (oldChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3943)
                    oldChild = oldChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3944)
                if (newChild.getWrappedAmbiguityAbsorber() != null)             // (JavaCodeGenerator.meta.java:3945)
                    newChild = newChild.getWrappedAmbiguityAbsorber();          // (JavaCodeGenerator.meta.java:3946)
                                                                                // (JavaCodeGenerator.meta.java:3947)
                __replaceAll__notavacc_reserved(getChildNodes(), oldChild, newChild);    // (JavaCodeGenerator.meta.java:3952)
                                                                                // (JavaCodeGenerator.meta.java:3954)
                if (newChild instanceof BVH_Parser.AmbiguityAbsorber) {         // (JavaCodeGenerator.meta.java:3956)
                                                                                // (JavaCodeGenerator.meta.java:3989)
                    if (oldChild == null) {                                     // (JavaCodeGenerator.meta.java:3990)
                        if (this.data == null) {                                // (JavaCodeGenerator.meta.java:3997)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:3998)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:3999)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4000)
                            else                                                // (JavaCodeGenerator.meta.java:4001)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4003)
                            this.data = tmp;                                    // (JavaCodeGenerator.meta.java:4006)
                        }                                                       // (JavaCodeGenerator.meta.java:4007)
                    } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4012)
                        if (oldChild.equals(this.data) || this.data != null && oldChild.equals(this.data.getWrappedAmbiguityAbsorber())) {    // (JavaCodeGenerator.meta.java:4019)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4020)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4021)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4022)
                            else                                                // (JavaCodeGenerator.meta.java:4023)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4025)
                            this.data = tmp;                                    // (JavaCodeGenerator.meta.java:4028)
                        }                                                       // (JavaCodeGenerator.meta.java:4029)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4034)
                        if (oldChild.equals(this.data)) {                       // (JavaCodeGenerator.meta.java:4041)
                            BVH_Parser.Token tmp;                               // (JavaCodeGenerator.meta.java:4042)
                            if (newChild instanceof BVH_Parser.Token)           // (JavaCodeGenerator.meta.java:4043)
                                tmp = (BVH_Parser.Token) newChild;              // (JavaCodeGenerator.meta.java:4044)
                            else                                                // (JavaCodeGenerator.meta.java:4045)
                                tmp = (BVH_Parser.Token) __createAmbiguousWrapper__notavacc_reserved((BVH_Parser.AmbiguityAbsorber) newChild, BVH_Parser.Token.class);    // (JavaCodeGenerator.meta.java:4047)
                            this.data = tmp;                                    // (JavaCodeGenerator.meta.java:4050)
                        }                                                       // (JavaCodeGenerator.meta.java:4051)
                    }                                                           // (JavaCodeGenerator.meta.java:4055)
                    return;                                                     // (JavaCodeGenerator.meta.java:4056)
                }                                                               // (JavaCodeGenerator.meta.java:4057)
                                                                                // (JavaCodeGenerator.meta.java:4059)
                                                                                // (JavaCodeGenerator.meta.java:4060)
                                                                                // (JavaCodeGenerator.meta.java:4091)
                if (oldChild == null) {                                         // (JavaCodeGenerator.meta.java:4092)
                    if (this.data == null)                                      // (JavaCodeGenerator.meta.java:4099)
                        this.data = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4100)
                } else if (oldChild instanceof BVH_Parser.AmbiguityAbsorber) {    // (JavaCodeGenerator.meta.java:4105)
                    if (oldChild.equals(this.data) || this.data != null && oldChild.equals(this.data.getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:4112)
                        this.data = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4113)
                } else {                                                        // (JavaCodeGenerator.meta.java:4118)
                    if (oldChild.equals(this.data))                             // (JavaCodeGenerator.meta.java:4125)
                        this.data = (BVH_Parser.Token) newChild;                // (JavaCodeGenerator.meta.java:4126)
                }                                                               // (JavaCodeGenerator.meta.java:4130)
            }                                                                   // (JavaCodeGenerator.meta.java:4131)
                                                                                // (JavaCodeGenerator.meta.java:4132)
                                                                                // (JavaCodeGenerator.meta.java:4187)
        } // class Plus                                                         // (JavaCodeGenerator.meta.java:4188)
                                                                                // (JavaCodeGenerator.meta.java:4191)
                                                                                // (JavaCodeGenerator.meta.java:4192)
    } // Default                                                                // (JavaCodeGenerator.meta.java:4194)
                                                                                // (JavaCodeGenerator.meta.java:4195)
    private static Node __createAmbiguousWrapper__notavacc_reserved(final BVH_Parser.AmbiguityAbsorber ambiguousNode, final java.lang.Class interfaceType) {    // (JavaCodeGenerator.meta.java:4199)
        return (Node) java.lang.reflect.Proxy.newProxyInstance(BVH_Parser.class.getClassLoader(), new java.lang.Class[] { interfaceType }, new java.lang.reflect.InvocationHandler() {    // (JavaCodeGenerator.meta.java:4200)
            public java.lang.Object invoke(java.lang.Object proxy, java.lang.reflect.Method method, java.lang.Object[] args) throws java.lang.Throwable {    // (JavaCodeGenerator.meta.java:4201)
                if (method.getName().equals("getWrappedAmbiguityAbsorber") && (args == null || args.length == 0)) {    // (JavaCodeGenerator.meta.java:4202)
                    return ambiguousNode;                                       // (JavaCodeGenerator.meta.java:4203)
                } else if (method.getName().equals("toString") && (args == null || args.length == 0)) {    // (JavaCodeGenerator.meta.java:4204)
                    return "AmbiguousWrapper wrapping " + ambiguousNode.toString();    // (JavaCodeGenerator.meta.java:4205)
                } else {                                                        // (JavaCodeGenerator.meta.java:4212)
                    throw new java.lang.UnsupportedOperationException(interfaceType.getName() + "#" + method.getName() + " by " + ambiguousNode.getClass());    // (JavaCodeGenerator.meta.java:4213)
                }                                                               // (JavaCodeGenerator.meta.java:4214)
            }                                                                   // (JavaCodeGenerator.meta.java:4215)
        });                                                                     // (JavaCodeGenerator.meta.java:4216)
    }                                                                           // (JavaCodeGenerator.meta.java:4217)
                                                                                // (JavaCodeGenerator.meta.java:4272)
                                                                                // (JavaCodeGenerator.meta.java:4283)
    private static class __Link__notavacc_reserved<T> {                         // (JavaCodeGenerator.meta.java:4285)
        public T value;                                                         // (JavaCodeGenerator.meta.java:4297)
        public __Link__notavacc_reserved<T> next;                               // (JavaCodeGenerator.meta.java:4298)
        public __Link__notavacc_reserved(T value, __Link__notavacc_reserved<T> next) {    // (JavaCodeGenerator.meta.java:4299)
            this.value = value;                                                 // (JavaCodeGenerator.meta.java:4300)
            this.next = next;                                                   // (JavaCodeGenerator.meta.java:4301)
        }                                                                       // (JavaCodeGenerator.meta.java:4302)
        public void addLink(T value) {                                          // (JavaCodeGenerator.meta.java:4303)
            this.next = new __Link__notavacc_reserved<T>(value, this.next);     // (JavaCodeGenerator.meta.java:4304)
        }                                                                       // (JavaCodeGenerator.meta.java:4305)
        public static java.lang.Object[] toArray(__Context__notavacc_reserved context, __Link__notavacc_reserved link) {    // (JavaCodeGenerator.meta.java:4307)
            __Link__notavacc_reserved cursor = link;                            // (JavaCodeGenerator.meta.java:4308)
            for (; cursor != null; cursor = cursor.next) {                      // (JavaCodeGenerator.meta.java:4309)
                context.tmpList.add(cursor.value);                              // (JavaCodeGenerator.meta.java:4310)
            }                                                                   // (JavaCodeGenerator.meta.java:4311)
            java.lang.Object[] result = context.tmpList.toArray(new java.lang.Object[context.tmpList.size()]);    // (JavaCodeGenerator.meta.java:4312)
            context.tmpList.clear();                                            // (JavaCodeGenerator.meta.java:4313)
            return result;                                                      // (JavaCodeGenerator.meta.java:4314)
        }                                                                       // (JavaCodeGenerator.meta.java:4315)
        public static java.lang.Object[] toArray(__Context__notavacc_reserved context, __Link__notavacc_reserved link, java.lang.Object[] array) {    // (JavaCodeGenerator.meta.java:4316)
            __Link__notavacc_reserved cursor = link;                            // (JavaCodeGenerator.meta.java:4317)
            for (; cursor != null; cursor = cursor.next) {                      // (JavaCodeGenerator.meta.java:4318)
                context.tmpList.add(cursor.value);                              // (JavaCodeGenerator.meta.java:4319)
            }                                                                   // (JavaCodeGenerator.meta.java:4320)
            java.lang.Object[] result = context.tmpList.toArray(array);         // (JavaCodeGenerator.meta.java:4321)
            context.tmpList.clear();                                            // (JavaCodeGenerator.meta.java:4322)
            return result;                                                      // (JavaCodeGenerator.meta.java:4323)
        }                                                                       // (JavaCodeGenerator.meta.java:4324)
    }                                                                           // (JavaCodeGenerator.meta.java:4343)
    private static class __ObjectLink__notavacc_reserved extends __Link__notavacc_reserved<java.lang.Object> {    // (JavaCodeGenerator.meta.java:4346)
        public __ObjectLink__notavacc_reserved(java.lang.Object value, __Link__notavacc_reserved<java.lang.Object> next) {    // (JavaCodeGenerator.meta.java:4347)
            super(value, next);                                                 // (JavaCodeGenerator.meta.java:4348)
        }                                                                       // (JavaCodeGenerator.meta.java:4349)
    }                                                                           // (JavaCodeGenerator.meta.java:4350)
    private static class __ObjectList__notavacc_reserved extends java.util.LinkedList<java.lang.Object> {    // (JavaCodeGenerator.meta.java:4356)
        private static final long serialVersionUID = 0;                         // (JavaCodeGenerator.meta.java:4357)
    }                                                                           // (JavaCodeGenerator.meta.java:4358)
    private static class __ObjectSet__notavacc_reserved extends java.util.LinkedHashSet<java.lang.Object> {    // (JavaCodeGenerator.meta.java:4364)
        private static final long serialVersionUID = 0;                         // (JavaCodeGenerator.meta.java:4365)
    }                                                                           // (JavaCodeGenerator.meta.java:4366)
    private static final class __StateVertex__notavacc_reserved extends __Link__notavacc_reserved<__SymbolVertex__notavacc_reserved> {    // (JavaCodeGenerator.meta.java:4371)
        public int stateNo;                                                     // (JavaCodeGenerator.meta.java:4372)
        public __Link__notavacc_reserved<Token> whiteTokenHolder;               // (JavaCodeGenerator.meta.java:4373)
        public __StateVertex__notavacc_reserved(int stateNo, int generation) {    // (JavaCodeGenerator.meta.java:4377)
            super(null, null);                                                  // (JavaCodeGenerator.meta.java:4378)
            this.stateNo = stateNo;                                             // (JavaCodeGenerator.meta.java:4379)
            assert generation == 0;                                             // (JavaCodeGenerator.meta.java:4380)
        }                                                                       // (JavaCodeGenerator.meta.java:4384)
        public __StateVertex__notavacc_reserved(__SymbolVertex__notavacc_reserved successor, int stateNo, int generation) {    // (JavaCodeGenerator.meta.java:4385)
            super(successor, null);                                             // (JavaCodeGenerator.meta.java:4386)
            this.stateNo = stateNo;                                             // (JavaCodeGenerator.meta.java:4387)
        }                                                                       // (JavaCodeGenerator.meta.java:4391)
        public void addSuccessor(__SymbolVertex__notavacc_reserved successor) {    // (JavaCodeGenerator.meta.java:4392)
            super.addLink(successor);                                           // (JavaCodeGenerator.meta.java:4393)
        }                                                                       // (JavaCodeGenerator.meta.java:4394)
        public __Link__notavacc_reserved<__SymbolVertex__notavacc_reserved> getSuccessors() {    // (JavaCodeGenerator.meta.java:4395)
            assert value != null;                                               // (JavaCodeGenerator.meta.java:4396)
            return this;                                                        // (JavaCodeGenerator.meta.java:4397)
        }                                                                       // (JavaCodeGenerator.meta.java:4398)
    }                                                                           // (JavaCodeGenerator.meta.java:4404)
    private static final class __SymbolVertex__notavacc_reserved extends __Link__notavacc_reserved<__StateVertex__notavacc_reserved> {    // (JavaCodeGenerator.meta.java:4406)
        public java.lang.Object symbol;     // Node, __LabeledNode__notavacc_reserved, __ConcreteSyntaxTree__notavacc_reserved, or __Absorber__notavacc_reserved.    // (JavaCodeGenerator.meta.java:4411)
        public __SymbolVertex__notavacc_reserved(__StateVertex__notavacc_reserved successor, java.lang.Object symbol) {    // (JavaCodeGenerator.meta.java:4412)
            super(successor, null);                                             // (JavaCodeGenerator.meta.java:4413)
            this.symbol = symbol;                                               // (JavaCodeGenerator.meta.java:4414)
        }                                                                       // (JavaCodeGenerator.meta.java:4415)
        public void addSuccessor(__StateVertex__notavacc_reserved successor) {    // (JavaCodeGenerator.meta.java:4416)
            super.addLink(successor);                                           // (JavaCodeGenerator.meta.java:4417)
        }                                                                       // (JavaCodeGenerator.meta.java:4418)
        public __Link__notavacc_reserved<__StateVertex__notavacc_reserved> getSuccessors() {    // (JavaCodeGenerator.meta.java:4419)
            assert value != null;                                               // (JavaCodeGenerator.meta.java:4420)
            return this;                                                        // (JavaCodeGenerator.meta.java:4421)
        }                                                                       // (JavaCodeGenerator.meta.java:4422)
    }                                                                           // (JavaCodeGenerator.meta.java:4451)
    private static final class __Absorber__notavacc_reserved extends __ObjectLink__notavacc_reserved {    // (JavaCodeGenerator.meta.java:4453)
        public final int symbolID;                                              // (JavaCodeGenerator.meta.java:4454)
        public __Absorber__notavacc_reserved(int symbolID, __ConcreteSyntaxTree__notavacc_reserved tree) {    // (JavaCodeGenerator.meta.java:4455)
            super(tree, null);                                                  // (JavaCodeGenerator.meta.java:4456)
            assert tree != null;                                                // (JavaCodeGenerator.meta.java:4457)
            this.symbolID = symbolID;                                           // (JavaCodeGenerator.meta.java:4458)
        }                                                                       // (JavaCodeGenerator.meta.java:4459)
        public void addAlternative(java.lang.Object tree) {                     // (JavaCodeGenerator.meta.java:4460)
            assert tree != null;                                                // (JavaCodeGenerator.meta.java:4461)
            super.addLink(tree);    // __ConcreteSyntaxTree__notavacc_reserved �� $LabaledNode    // (JavaCodeGenerator.meta.java:4462)
        }                                                                       // (JavaCodeGenerator.meta.java:4463)
        public __Link__notavacc_reserved<java.lang.Object> getAlternatives() {    // (JavaCodeGenerator.meta.java:4464)
            return this;                                                        // (JavaCodeGenerator.meta.java:4465)
        }                                                                       // (JavaCodeGenerator.meta.java:4466)
    }                                                                           // (JavaCodeGenerator.meta.java:4483)
    private static final class __ConcreteSyntaxTree__notavacc_reserved {        // (JavaCodeGenerator.meta.java:4485)
        public int reductionID;                                                 // (JavaCodeGenerator.meta.java:4489)
        public java.lang.Object[] children;                                     // (JavaCodeGenerator.meta.java:4490)
        // odd: same as __SymbolVertex__notavacc_reserved#symbol. even: __Link__notavacc_reserved of white tokens (maybe null).    // (JavaCodeGenerator.meta.java:4491)
        // or, null if this has an empty reduction.                             // (JavaCodeGenerator.meta.java:4492)
        public __ConcreteSyntaxTree__notavacc_reserved(__Context__notavacc_reserved context, int reductionID, java.lang.Object[] children) {    // (JavaCodeGenerator.meta.java:4493)
            this.reductionID = reductionID;                                     // (JavaCodeGenerator.meta.java:4497)
            this.children = children;                                           // (JavaCodeGenerator.meta.java:4498)
        }                                                                       // (JavaCodeGenerator.meta.java:4499)
    }                                                                           // (JavaCodeGenerator.meta.java:4511)
    private static final class __EmptyRecutionKey__notavacc_reserved {          // (JavaCodeGenerator.meta.java:4513)
        public int symbolID;                                                    // (JavaCodeGenerator.meta.java:4514)
        public int stateNo;                                                     // (JavaCodeGenerator.meta.java:4515)
        public __EmptyRecutionKey__notavacc_reserved(int symbolID, int stateNo) {    // (JavaCodeGenerator.meta.java:4516)
            this.symbolID = symbolID;                                           // (JavaCodeGenerator.meta.java:4517)
            this.stateNo = stateNo;                                             // (JavaCodeGenerator.meta.java:4518)
        }                                                                       // (JavaCodeGenerator.meta.java:4519)
        public int hashCode() {                                                 // (JavaCodeGenerator.meta.java:4520)
            return symbolID + stateNo;                                          // (JavaCodeGenerator.meta.java:4521)
        }                                                                       // (JavaCodeGenerator.meta.java:4522)
        public final boolean equals(java.lang.Object rhs) {                     // (JavaCodeGenerator.meta.java:4523)
            if (rhs instanceof __EmptyRecutionKey__notavacc_reserved)           // (JavaCodeGenerator.meta.java:4524)
                return equals((__EmptyRecutionKey__notavacc_reserved) rhs);     // (JavaCodeGenerator.meta.java:4525)
            return false;                                                       // (JavaCodeGenerator.meta.java:4526)
        }                                                                       // (JavaCodeGenerator.meta.java:4527)
        public final boolean equals(__EmptyRecutionKey__notavacc_reserved rhs) {    // (JavaCodeGenerator.meta.java:4528)
            return symbolID == rhs.symbolID && stateNo == rhs.stateNo;          // (JavaCodeGenerator.meta.java:4529)
        }                                                                       // (JavaCodeGenerator.meta.java:4530)
    }                                                                           // (JavaCodeGenerator.meta.java:4531)
    private static final class __AbsorbKey2__notavacc_reserved {                // (JavaCodeGenerator.meta.java:4533)
        public java.util.Set<java.lang.Object> states;                          // (JavaCodeGenerator.meta.java:4534)
        public int symbolID;                                                    // (JavaCodeGenerator.meta.java:4535)
        public __AbsorbKey2__notavacc_reserved(java.util.Set<java.lang.Object> states, int symbolID) {    // (JavaCodeGenerator.meta.java:4536)
            this.states = states;                                               // (JavaCodeGenerator.meta.java:4537)
            this.symbolID = symbolID;                                           // (JavaCodeGenerator.meta.java:4538)
        }                                                                       // (JavaCodeGenerator.meta.java:4539)
        public int hashCode() {                                                 // (JavaCodeGenerator.meta.java:4540)
            return states.hashCode() + symbolID;                                // (JavaCodeGenerator.meta.java:4541)
        }                                                                       // (JavaCodeGenerator.meta.java:4542)
        public final boolean equals(java.lang.Object rhs) {                     // (JavaCodeGenerator.meta.java:4543)
            if (rhs instanceof __AbsorbKey2__notavacc_reserved)                 // (JavaCodeGenerator.meta.java:4544)
                return equals((__AbsorbKey2__notavacc_reserved) rhs);           // (JavaCodeGenerator.meta.java:4545)
            return false;                                                       // (JavaCodeGenerator.meta.java:4546)
        }                                                                       // (JavaCodeGenerator.meta.java:4547)
        public final boolean equals(__AbsorbKey2__notavacc_reserved rhs) {      // (JavaCodeGenerator.meta.java:4548)
            return states.equals(rhs.states) && symbolID == rhs.symbolID;       // (JavaCodeGenerator.meta.java:4549)
        }                                                                       // (JavaCodeGenerator.meta.java:4550)
    }                                                                           // (JavaCodeGenerator.meta.java:4551)
                                                                                // (JavaCodeGenerator.meta.java:4552)
    private static class __LabeledNode__notavacc_reserved {                     // (JavaCodeGenerator.meta.java:4554)
        public static final int INHERIT_LABEL = 1;                              // (JavaCodeGenerator.meta.java:4556)
        public int labels;                                                      // (JavaCodeGenerator.meta.java:4560)
        public Node node;                                                       // (JavaCodeGenerator.meta.java:4561)
        public __LabeledNode__notavacc_reserved(Node node) {                    // (JavaCodeGenerator.meta.java:4562)
            this(INHERIT_LABEL, node);                                          // (JavaCodeGenerator.meta.java:4563)
        }                                                                       // (JavaCodeGenerator.meta.java:4564)
        public __LabeledNode__notavacc_reserved(int labels, Node node) {        // (JavaCodeGenerator.meta.java:4565)
            this.labels = labels;                                               // (JavaCodeGenerator.meta.java:4566)
            this.node = node;                                                   // (JavaCodeGenerator.meta.java:4567)
        }                                                                       // (JavaCodeGenerator.meta.java:4568)
        public __LabeledNode__notavacc_reserved(int labels, __LabeledNode__notavacc_reserved node) {    // (JavaCodeGenerator.meta.java:4569)
            this.labels = __mergeLabels__notavacc_reserved(labels, node.labels);    // (JavaCodeGenerator.meta.java:4570)
            this.node = node.node;                                              // (JavaCodeGenerator.meta.java:4571)
        }                                                                       // (JavaCodeGenerator.meta.java:4572)
        public java.lang.String toString() {                                    // (JavaCodeGenerator.meta.java:4573)
            return labels + ":" + node;                                         // (JavaCodeGenerator.meta.java:4574)
        }                                                                       // (JavaCodeGenerator.meta.java:4575)
                                                                                // (JavaCodeGenerator.meta.java:4576)
        public java.lang.Object compact() {                                     // (JavaCodeGenerator.meta.java:4577)
            if (labels == INHERIT_LABEL) {                                      // (JavaCodeGenerator.meta.java:4578)
                return node;                                                    // (JavaCodeGenerator.meta.java:4579)
            } else {                                                            // (JavaCodeGenerator.meta.java:4580)
                return this;                                                    // (JavaCodeGenerator.meta.java:4581)
            }                                                                   // (JavaCodeGenerator.meta.java:4582)
        }                                                                       // (JavaCodeGenerator.meta.java:4583)
                                                                                // (JavaCodeGenerator.meta.java:4584)
    }                                                                           // (JavaCodeGenerator.meta.java:4585)
    private static int __mergeLabels__notavacc_reserved(int a, int b) {         // (JavaCodeGenerator.meta.java:4587)
        if ((b & 1) != 0) {                                                     // (JavaCodeGenerator.meta.java:4589)
            b &= ~1;                                                            // (JavaCodeGenerator.meta.java:4590)
            b |= a;                                                             // (JavaCodeGenerator.meta.java:4591)
        }                                                                       // (JavaCodeGenerator.meta.java:4592)
        return b;                                                               // (JavaCodeGenerator.meta.java:4593)
    }                                                                           // (JavaCodeGenerator.meta.java:4601)
                                                                                // (JavaCodeGenerator.meta.java:4602)
    private static int $binarySearchLRTable(int[] table, int key) {             // (JavaCodeGenerator.meta.java:4604)
        // The 'table' is list of key and value, and additional Integer.MAX_VALUE.  Even indexes are keys and odd indexes are values.    // (JavaCodeGenerator.meta.java:4605)
        // The result is the minimum index of the key that is grater or equals to 'key'.    // (JavaCodeGenerator.meta.java:4606)
        int base = 0;                                                           // (JavaCodeGenerator.meta.java:4607)
        int width = (table.length + 1) >> 1;                                    // (JavaCodeGenerator.meta.java:4608)
        while (width > 0) {                                                     // (JavaCodeGenerator.meta.java:4609)
            // The result should be in base..(base+width*2)                     // (JavaCodeGenerator.meta.java:4610)
            int halfWidth = width >> 1;                                         // (JavaCodeGenerator.meta.java:4611)
            int index = base + (width & ~1);    // base + halfWidth * 2         // (JavaCodeGenerator.meta.java:4612)
            if (table[index] < key) {                                           // (JavaCodeGenerator.meta.java:4613)
                // The result should be in index+2..(base+width*2)              // (JavaCodeGenerator.meta.java:4614)
                base = index + 2;                                               // (JavaCodeGenerator.meta.java:4615)
                width = width - halfWidth - 1;                                  // (JavaCodeGenerator.meta.java:4616)
            } else {                                                            // (JavaCodeGenerator.meta.java:4617)
                // The result should be in base..index                          // (JavaCodeGenerator.meta.java:4618)
                width = halfWidth;                                              // (JavaCodeGenerator.meta.java:4619)
            }                                                                   // (JavaCodeGenerator.meta.java:4620)
        }                                                                       // (JavaCodeGenerator.meta.java:4621)
        return base;                                                            // (JavaCodeGenerator.meta.java:4622)
    }                                                                           // (JavaCodeGenerator.meta.java:4623)
                                                                                // (JavaCodeGenerator.meta.java:4624)
    private static final class __Context__notavacc_reserved {                   // (JavaCodeGenerator.meta.java:4626)
        public __Context__notavacc_reserved(BVH_Parser parser) {                // (JavaCodeGenerator.meta.java:4627)
            this.parser = parser;                                               // (JavaCodeGenerator.meta.java:4628)
        }                                                                       // (JavaCodeGenerator.meta.java:4629)
        public final BVH_Parser parser;                                         // (JavaCodeGenerator.meta.java:4630)
        public int generation;                                                  // (JavaCodeGenerator.meta.java:4631)
        public __Link__notavacc_reserved<Token> whiteTokenHolder;               // (JavaCodeGenerator.meta.java:4632)
        public int nextTokenID;                                                 // (JavaCodeGenerator.meta.java:4633)
        public Token nextToken;                                                 // (JavaCodeGenerator.meta.java:4634)
        public java.util.Map<java.lang.Integer, __StateVertex__notavacc_reserved> states = new java.util.LinkedHashMap<java.lang.Integer, __StateVertex__notavacc_reserved>();    // (JavaCodeGenerator.meta.java:4635)
        public java.util.Map<java.lang.Integer, __StateVertex__notavacc_reserved> newStates = new java.util.LinkedHashMap<java.lang.Integer, __StateVertex__notavacc_reserved>();    // (JavaCodeGenerator.meta.java:4636)
        public java.util.Map<java.lang.Object, __LabeledNode__notavacc_reserved> symbolFixMap = new java.util.LinkedHashMap<java.lang.Object, __LabeledNode__notavacc_reserved>();    // (JavaCodeGenerator.meta.java:4637)
        public final java.util.Set<__StateVertex__notavacc_reserved> unbrokenStates = new java.util.LinkedHashSet<__StateVertex__notavacc_reserved>();    // (JavaCodeGenerator.meta.java:4638)
        public final java.util.LinkedList<$Reducer> unbrokenReducers = new java.util.LinkedList<$Reducer>();    // (JavaCodeGenerator.meta.java:4639)
        public final java.util.Map<__EmptyRecutionKey__notavacc_reserved, __SymbolVertex__notavacc_reserved> emptyReductionMap = new java.util.LinkedHashMap<__EmptyRecutionKey__notavacc_reserved, __SymbolVertex__notavacc_reserved>();    // (JavaCodeGenerator.meta.java:4640)
        public final java.util.Map<__AbsorbKey2__notavacc_reserved, __Absorber__notavacc_reserved> absorbMap2 = new java.util.LinkedHashMap<__AbsorbKey2__notavacc_reserved, __Absorber__notavacc_reserved>();    // (JavaCodeGenerator.meta.java:4641)
        public final NodeInitializationParameters parameters = new NodeInitializationParameters();    // (JavaCodeGenerator.meta.java:4642)
        public final java.util.List<java.lang.Object> tmpList = new java.util.ArrayList<java.lang.Object>();    // (JavaCodeGenerator.meta.java:4643)
        public final java.util.Map<java.lang.Object, java.lang.Object> tmpMap = new java.util.LinkedHashMap<java.lang.Object, java.lang.Object>();    // (JavaCodeGenerator.meta.java:4644)
    }                                                                           // (JavaCodeGenerator.meta.java:4645)
                                                                                // (JavaCodeGenerator.meta.java:4646)
    private static final class $Reducer {                                       // (JavaCodeGenerator.meta.java:4648)
        final __SymbolVertex__notavacc_reserved successor;                      // (JavaCodeGenerator.meta.java:4649)
        final __StateVertex__notavacc_reserved state;                           // (JavaCodeGenerator.meta.java:4650)
        final int reductionID;                                                  // (JavaCodeGenerator.meta.java:4651)
        public $Reducer(__SymbolVertex__notavacc_reserved successor, __StateVertex__notavacc_reserved state) {    // (JavaCodeGenerator.meta.java:4652)
            this(successor, state, -1);                                         // (JavaCodeGenerator.meta.java:4653)
        }                                                                       // (JavaCodeGenerator.meta.java:4654)
        public $Reducer(__SymbolVertex__notavacc_reserved successor, __StateVertex__notavacc_reserved state, int reductionID) {    // (JavaCodeGenerator.meta.java:4655)
            this.successor = successor;                                         // (JavaCodeGenerator.meta.java:4656)
            this.state = state;                                                 // (JavaCodeGenerator.meta.java:4657)
            this.reductionID = reductionID;                                     // (JavaCodeGenerator.meta.java:4658)
        }                                                                       // (JavaCodeGenerator.meta.java:4659)
    }                                                                           // (JavaCodeGenerator.meta.java:4660)
                                                                                // (JavaCodeGenerator.meta.java:4661)
    private Node __parse__notavacc_reserved(LexicalAnalyzer analyzer, int initialStateNo) throws ParseException {    // (JavaCodeGenerator.meta.java:4663)
        final int[][] reductionTable = BVH_Parser.__reductionTable__notavacc_reserved;    // (JavaCodeGenerator.meta.java:4664)
                                                                                // (JavaCodeGenerator.meta.java:4665)
        __Context__notavacc_reserved context = new __Context__notavacc_reserved(this);    // (JavaCodeGenerator.meta.java:4666)
        __StateVertex__notavacc_reserved firstStateVertex = new __StateVertex__notavacc_reserved(initialStateNo, 0);    // (JavaCodeGenerator.meta.java:4667)
        {                                                                       // (JavaCodeGenerator.meta.java:4668)
            context.whiteTokenHolder = new __Link__notavacc_reserved<Token>(null, null);    // (JavaCodeGenerator.meta.java:4669)
            firstStateVertex.whiteTokenHolder = context.whiteTokenHolder;       // (JavaCodeGenerator.meta.java:4670)
            context.states.put(new java.lang.Integer(firstStateVertex.stateNo), firstStateVertex);    // (JavaCodeGenerator.meta.java:4671)
                                                                                // (JavaCodeGenerator.meta.java:4672)
            java.util.Map<java.lang.Integer, __StateVertex__notavacc_reserved> statesTmp = new java.util.LinkedHashMap<java.lang.Integer, __StateVertex__notavacc_reserved>();    // (JavaCodeGenerator.meta.java:4673)
                                                                                // (JavaCodeGenerator.meta.java:4674)
            tokenLoop:                                                          // (JavaCodeGenerator.meta.java:4675)
            for (;;) {                                                          // (JavaCodeGenerator.meta.java:4676)
                {                                                               // (JavaCodeGenerator.meta.java:4677)
                    assert context.whiteTokenHolder.next == null;               // (JavaCodeGenerator.meta.java:4678)
                                                                                // (JavaCodeGenerator.meta.java:4679)
                    __Link__notavacc_reserved<Token> whiteTokensAppendPosition = context.whiteTokenHolder;    // (JavaCodeGenerator.meta.java:4681)
                    for (;;) {                                                  // (JavaCodeGenerator.meta.java:4682)
                        context.nextToken = analyzer.next();                    // (JavaCodeGenerator.meta.java:4683)
                        context.nextTokenID = context.nextToken.getSymbolID();    // (JavaCodeGenerator.meta.java:4684)
                        if (context.nextToken.isWhite()) {                      // (JavaCodeGenerator.meta.java:4685)
                            whiteTokensAppendPosition.next = new __Link__notavacc_reserved<Token>(context.nextToken, null);    // (JavaCodeGenerator.meta.java:4686)
                            whiteTokensAppendPosition = whiteTokensAppendPosition.next;    // (JavaCodeGenerator.meta.java:4687)
                        } else {                                                // (JavaCodeGenerator.meta.java:4688)
                            break;                                              // (JavaCodeGenerator.meta.java:4689)
                        }                                                       // (JavaCodeGenerator.meta.java:4690)
                    }                                                           // (JavaCodeGenerator.meta.java:4691)
                }                                                               // (JavaCodeGenerator.meta.java:4704)
                                                                                // (JavaCodeGenerator.meta.java:4705)
                                                                                // (JavaCodeGenerator.meta.java:4712)
                assert context.unbrokenReducers.isEmpty();                      // (JavaCodeGenerator.meta.java:4713)
                assert context.unbrokenStates.isEmpty();                        // (JavaCodeGenerator.meta.java:4714)
                context.unbrokenStates.addAll(context.states.values());         // (JavaCodeGenerator.meta.java:4715)
                reduceLoop:                                                     // (JavaCodeGenerator.meta.java:4716)
                while (!context.unbrokenReducers.isEmpty() || !context.unbrokenStates.isEmpty()) {    // (JavaCodeGenerator.meta.java:4717)
                    if (!context.unbrokenReducers.isEmpty()) {                  // (JavaCodeGenerator.meta.java:4718)
                        $Reducer reducer = ($Reducer) context.unbrokenReducers.removeFirst();    // (JavaCodeGenerator.meta.java:4719)
                        __reduce__notavacc_reserved(context, reducer);          // (JavaCodeGenerator.meta.java:4720)
                    } else {                                                    // (JavaCodeGenerator.meta.java:4721)
                        java.util.Iterator it = context.unbrokenStates.iterator();    // (JavaCodeGenerator.meta.java:4722)
                        __StateVertex__notavacc_reserved state = (__StateVertex__notavacc_reserved) it.next();    // (JavaCodeGenerator.meta.java:4723)
                        it.remove();                                            // (JavaCodeGenerator.meta.java:4724)
                        __reduce__notavacc_reserved(context, state);            // (JavaCodeGenerator.meta.java:4725)
                    }                                                           // (JavaCodeGenerator.meta.java:4726)
                }                                                               // (JavaCodeGenerator.meta.java:4727)
                context.emptyReductionMap.clear();                              // (JavaCodeGenerator.meta.java:4728)
                context.absorbMap2.clear();                                     // (JavaCodeGenerator.meta.java:4729)
                                                                                // (JavaCodeGenerator.meta.java:4730)
                                                                                // (JavaCodeGenerator.meta.java:4731)
                context.generation++;                                           // (JavaCodeGenerator.meta.java:4732)
                java.util.Map<java.lang.Integer, __StateVertex__notavacc_reserved> oldStates = context.states;    // (JavaCodeGenerator.meta.java:4733)
                java.util.Map<java.lang.Integer, __StateVertex__notavacc_reserved> oldStatesTmp = statesTmp;    // (JavaCodeGenerator.meta.java:4734)
                context.states = oldStatesTmp;                                  // (JavaCodeGenerator.meta.java:4735)
                statesTmp = oldStates;                                          // (JavaCodeGenerator.meta.java:4736)
                __Link__notavacc_reserved<Token> oldWhiteTokenHolder = context.whiteTokenHolder;    // (JavaCodeGenerator.meta.java:4737)
                context.whiteTokenHolder = new __Link__notavacc_reserved<Token>(null, null);    // (JavaCodeGenerator.meta.java:4738)
                                                                                // (JavaCodeGenerator.meta.java:4739)
                                                                                // (JavaCodeGenerator.meta.java:4740)
                java.util.Iterator<__StateVertex__notavacc_reserved> it25 = oldStates.values().iterator();    // (JavaCodeGenerator.meta.java:4741)
                shiftLoop:                                                      // (JavaCodeGenerator.meta.java:4742)
                while (it25.hasNext()) {                                        // (JavaCodeGenerator.meta.java:4743)
                    __StateVertex__notavacc_reserved state = (__StateVertex__notavacc_reserved) it25.next();    // (JavaCodeGenerator.meta.java:4744)
                    __shift__notavacc_reserved(context, state, (context.generation > 1));    // (JavaCodeGenerator.meta.java:4745)
                }                                                               // (JavaCodeGenerator.meta.java:4746)
                context.emptyReductionMap.clear();                              // (JavaCodeGenerator.meta.java:4747)
                context.symbolFixMap.clear();                                   // (JavaCodeGenerator.meta.java:4748)
                                                                                // (JavaCodeGenerator.meta.java:4749)
                if (context.states.isEmpty()) {                                 // (JavaCodeGenerator.meta.java:4750)
                    context.states = oldStates;                                 // (JavaCodeGenerator.meta.java:4751)
                    statesTmp = oldStatesTmp;                                   // (JavaCodeGenerator.meta.java:4752)
                    context.whiteTokenHolder = oldWhiteTokenHolder;             // (JavaCodeGenerator.meta.java:4753)
                                                                                // (JavaCodeGenerator.meta.java:4754)
                    __error__notavacc_reserved(context, analyzer);              // (JavaCodeGenerator.meta.java:4755)
                    assert false;                                               // (JavaCodeGenerator.meta.java:4756)
                    continue tokenLoop;                                         // (JavaCodeGenerator.meta.java:4757)
                }                                                               // (JavaCodeGenerator.meta.java:4758)
                                                                                // (JavaCodeGenerator.meta.java:4759)
                if (context.nextTokenID == EOF_TOKEN) {                         // (JavaCodeGenerator.meta.java:4760)
                    break tokenLoop;                                            // (JavaCodeGenerator.meta.java:4761)
                }                                                               // (JavaCodeGenerator.meta.java:4762)
                                                                                // (JavaCodeGenerator.meta.java:4763)
                oldStates.clear();                                              // (JavaCodeGenerator.meta.java:4764)
            }                                                                   // (JavaCodeGenerator.meta.java:4765)
        }                                                                       // (JavaCodeGenerator.meta.java:4766)
                                                                                // (JavaCodeGenerator.meta.java:4767)
        assert context.states.size() == 1;                                      // (JavaCodeGenerator.meta.java:4768)
        __StateVertex__notavacc_reserved sinkVertex = (__StateVertex__notavacc_reserved) context.states.values().iterator().next();    // (JavaCodeGenerator.meta.java:4769)
                                                                                // (JavaCodeGenerator.meta.java:4770)
        assert sinkVertex.getSuccessors().next == null;                         // (JavaCodeGenerator.meta.java:4771)
        __SymbolVertex__notavacc_reserved eofVertex = (__SymbolVertex__notavacc_reserved) sinkVertex.getSuccessors().value;    // (JavaCodeGenerator.meta.java:4772)
                                                                                // (JavaCodeGenerator.meta.java:4773)
        assert eofVertex.getSuccessors().next == null;                          // (JavaCodeGenerator.meta.java:4774)
        __StateVertex__notavacc_reserved lastStateVertex = (__StateVertex__notavacc_reserved) eofVertex.getSuccessors().value;    // (JavaCodeGenerator.meta.java:4775)
                                                                                // (JavaCodeGenerator.meta.java:4776)
        __SymbolVertex__notavacc_reserved rootSymbolVertex = (__SymbolVertex__notavacc_reserved) lastStateVertex.getSuccessors().value;    // (JavaCodeGenerator.meta.java:4777)
                                                                                // (JavaCodeGenerator.meta.java:4778)
        assert rootSymbolVertex.getSuccessors().next == null;                   // (JavaCodeGenerator.meta.java:4779)
        assert firstStateVertex == (__StateVertex__notavacc_reserved) rootSymbolVertex.getSuccessors().value;    // (JavaCodeGenerator.meta.java:4780)
                                                                                // (JavaCodeGenerator.meta.java:4781)
        Node root = __fixNode__notavacc_reserved(context, rootSymbolVertex.symbol, false).node;    // (JavaCodeGenerator.meta.java:4782)
        if (root instanceof AmbiguityAbsorber) {                                // (JavaCodeGenerator.meta.java:4783)
            AmbiguityAbsorber absorber = (AmbiguityAbsorber) root;              // (JavaCodeGenerator.meta.java:4784)
            java.util.Iterator it20 = absorber.getChildNodes().iterator();      // (JavaCodeGenerator.meta.java:4785)
            while (it20.hasNext()) {                                            // (JavaCodeGenerator.meta.java:4786)
                Node child = (Node) it20.next();                                // (JavaCodeGenerator.meta.java:4787)
                if (firstStateVertex.whiteTokenHolder.next != null) {           // (JavaCodeGenerator.meta.java:4788)
                    Token[] tokens = (Token[]) __Link__notavacc_reserved.toArray(context, firstStateVertex.whiteTokenHolder.next, new Token[0]);    // (JavaCodeGenerator.meta.java:4789)
                    child.getChildNodes().addAll(0, java.util.Arrays.asList(tokens));    // (JavaCodeGenerator.meta.java:4790)
                }                                                               // (JavaCodeGenerator.meta.java:4791)
                if (lastStateVertex.whiteTokenHolder.next != null) {            // (JavaCodeGenerator.meta.java:4792)
                    Token[] tokens = (Token[]) __Link__notavacc_reserved.toArray(context, lastStateVertex.whiteTokenHolder.next, new Token[0]);    // (JavaCodeGenerator.meta.java:4793)
                    child.getChildNodes().addAll(java.util.Arrays.asList(tokens));    // (JavaCodeGenerator.meta.java:4794)
                }                                                               // (JavaCodeGenerator.meta.java:4795)
            }                                                                   // (JavaCodeGenerator.meta.java:4796)
        } else {                                                                // (JavaCodeGenerator.meta.java:4797)
            if (firstStateVertex.whiteTokenHolder.next != null) {               // (JavaCodeGenerator.meta.java:4798)
                Token[] tokens = (Token[]) __Link__notavacc_reserved.toArray(context, firstStateVertex.whiteTokenHolder.next, new Token[0]);    // (JavaCodeGenerator.meta.java:4799)
                root.getChildNodes().addAll(0, java.util.Arrays.asList(tokens));    // (JavaCodeGenerator.meta.java:4800)
            }                                                                   // (JavaCodeGenerator.meta.java:4801)
            if (lastStateVertex.whiteTokenHolder.next != null) {                // (JavaCodeGenerator.meta.java:4802)
                Token[] tokens = (Token[]) __Link__notavacc_reserved.toArray(context, lastStateVertex.whiteTokenHolder.next, new Token[0]);    // (JavaCodeGenerator.meta.java:4803)
                root.getChildNodes().addAll(java.util.Arrays.asList(tokens));    // (JavaCodeGenerator.meta.java:4804)
            }                                                                   // (JavaCodeGenerator.meta.java:4805)
        }                                                                       // (JavaCodeGenerator.meta.java:4806)
                                                                                // (JavaCodeGenerator.meta.java:4807)
        return root;                                                            // (JavaCodeGenerator.meta.java:4808)
    }                                                                           // (JavaCodeGenerator.meta.java:4809)
    private void __reduce__notavacc_reserved(__Context__notavacc_reserved context, __StateVertex__notavacc_reserved state) {    // (JavaCodeGenerator.meta.java:4811)
        int[] tokenIDToReductionID = BVH_Parser.__lrTable__notavacc_reserved[state.stateNo * 3 + 2];    // (JavaCodeGenerator.meta.java:4812)
        if (context.nextTokenID != __ERROR_REPORT_MODE__notavacc_reserved) {    // (JavaCodeGenerator.meta.java:4813)
            int index = $binarySearchLRTable(tokenIDToReductionID, context.nextTokenID);    // (JavaCodeGenerator.meta.java:4814)
            for (; tokenIDToReductionID[index] == context.nextTokenID; index += 2) {    // (JavaCodeGenerator.meta.java:4815)
                final int reductionID = tokenIDToReductionID[index + 1];        // (JavaCodeGenerator.meta.java:4816)
                int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[reductionID];    // (JavaCodeGenerator.meta.java:4817)
                int reductionSize = (reduction.length - 1) / 1;                 // (JavaCodeGenerator.meta.java:4818)
                if (reductionSize == 0) {                                       // (JavaCodeGenerator.meta.java:4819)
                    __shift__notavacc_reserved(context, state, reductionID);    // (JavaCodeGenerator.meta.java:4820)
                } else {                                                        // (JavaCodeGenerator.meta.java:4821)
                    __Link__notavacc_reserved<__SymbolVertex__notavacc_reserved> it1 = state.getSuccessors();    // (JavaCodeGenerator.meta.java:4822)
                    do {                                                        // (JavaCodeGenerator.meta.java:4823)
                        __SymbolVertex__notavacc_reserved successor = (__SymbolVertex__notavacc_reserved) it1.value;    // (JavaCodeGenerator.meta.java:4824)
                        context.unbrokenReducers.add(new $Reducer(successor, state, reductionID));    // (JavaCodeGenerator.meta.java:4825)
                    } while ((it1 = it1.next) != null);                         // (JavaCodeGenerator.meta.java:4826)
                }                                                               // (JavaCodeGenerator.meta.java:4827)
            }                                                                   // (JavaCodeGenerator.meta.java:4828)
        } else {                                                                // (JavaCodeGenerator.meta.java:4829)
            __Link__notavacc_reserved<__SymbolVertex__notavacc_reserved> it1 = state.getSuccessors();    // (JavaCodeGenerator.meta.java:4830)
            do {                                                                // (JavaCodeGenerator.meta.java:4831)
                __SymbolVertex__notavacc_reserved successor = (__SymbolVertex__notavacc_reserved) it1.value;    // (JavaCodeGenerator.meta.java:4832)
                context.unbrokenReducers.add(new $Reducer(successor, state, -1));    // (JavaCodeGenerator.meta.java:4833)
            } while ((it1 = it1.next) != null);                                 // (JavaCodeGenerator.meta.java:4834)
        }                                                                       // (JavaCodeGenerator.meta.java:4835)
    }                                                                           // (JavaCodeGenerator.meta.java:4836)
    private void __reduce__notavacc_reserved(__Context__notavacc_reserved context, $Reducer reducer) {    // (JavaCodeGenerator.meta.java:4837)
        if (reducer.reductionID < 0) {                                          // (JavaCodeGenerator.meta.java:4838)
            __reduce__notavacc_reserved(context, reducer.successor, reducer.state);    // (JavaCodeGenerator.meta.java:4839)
        } else {                                                                // (JavaCodeGenerator.meta.java:4840)
            __reduce__notavacc_reserved(context, reducer.successor, reducer.state, reducer.reductionID);    // (JavaCodeGenerator.meta.java:4841)
        }                                                                       // (JavaCodeGenerator.meta.java:4842)
    }                                                                           // (JavaCodeGenerator.meta.java:4843)
    private void __reduce__notavacc_reserved(__Context__notavacc_reserved context, __SymbolVertex__notavacc_reserved successorRestriction, __StateVertex__notavacc_reserved state) {    // (JavaCodeGenerator.meta.java:4844)
        int[] tokenIDToReductionID = BVH_Parser.__lrTable__notavacc_reserved[state.stateNo * 3 + 2];    // (JavaCodeGenerator.meta.java:4845)
        if (context.nextTokenID != __ERROR_REPORT_MODE__notavacc_reserved) {    // (JavaCodeGenerator.meta.java:4846)
            int index = $binarySearchLRTable(tokenIDToReductionID, context.nextTokenID);    // (JavaCodeGenerator.meta.java:4847)
            for (; tokenIDToReductionID[index] == context.nextTokenID; index += 2) {    // (JavaCodeGenerator.meta.java:4848)
                final int reductionID = tokenIDToReductionID[index + 1];        // (JavaCodeGenerator.meta.java:4849)
                __reduce__notavacc_reserved(context, successorRestriction, state, reductionID);    // (JavaCodeGenerator.meta.java:4850)
            }                                                                   // (JavaCodeGenerator.meta.java:4851)
        } else {                                                                // (JavaCodeGenerator.meta.java:4852)
            java.util.Set<java.lang.Integer> reductionIDs = new java.util.TreeSet<java.lang.Integer>();    // (JavaCodeGenerator.meta.java:4853)
            int index = 0;                                                      // (JavaCodeGenerator.meta.java:4854)
            for (; tokenIDToReductionID[index] != __TABLE_SENTINEL__notavacc_reserved; index += 2) {    // (JavaCodeGenerator.meta.java:4855)
                final int reductionID = tokenIDToReductionID[index + 1];        // (JavaCodeGenerator.meta.java:4856)
                reductionIDs.add(new java.lang.Integer(reductionID));           // (JavaCodeGenerator.meta.java:4857)
            }                                                                   // (JavaCodeGenerator.meta.java:4858)
            java.util.Iterator it31 = reductionIDs.iterator();                  // (JavaCodeGenerator.meta.java:4859)
            while (it31.hasNext()) {                                            // (JavaCodeGenerator.meta.java:4860)
                java.lang.Integer reductionID = (java.lang.Integer) it31.next();    // (JavaCodeGenerator.meta.java:4861)
                __reduce__notavacc_reserved(context, successorRestriction, state, reductionID.intValue());    // (JavaCodeGenerator.meta.java:4862)
            }                                                                   // (JavaCodeGenerator.meta.java:4863)
        }                                                                       // (JavaCodeGenerator.meta.java:4864)
    }                                                                           // (JavaCodeGenerator.meta.java:4865)
    private void __reduce__notavacc_reserved(__Context__notavacc_reserved context, __SymbolVertex__notavacc_reserved successorRestriction, __StateVertex__notavacc_reserved state, int reductionID) {    // (JavaCodeGenerator.meta.java:4866)
        int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[reductionID];    // (JavaCodeGenerator.meta.java:4867)
        int reductionSize = (reduction.length - 1) / 1;                         // (JavaCodeGenerator.meta.java:4868)
        if (reductionSize == 0)                                                 // (JavaCodeGenerator.meta.java:4869)
            return;                                                             // (JavaCodeGenerator.meta.java:4870)
                                                                                // (JavaCodeGenerator.meta.java:4871)
        __popOdd__notavacc_reserved(context, reductionID, successorRestriction);    // (JavaCodeGenerator.meta.java:4872)
    }                                                                           // (JavaCodeGenerator.meta.java:4873)
    private void __popOdd__notavacc_reserved(__Context__notavacc_reserved context, int reductionID, __SymbolVertex__notavacc_reserved symbolVertex) {    // (JavaCodeGenerator.meta.java:4875)
        int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[reductionID];    // (JavaCodeGenerator.meta.java:4876)
        int reductionSize = (reduction.length - 1) / 1;                         // (JavaCodeGenerator.meta.java:4877)
        assert reductionSize > 0;                                               // (JavaCodeGenerator.meta.java:4878)
        __popOdd__notavacc_reserved(context, reductionID, reductionSize * 2 - 1, symbolVertex, null);    // (JavaCodeGenerator.meta.java:4879)
    }                                                                           // (JavaCodeGenerator.meta.java:4880)
    private void __popOdd__notavacc_reserved(__Context__notavacc_reserved context, int reductionID, int countOfSuccessorsToReduce, __SymbolVertex__notavacc_reserved symbolVertex, __Link__notavacc_reserved<java.lang.Object> children) {    // (JavaCodeGenerator.meta.java:4881)
        assert (countOfSuccessorsToReduce % 2) == 1;                            // (JavaCodeGenerator.meta.java:4882)
        children = new __Link__notavacc_reserved<java.lang.Object>(symbolVertex.symbol, children);    // (JavaCodeGenerator.meta.java:4883)
        if (countOfSuccessorsToReduce > 1) {                                    // (JavaCodeGenerator.meta.java:4884)
            __Link__notavacc_reserved<__StateVertex__notavacc_reserved> it2 = symbolVertex.getSuccessors();    // (JavaCodeGenerator.meta.java:4885)
            do {                                                                // (JavaCodeGenerator.meta.java:4886)
                __StateVertex__notavacc_reserved state = (__StateVertex__notavacc_reserved) it2.value;    // (JavaCodeGenerator.meta.java:4887)
                __popEven__notavacc_reserved(context, reductionID, countOfSuccessorsToReduce - 1, state, children);    // (JavaCodeGenerator.meta.java:4888)
            } while ((it2 = it2.next) != null);                                 // (JavaCodeGenerator.meta.java:4889)
        } else {                                                                // (JavaCodeGenerator.meta.java:4890)
            __Link__notavacc_reserved<__StateVertex__notavacc_reserved> successors = symbolVertex.getSuccessors();    // (JavaCodeGenerator.meta.java:4891)
            __StateVertex__notavacc_reserved turningPoint = (__StateVertex__notavacc_reserved) successors.value;    // (JavaCodeGenerator.meta.java:4892)
            children = new __Link__notavacc_reserved<java.lang.Object>(turningPoint.whiteTokenHolder.next, children);    // (JavaCodeGenerator.meta.java:4893)
            __push__notavacc_reserved(context, successors, reductionID, children);    // (JavaCodeGenerator.meta.java:4894)
        }                                                                       // (JavaCodeGenerator.meta.java:4895)
    }                                                                           // (JavaCodeGenerator.meta.java:4896)
    private void __popEven__notavacc_reserved(__Context__notavacc_reserved context, int reductionID, int countOfSuccessorsToReduce, __StateVertex__notavacc_reserved state, __Link__notavacc_reserved<java.lang.Object> children) {    // (JavaCodeGenerator.meta.java:4898)
        assert (countOfSuccessorsToReduce % 2) == 0;                            // (JavaCodeGenerator.meta.java:4899)
        children = new __Link__notavacc_reserved<java.lang.Object>(state.whiteTokenHolder.next, children);    // (JavaCodeGenerator.meta.java:4900)
                                                                                // (JavaCodeGenerator.meta.java:4901)
        __Link__notavacc_reserved<__SymbolVertex__notavacc_reserved> it2 = state.getSuccessors();    // (JavaCodeGenerator.meta.java:4902)
        do {                                                                    // (JavaCodeGenerator.meta.java:4903)
            __SymbolVertex__notavacc_reserved symbolVertex = (__SymbolVertex__notavacc_reserved) it2.value;    // (JavaCodeGenerator.meta.java:4904)
            __popOdd__notavacc_reserved(context, reductionID, countOfSuccessorsToReduce - 1, symbolVertex, children);    // (JavaCodeGenerator.meta.java:4905)
        } while ((it2 = it2.next) != null);                                     // (JavaCodeGenerator.meta.java:4906)
    }                                                                           // (JavaCodeGenerator.meta.java:4907)
    private void __push__notavacc_reserved(__Context__notavacc_reserved context, __Link__notavacc_reserved<__StateVertex__notavacc_reserved> successors, int reductionID, __Link__notavacc_reserved<java.lang.Object> children) {    // (JavaCodeGenerator.meta.java:4909)
        __ConcreteSyntaxTree__notavacc_reserved tree = new __ConcreteSyntaxTree__notavacc_reserved(context, reductionID, __Link__notavacc_reserved.toArray(context, children));    // (JavaCodeGenerator.meta.java:4910)
        __push__notavacc_reserved(context, successors, tree);                   // (JavaCodeGenerator.meta.java:4911)
    }                                                                           // (JavaCodeGenerator.meta.java:4912)
    private void __push__notavacc_reserved(__Context__notavacc_reserved context, __Link__notavacc_reserved<__StateVertex__notavacc_reserved> successors, __ConcreteSyntaxTree__notavacc_reserved tree) {    // (JavaCodeGenerator.meta.java:4913)
        final int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[tree.reductionID];    // (JavaCodeGenerator.meta.java:4914)
        final int pushSymbolID = reduction[0];                                  // (JavaCodeGenerator.meta.java:4915)
                                                                                // (JavaCodeGenerator.meta.java:4916)
        __Link__notavacc_reserved<__StateVertex__notavacc_reserved> it2 = successors;    // (JavaCodeGenerator.meta.java:4917)
        do {                                                                    // (JavaCodeGenerator.meta.java:4918)
            __StateVertex__notavacc_reserved turningPoint = (__StateVertex__notavacc_reserved) it2.value;    // (JavaCodeGenerator.meta.java:4919)
            final int[] symbolIDToNextState = BVH_Parser.__lrTable__notavacc_reserved[turningPoint.stateNo * 3 + 1];    // (JavaCodeGenerator.meta.java:4920)
            int index = $binarySearchLRTable(symbolIDToNextState, pushSymbolID);    // (JavaCodeGenerator.meta.java:4921)
            if (symbolIDToNextState[index] == pushSymbolID) {                   // (JavaCodeGenerator.meta.java:4923)
                int nextStateNo = symbolIDToNextState[index + 1];               // (JavaCodeGenerator.meta.java:4924)
                java.lang.Integer key = new java.lang.Integer(nextStateNo);     // (JavaCodeGenerator.meta.java:4925)
                __ObjectSet__notavacc_reserved set = (__ObjectSet__notavacc_reserved) context.tmpMap.get(key);    // (JavaCodeGenerator.meta.java:4926)
                if (set == null) {                                              // (JavaCodeGenerator.meta.java:4927)
                    set = new __ObjectSet__notavacc_reserved();                 // (JavaCodeGenerator.meta.java:4928)
                    context.tmpMap.put(key, set);                               // (JavaCodeGenerator.meta.java:4929)
                }                                                               // (JavaCodeGenerator.meta.java:4930)
                set.add(turningPoint);                                          // (JavaCodeGenerator.meta.java:4931)
            }                                                                   // (JavaCodeGenerator.meta.java:4932)
        } while ((it2 = it2.next) != null);                                     // (JavaCodeGenerator.meta.java:4933)
                                                                                // (JavaCodeGenerator.meta.java:4934)
        java.util.Iterator it26 = context.tmpMap.entrySet().iterator();         // (JavaCodeGenerator.meta.java:4935)
        while (it26.hasNext()) {                                                // (JavaCodeGenerator.meta.java:4936)
            java.util.Map.Entry entry = (java.util.Map.Entry) it26.next();      // (JavaCodeGenerator.meta.java:4937)
            java.lang.Integer nextStateNo = (java.lang.Integer) entry.getKey();    // (JavaCodeGenerator.meta.java:4938)
            __ObjectSet__notavacc_reserved turningPoints = (__ObjectSet__notavacc_reserved) entry.getValue();    // (JavaCodeGenerator.meta.java:4939)
                                                                                // (JavaCodeGenerator.meta.java:4940)
            __push__notavacc_reserved(context, turningPoints, tree, nextStateNo);    // (JavaCodeGenerator.meta.java:4941)
        }                                                                       // (JavaCodeGenerator.meta.java:4942)
        context.tmpMap.clear();                                                 // (JavaCodeGenerator.meta.java:4943)
    }                                                                           // (JavaCodeGenerator.meta.java:4944)
    private void __push__notavacc_reserved(__Context__notavacc_reserved context, __ObjectSet__notavacc_reserved turningPoints, __ConcreteSyntaxTree__notavacc_reserved tree, java.lang.Integer nextStateNo) {    // (JavaCodeGenerator.meta.java:4945)
                                                                                // (JavaCodeGenerator.meta.java:4949)
        final int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[tree.reductionID];    // (JavaCodeGenerator.meta.java:4950)
        final int pushSymbolID = reduction[0];                                  // (JavaCodeGenerator.meta.java:4951)
        final boolean absorberSymbol = (pushSymbolID < 47);                     // (JavaCodeGenerator.meta.java:4952)
                                                                                // (JavaCodeGenerator.meta.java:4953)
        java.lang.Object symbol;                                                // (JavaCodeGenerator.meta.java:4954)
        if (!absorberSymbol) {                                                  // (JavaCodeGenerator.meta.java:4955)
            symbol = tree;                                                      // (JavaCodeGenerator.meta.java:4956)
        } else {                                                                // (JavaCodeGenerator.meta.java:4957)
            __AbsorbKey2__notavacc_reserved key = new __AbsorbKey2__notavacc_reserved(turningPoints, pushSymbolID);    // (JavaCodeGenerator.meta.java:4958)
            __Absorber__notavacc_reserved absorber = (__Absorber__notavacc_reserved) context.absorbMap2.get(key);    // (JavaCodeGenerator.meta.java:4959)
            if (absorber != null) {                                             // (JavaCodeGenerator.meta.java:4960)
                absorber.addAlternative(tree);                                  // (JavaCodeGenerator.meta.java:4961)
                return;                                                         // (JavaCodeGenerator.meta.java:4962)
            } else {                                                            // (JavaCodeGenerator.meta.java:4963)
                absorber = new __Absorber__notavacc_reserved(pushSymbolID, tree);    // (JavaCodeGenerator.meta.java:4964)
                context.absorbMap2.put(key, absorber);                          // (JavaCodeGenerator.meta.java:4965)
                symbol = absorber;                                              // (JavaCodeGenerator.meta.java:4966)
            }                                                                   // (JavaCodeGenerator.meta.java:4967)
        }                                                                       // (JavaCodeGenerator.meta.java:4968)
                                                                                // (JavaCodeGenerator.meta.java:4969)
        java.util.Iterator it = turningPoints.iterator();                       // (JavaCodeGenerator.meta.java:4970)
        __SymbolVertex__notavacc_reserved symbolVertex = new __SymbolVertex__notavacc_reserved((__StateVertex__notavacc_reserved) it.next(), symbol);    // (JavaCodeGenerator.meta.java:4971)
        while (it.hasNext()) {                                                  // (JavaCodeGenerator.meta.java:4972)
            __StateVertex__notavacc_reserved turningPoint = (__StateVertex__notavacc_reserved) it.next();    // (JavaCodeGenerator.meta.java:4973)
            symbolVertex.addSuccessor(turningPoint);                            // (JavaCodeGenerator.meta.java:4974)
        }                                                                       // (JavaCodeGenerator.meta.java:4975)
        __push__notavacc_reserved(context, symbolVertex, nextStateNo, true);    // (JavaCodeGenerator.meta.java:4976)
    }                                                                           // (JavaCodeGenerator.meta.java:4977)
    private void __push__notavacc_reserved(__Context__notavacc_reserved context, __SymbolVertex__notavacc_reserved symbolVertex, java.lang.Integer nextStateNo, boolean markUnbroken) {    // (JavaCodeGenerator.meta.java:4978)
        __StateVertex__notavacc_reserved stateVertex = (__StateVertex__notavacc_reserved) context.states.get(nextStateNo);    // (JavaCodeGenerator.meta.java:4979)
        if (stateVertex == null) {                                              // (JavaCodeGenerator.meta.java:4980)
            stateVertex = new __StateVertex__notavacc_reserved(symbolVertex, nextStateNo.intValue(), context.generation);    // (JavaCodeGenerator.meta.java:4981)
            stateVertex.whiteTokenHolder = context.whiteTokenHolder;            // (JavaCodeGenerator.meta.java:4982)
            context.states.put(nextStateNo, stateVertex);                       // (JavaCodeGenerator.meta.java:4983)
            if (markUnbroken)                                                   // (JavaCodeGenerator.meta.java:4984)
                context.unbrokenStates.add(stateVertex);                        // (JavaCodeGenerator.meta.java:4985)
        } else {                                                                // (JavaCodeGenerator.meta.java:4986)
            stateVertex.addSuccessor(symbolVertex);                             // (JavaCodeGenerator.meta.java:4987)
            if (markUnbroken) {                                                 // (JavaCodeGenerator.meta.java:4988)
                if (!context.unbrokenStates.contains(stateVertex))              // (JavaCodeGenerator.meta.java:4989)
                    context.unbrokenReducers.add(new $Reducer(symbolVertex, stateVertex));    // (JavaCodeGenerator.meta.java:4990)
            }                                                                   // (JavaCodeGenerator.meta.java:4991)
        }                                                                       // (JavaCodeGenerator.meta.java:4992)
    }                                                                           // (JavaCodeGenerator.meta.java:4993)
    private void __shift__notavacc_reserved(__Context__notavacc_reserved context, __StateVertex__notavacc_reserved state, int reductionID) {    // (JavaCodeGenerator.meta.java:4995)
        int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[reductionID];    // (JavaCodeGenerator.meta.java:4996)
        int pushSymbolID = reduction[0];                                        // (JavaCodeGenerator.meta.java:4997)
                                                                                // (JavaCodeGenerator.meta.java:4998)
        final int[] symbolIDToNextState = BVH_Parser.__lrTable__notavacc_reserved[state.stateNo * 3 + 1];    // (JavaCodeGenerator.meta.java:4999)
        int index = $binarySearchLRTable(symbolIDToNextState, pushSymbolID);    // (JavaCodeGenerator.meta.java:5000)
        if (symbolIDToNextState[index] == pushSymbolID) {                       // (JavaCodeGenerator.meta.java:5002)
            int nextStateNo = symbolIDToNextState[index + 1];                   // (JavaCodeGenerator.meta.java:5003)
                                                                                // (JavaCodeGenerator.meta.java:5007)
            __EmptyRecutionKey__notavacc_reserved key = new __EmptyRecutionKey__notavacc_reserved(pushSymbolID, nextStateNo);    // (JavaCodeGenerator.meta.java:5008)
            __SymbolVertex__notavacc_reserved symbolVertex = (__SymbolVertex__notavacc_reserved) context.emptyReductionMap.get(key);    // (JavaCodeGenerator.meta.java:5009)
            if (symbolVertex != null) {                                         // (JavaCodeGenerator.meta.java:5010)
                symbolVertex.addSuccessor(state);                               // (JavaCodeGenerator.meta.java:5011)
            } else {                                                            // (JavaCodeGenerator.meta.java:5012)
                symbolVertex = new __SymbolVertex__notavacc_reserved(state, new __ConcreteSyntaxTree__notavacc_reserved(context, reductionID, null));    // (JavaCodeGenerator.meta.java:5013)
                __push__notavacc_reserved(context, symbolVertex, new java.lang.Integer(nextStateNo), true);    // (JavaCodeGenerator.meta.java:5014)
            }                                                                   // (JavaCodeGenerator.meta.java:5015)
        }                                                                       // (JavaCodeGenerator.meta.java:5016)
    }                                                                           // (JavaCodeGenerator.meta.java:5017)
    private void __shift__notavacc_reserved(__Context__notavacc_reserved context, __StateVertex__notavacc_reserved state, boolean fixNode) throws ParseException {    // (JavaCodeGenerator.meta.java:5018)
        int pushSymbolID = context.nextTokenID;                                 // (JavaCodeGenerator.meta.java:5019)
                                                                                // (JavaCodeGenerator.meta.java:5020)
        final int[] symbolIDToNextState = BVH_Parser.__lrTable__notavacc_reserved[state.stateNo * 3 + 0];    // (JavaCodeGenerator.meta.java:5021)
        int index = $binarySearchLRTable(symbolIDToNextState, pushSymbolID);    // (JavaCodeGenerator.meta.java:5022)
        if (symbolIDToNextState[index] == pushSymbolID) {                       // (JavaCodeGenerator.meta.java:5024)
            int nextStateNo = symbolIDToNextState[index + 1];                   // (JavaCodeGenerator.meta.java:5025)
                                                                                // (JavaCodeGenerator.meta.java:5029)
            if (fixNode) {                                                      // (JavaCodeGenerator.meta.java:5030)
                __Link__notavacc_reserved<__SymbolVertex__notavacc_reserved> it = state.getSuccessors();    // (JavaCodeGenerator.meta.java:5031)
                do {                                                            // (JavaCodeGenerator.meta.java:5032)
                    __SymbolVertex__notavacc_reserved prevSymbolVertex = (__SymbolVertex__notavacc_reserved) it.value;    // (JavaCodeGenerator.meta.java:5033)
                    __fixNode__notavacc_reserved(context, prevSymbolVertex);    // (JavaCodeGenerator.meta.java:5034)
                } while ((it = it.next) != null);                               // (JavaCodeGenerator.meta.java:5035)
            }                                                                   // (JavaCodeGenerator.meta.java:5036)
                                                                                // (JavaCodeGenerator.meta.java:5037)
            __EmptyRecutionKey__notavacc_reserved key = new __EmptyRecutionKey__notavacc_reserved(pushSymbolID, nextStateNo);    // (JavaCodeGenerator.meta.java:5038)
            __SymbolVertex__notavacc_reserved symbolVertex = (__SymbolVertex__notavacc_reserved) context.emptyReductionMap.get(key);    // (JavaCodeGenerator.meta.java:5039)
            if (symbolVertex != null) {                                         // (JavaCodeGenerator.meta.java:5040)
                symbolVertex.addSuccessor(state);                               // (JavaCodeGenerator.meta.java:5041)
            } else {                                                            // (JavaCodeGenerator.meta.java:5042)
                symbolVertex = new __SymbolVertex__notavacc_reserved(state, context.nextToken);    // (JavaCodeGenerator.meta.java:5043)
                __push__notavacc_reserved(context, symbolVertex, new java.lang.Integer(nextStateNo), false);    // (JavaCodeGenerator.meta.java:5044)
            }                                                                   // (JavaCodeGenerator.meta.java:5045)
        }                                                                       // (JavaCodeGenerator.meta.java:5046)
    }                                                                           // (JavaCodeGenerator.meta.java:5047)
                                                                                // (JavaCodeGenerator.meta.java:5048)
    private void __fixNode__notavacc_reserved(__Context__notavacc_reserved context, __SymbolVertex__notavacc_reserved symbolVertex) throws ParseException {    // (JavaCodeGenerator.meta.java:5050)
        __LabeledNode__notavacc_reserved symbol = __fixNode__notavacc_reserved(context, symbolVertex.symbol, false);    // (JavaCodeGenerator.meta.java:5051)
        if (symbol != null)                                                     // (JavaCodeGenerator.meta.java:5052)
            symbolVertex.symbol = symbol.compact();                             // (JavaCodeGenerator.meta.java:5053)
    }                                                                           // (JavaCodeGenerator.meta.java:5054)
    private __LabeledNode__notavacc_reserved __fixNode__notavacc_reserved(__Context__notavacc_reserved context, java.lang.Object symbol, boolean flatting) throws ParseException {    // (JavaCodeGenerator.meta.java:5055)
        if (symbol instanceof __LabeledNode__notavacc_reserved)                 // (JavaCodeGenerator.meta.java:5056)
            return (__LabeledNode__notavacc_reserved) symbol;                   // (JavaCodeGenerator.meta.java:5057)
        if (symbol instanceof Node)                                             // (JavaCodeGenerator.meta.java:5058)
            return new __LabeledNode__notavacc_reserved((Node) symbol);         // (JavaCodeGenerator.meta.java:5059)
                                                                                // (JavaCodeGenerator.meta.java:5060)
        if (context.symbolFixMap.containsKey(symbol))                           // (JavaCodeGenerator.meta.java:5061)
            return (__LabeledNode__notavacc_reserved) context.symbolFixMap.get(symbol);    // (JavaCodeGenerator.meta.java:5062)
                                                                                // (JavaCodeGenerator.meta.java:5063)
        __LabeledNode__notavacc_reserved result;                                // (JavaCodeGenerator.meta.java:5064)
        if (symbol instanceof __Absorber__notavacc_reserved) {                  // (JavaCodeGenerator.meta.java:5065)
            result = __fixNode__notavacc_reserved(context, (__Absorber__notavacc_reserved) symbol);    // (JavaCodeGenerator.meta.java:5066)
            context.symbolFixMap.put(symbol, result);                           // (JavaCodeGenerator.meta.java:5067)
        } else {                                                                // (JavaCodeGenerator.meta.java:5068)
            result = __fixNode__notavacc_reserved(context, (__ConcreteSyntaxTree__notavacc_reserved) symbol, flatting);    // (JavaCodeGenerator.meta.java:5069)
        }                                                                       // (JavaCodeGenerator.meta.java:5070)
        return result;                                                          // (JavaCodeGenerator.meta.java:5071)
    }                                                                           // (JavaCodeGenerator.meta.java:5072)
                                                                                // (JavaCodeGenerator.meta.java:5073)
    private __LabeledNode__notavacc_reserved __fixNode__notavacc_reserved(__Context__notavacc_reserved context, __Absorber__notavacc_reserved absorber) throws ParseException {    // (JavaCodeGenerator.meta.java:5074)
        if (absorber.symbolID < 34)                                             // (JavaCodeGenerator.meta.java:5075)
            return new __LabeledNode__notavacc_reserved(__fixTypeNode__notavacc_reserved(context, absorber.symbolID, absorber.getAlternatives()));    // (JavaCodeGenerator.meta.java:5076)
                                                                                // (JavaCodeGenerator.meta.java:5077)
        java.util.List<Node> children = new java.util.LinkedList<Node>();       // (JavaCodeGenerator.meta.java:5078)
        boolean coverAll = true;                                                // (JavaCodeGenerator.meta.java:5079)
                                                                                // (JavaCodeGenerator.meta.java:5080)
        java.util.Map<java.lang.Integer, java.util.List<Node>> map = new java.util.LinkedHashMap<java.lang.Integer, java.util.List<Node>>();    // (JavaCodeGenerator.meta.java:5081)
                                                                                // (JavaCodeGenerator.meta.java:5082)
        __Link__notavacc_reserved<java.lang.Object> it = absorber.getAlternatives();    // (JavaCodeGenerator.meta.java:5083)
        do {                                                                    // (JavaCodeGenerator.meta.java:5084)
            __ConcreteSyntaxTree__notavacc_reserved tree = (__ConcreteSyntaxTree__notavacc_reserved) it.value;    // (JavaCodeGenerator.meta.java:5085)
            __LabeledNode__notavacc_reserved node = __fixAliasNode__notavacc_reserved(context, tree);    // (JavaCodeGenerator.meta.java:5086)
                                                                                // (JavaCodeGenerator.meta.java:5087)
            if (node == null) {                                                 // (JavaCodeGenerator.meta.java:5088)
                coverAll = false;                                               // (JavaCodeGenerator.meta.java:5089)
            } else {                                                            // (JavaCodeGenerator.meta.java:5090)
                java.lang.Integer labels = new java.lang.Integer(node.labels);    // (JavaCodeGenerator.meta.java:5092)
                java.util.List<Node> list = (java.util.List<Node>) map.get(labels);    // (JavaCodeGenerator.meta.java:5096)
                if (list == null) {                                             // (JavaCodeGenerator.meta.java:5097)
                    list = new java.util.LinkedList<Node>();                    // (JavaCodeGenerator.meta.java:5098)
                    map.put(labels, list);                                      // (JavaCodeGenerator.meta.java:5099)
                }                                                               // (JavaCodeGenerator.meta.java:5100)
                list.add(node.node);                                            // (JavaCodeGenerator.meta.java:5101)
                it.value = null;                                                // (JavaCodeGenerator.meta.java:5102)
            }                                                                   // (JavaCodeGenerator.meta.java:5103)
        } while ((it = it.next) != null);                                       // (JavaCodeGenerator.meta.java:5104)
                                                                                // (JavaCodeGenerator.meta.java:5105)
        if (coverAll && map.size() == 1) {                                      // (JavaCodeGenerator.meta.java:5106)
            java.util.Iterator<java.util.Map.Entry<java.lang.Integer, java.util.List<Node>>> it42 = map.entrySet().iterator();    // (JavaCodeGenerator.meta.java:5107)
            java.util.Map.Entry<java.lang.Integer, java.util.List<Node>> entry = (java.util.Map.Entry<java.lang.Integer, java.util.List<Node>>) it42.next();    // (JavaCodeGenerator.meta.java:5108)
            int labels = ((java.lang.Integer) entry.getKey()).intValue();       // (JavaCodeGenerator.meta.java:5110)
            java.util.List<Node> list = (java.util.List<Node>) entry.getValue();    // (JavaCodeGenerator.meta.java:5114)
            if (list.size() == 1) {                                             // (JavaCodeGenerator.meta.java:5115)
                return new __LabeledNode__notavacc_reserved(labels, (Node) list.get(0));    // (JavaCodeGenerator.meta.java:5116)
            } else {                                                            // (JavaCodeGenerator.meta.java:5117)
                return new __LabeledNode__notavacc_reserved(__createAmbiguityAbsorberOrThrow__notavacc_reserved(absorber.symbolID, list));    // (JavaCodeGenerator.meta.java:5118)
            }                                                                   // (JavaCodeGenerator.meta.java:5119)
        }                                                                       // (JavaCodeGenerator.meta.java:5120)
                                                                                // (JavaCodeGenerator.meta.java:5121)
        java.util.Iterator<java.util.Map.Entry<java.lang.Integer, java.util.List<Node>>> it42 = map.entrySet().iterator();    // (JavaCodeGenerator.meta.java:5122)
        while (it42.hasNext()) {                                                // (JavaCodeGenerator.meta.java:5123)
            java.util.Map.Entry<java.lang.Integer, java.util.List<Node>> entry = (java.util.Map.Entry<java.lang.Integer, java.util.List<Node>>) it42.next();    // (JavaCodeGenerator.meta.java:5124)
            int labels = ((java.lang.Integer) entry.getKey()).intValue();       // (JavaCodeGenerator.meta.java:5126)
            java.util.List<Node> list = (java.util.List<Node>) entry.getValue();    // (JavaCodeGenerator.meta.java:5130)
            if (list.size() > 1) {                                              // (JavaCodeGenerator.meta.java:5131)
                AmbiguityAbsorber a = __createAmbiguityAbsorberOrThrow__notavacc_reserved(absorber.symbolID, list);    // (JavaCodeGenerator.meta.java:5132)
                absorber.addAlternative(new __LabeledNode__notavacc_reserved(labels, a));    // (JavaCodeGenerator.meta.java:5133)
            } else {                                                            // (JavaCodeGenerator.meta.java:5134)
                absorber.addAlternative(new __LabeledNode__notavacc_reserved(labels, (Node) list.get(0)));    // (JavaCodeGenerator.meta.java:5135)
            }                                                                   // (JavaCodeGenerator.meta.java:5136)
        }                                                                       // (JavaCodeGenerator.meta.java:5137)
                                                                                // (JavaCodeGenerator.meta.java:5138)
        return null;                                                            // (JavaCodeGenerator.meta.java:5139)
    }                                                                           // (JavaCodeGenerator.meta.java:5140)
    private __LabeledNode__notavacc_reserved __fixNode__notavacc_reserved(__Context__notavacc_reserved context, __ConcreteSyntaxTree__notavacc_reserved tree, boolean flatting) throws ParseException {    // (JavaCodeGenerator.meta.java:5141)
        final int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[tree.reductionID];    // (JavaCodeGenerator.meta.java:5142)
        final int symbolID = reduction[0];                                      // (JavaCodeGenerator.meta.java:5143)
        if (symbolID < 34) {                                                    // (JavaCodeGenerator.meta.java:5144)
            __LabeledNode__notavacc_reserved result = new __LabeledNode__notavacc_reserved(__fixTypeNode__notavacc_reserved(context, symbolID, new __Link__notavacc_reserved<java.lang.Object>(tree, null)));    // (JavaCodeGenerator.meta.java:5145)
            context.symbolFixMap.put(tree, result);                             // (JavaCodeGenerator.meta.java:5146)
            return result;                                                      // (JavaCodeGenerator.meta.java:5147)
        } else {                                                                // (JavaCodeGenerator.meta.java:5148)
            if (true) {                                                         // (JavaCodeGenerator.meta.java:5149)
                return null;                                                    // (JavaCodeGenerator.meta.java:5150)
            } else {                                                            // (JavaCodeGenerator.meta.java:5151)
                __LabeledNode__notavacc_reserved result = null;                 // (JavaCodeGenerator.meta.java:5152)
                if (!flatting) {                                                // (JavaCodeGenerator.meta.java:5153)
                    result = __fixAliasNode__notavacc_reserved(context, tree);    // (JavaCodeGenerator.meta.java:5154)
                    context.symbolFixMap.put(tree, result);                     // (JavaCodeGenerator.meta.java:5155)
                }                                                               // (JavaCodeGenerator.meta.java:5156)
                return result;                                                  // (JavaCodeGenerator.meta.java:5157)
            }                                                                   // (JavaCodeGenerator.meta.java:5158)
        }                                                                       // (JavaCodeGenerator.meta.java:5159)
    }                                                                           // (JavaCodeGenerator.meta.java:5160)
                                                                                // (JavaCodeGenerator.meta.java:5161)
    private __LabeledNode__notavacc_reserved __fixAliasNode__notavacc_reserved(__Context__notavacc_reserved context, __ConcreteSyntaxTree__notavacc_reserved tree) throws ParseException {    // (JavaCodeGenerator.meta.java:5163)
        __LabeledNode__notavacc_reserved[] result = new __LabeledNode__notavacc_reserved[1];    // (JavaCodeGenerator.meta.java:5164)
        if (!__getOnlyOneChild__notavacc_reserved(result, context, __LabeledNode__notavacc_reserved.INHERIT_LABEL, tree))    // (JavaCodeGenerator.meta.java:5165)
            result[0] = null;                                                   // (JavaCodeGenerator.meta.java:5166)
                                                                                // (JavaCodeGenerator.meta.java:5167)
                                                                                // (JavaCodeGenerator.meta.java:5183)
        return result[0];                                                       // (JavaCodeGenerator.meta.java:5184)
    }                                                                           // (JavaCodeGenerator.meta.java:5185)
                                                                                // (JavaCodeGenerator.meta.java:5186)
    private Node __fixTypeNode__notavacc_reserved(__Context__notavacc_reserved context, int symbolID, __Link__notavacc_reserved<java.lang.Object> trees) throws ParseException {    // (JavaCodeGenerator.meta.java:5188)
        java.util.List<Node> result = new java.util.LinkedList<Node>();         // (JavaCodeGenerator.meta.java:5189)
        __Link__notavacc_reserved<java.lang.Object> it = trees;                 // (JavaCodeGenerator.meta.java:5190)
        do {                                                                    // (JavaCodeGenerator.meta.java:5191)
            __createNodes__notavacc_reserved(result, context, (__ConcreteSyntaxTree__notavacc_reserved) it.value);    // (JavaCodeGenerator.meta.java:5192)
        } while ((it = it.next) != null);                                       // (JavaCodeGenerator.meta.java:5193)
                                                                                // (JavaCodeGenerator.meta.java:5194)
        if (result.size() <= 1)                                                 // (JavaCodeGenerator.meta.java:5195)
            return (Node) result.get(0);                                        // (JavaCodeGenerator.meta.java:5196)
        else                                                                    // (JavaCodeGenerator.meta.java:5197)
            return __createAmbiguityAbsorberOrThrow__notavacc_reserved(symbolID, result);    // (JavaCodeGenerator.meta.java:5198)
    }                                                                           // (JavaCodeGenerator.meta.java:5199)
    private void __createNodes__notavacc_reserved(java.util.List<Node> result, __Context__notavacc_reserved context, __ConcreteSyntaxTree__notavacc_reserved tree) throws ParseException {    // (JavaCodeGenerator.meta.java:5201)
        final int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[tree.reductionID];    // (JavaCodeGenerator.meta.java:5202)
        final int symbolID = reduction[0];                                      // (JavaCodeGenerator.meta.java:5203)
                                                                                // (JavaCodeGenerator.meta.java:5204)
        java.util.List<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> heads = new java.util.LinkedList<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>>();    // (JavaCodeGenerator.meta.java:5205)
        heads.add(null);                                                        // (JavaCodeGenerator.meta.java:5206)
        heads = __flatNodes__notavacc_reserved(context, heads, 0, tree);        // (JavaCodeGenerator.meta.java:5208)
        java.util.Iterator<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> it40 = heads.iterator();    // (JavaCodeGenerator.meta.java:5212)
        while (it40.hasNext()) {                                                // (JavaCodeGenerator.meta.java:5213)
            __Link__notavacc_reserved<__LabeledNode__notavacc_reserved> children = (__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>) it40.next();    // (JavaCodeGenerator.meta.java:5214)
            result.add(createNode(context, symbolID, children));                // (JavaCodeGenerator.meta.java:5215)
        }                                                                       // (JavaCodeGenerator.meta.java:5216)
    }                                                                           // (JavaCodeGenerator.meta.java:5217)
    private java.util.List<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> __flatNodes__notavacc_reserved(__Context__notavacc_reserved context, java.util.List<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> heads, int labels, __ConcreteSyntaxTree__notavacc_reserved tree) throws ParseException {    // (JavaCodeGenerator.meta.java:5219)
        restart:                                                                // (JavaCodeGenerator.meta.java:5220)
        for (;;) {                                                              // (JavaCodeGenerator.meta.java:5221)
            if (tree.children == null)                                          // (JavaCodeGenerator.meta.java:5222)
                return heads;                                                   // (JavaCodeGenerator.meta.java:5223)
                                                                                // (JavaCodeGenerator.meta.java:5224)
            final int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[tree.reductionID];    // (JavaCodeGenerator.meta.java:5225)
            final int symbolID = reduction[0];                                  // (JavaCodeGenerator.meta.java:5226)
                                                                                // (JavaCodeGenerator.meta.java:5227)
            int reductionIndex = 1;                                             // (JavaCodeGenerator.meta.java:5228)
            for (int index = 1; index < tree.children.length; index += 2) {     // (JavaCodeGenerator.meta.java:5229)
                int mergedLabels = reduction[reductionIndex++];                 // (JavaCodeGenerator.meta.java:5231)
                mergedLabels = __mergeLabels__notavacc_reserved(labels, mergedLabels);    // (JavaCodeGenerator.meta.java:5238)
                                                                                // (JavaCodeGenerator.meta.java:5239)
                java.lang.Object symbol = tree.children[index];                 // (JavaCodeGenerator.meta.java:5240)
                __LabeledNode__notavacc_reserved node = __fixNode__notavacc_reserved(context, symbol, true);    // (JavaCodeGenerator.meta.java:5241)
                if (node != null) {                                             // (JavaCodeGenerator.meta.java:5242)
                    tree.children[index] = node;                                // (JavaCodeGenerator.meta.java:5243)
                    java.util.ListIterator<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> it = heads.listIterator();    // (JavaCodeGenerator.meta.java:5244)
                    while (it.hasNext()) {                                      // (JavaCodeGenerator.meta.java:5245)
                        __Link__notavacc_reserved<__LabeledNode__notavacc_reserved> h = (__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>) it.next();    // (JavaCodeGenerator.meta.java:5246)
                        it.set(new __Link__notavacc_reserved<__LabeledNode__notavacc_reserved>(new __LabeledNode__notavacc_reserved(mergedLabels, node), h));    // (JavaCodeGenerator.meta.java:5247)
                    }                                                           // (JavaCodeGenerator.meta.java:5248)
                } else {                                                        // (JavaCodeGenerator.meta.java:5249)
                    if (symbol instanceof __Absorber__notavacc_reserved) {      // (JavaCodeGenerator.meta.java:5250)
                        __Absorber__notavacc_reserved absorber = (__Absorber__notavacc_reserved) symbol;    // (JavaCodeGenerator.meta.java:5251)
                        java.util.List<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> newHead = new java.util.LinkedList<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>>();    // (JavaCodeGenerator.meta.java:5252)
                        java.util.Iterator<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> it41 = heads.iterator();    // (JavaCodeGenerator.meta.java:5253)
                        while (it41.hasNext()) {                                // (JavaCodeGenerator.meta.java:5254)
                            __Link__notavacc_reserved<__LabeledNode__notavacc_reserved> h = (__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>) it41.next();    // (JavaCodeGenerator.meta.java:5255)
                                                                                // (JavaCodeGenerator.meta.java:5256)
                            __Link__notavacc_reserved<java.lang.Object> it = absorber.getAlternatives();    // (JavaCodeGenerator.meta.java:5257)
                            do {                                                // (JavaCodeGenerator.meta.java:5258)
                                java.lang.Object o = it.value;                  // (JavaCodeGenerator.meta.java:5259)
                                if (o != null) {                                // (JavaCodeGenerator.meta.java:5260)
                                    if (o instanceof __ConcreteSyntaxTree__notavacc_reserved) {    // (JavaCodeGenerator.meta.java:5261)
                                        java.util.List<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> tmp = new java.util.LinkedList<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>>();    // (JavaCodeGenerator.meta.java:5262)
                                        tmp.add(h);                             // (JavaCodeGenerator.meta.java:5263)
                                        tmp = __flatNodes__notavacc_reserved(context, tmp, mergedLabels, (__ConcreteSyntaxTree__notavacc_reserved) o);    // (JavaCodeGenerator.meta.java:5264)
                                        newHead.addAll(tmp);                    // (JavaCodeGenerator.meta.java:5265)
                                    } else {                                    // (JavaCodeGenerator.meta.java:5266)
                                        newHead.add(new __Link__notavacc_reserved<__LabeledNode__notavacc_reserved>(new __LabeledNode__notavacc_reserved(mergedLabels, (__LabeledNode__notavacc_reserved) o), h));    // (JavaCodeGenerator.meta.java:5267)
                                    }                                           // (JavaCodeGenerator.meta.java:5268)
                                }                                               // (JavaCodeGenerator.meta.java:5269)
                            } while ((it = it.next) != null);                   // (JavaCodeGenerator.meta.java:5270)
                        }                                                       // (JavaCodeGenerator.meta.java:5271)
                        heads = newHead;                                        // (JavaCodeGenerator.meta.java:5272)
                    } else {                                                    // (JavaCodeGenerator.meta.java:5273)
                        if (index + 2 < tree.children.length) {                 // (JavaCodeGenerator.meta.java:5274)
                            heads = __flatNodes__notavacc_reserved(context, heads, mergedLabels, (__ConcreteSyntaxTree__notavacc_reserved) symbol);    // (JavaCodeGenerator.meta.java:5275)
                        } else {                                                // (JavaCodeGenerator.meta.java:5276)
                            // tail recursion                                   // (JavaCodeGenerator.meta.java:5277)
                            labels = mergedLabels;                              // (JavaCodeGenerator.meta.java:5278)
                            tree = (__ConcreteSyntaxTree__notavacc_reserved) symbol;    // (JavaCodeGenerator.meta.java:5279)
                            continue restart;                                   // (JavaCodeGenerator.meta.java:5280)
                        }                                                       // (JavaCodeGenerator.meta.java:5281)
                    }                                                           // (JavaCodeGenerator.meta.java:5282)
                }                                                               // (JavaCodeGenerator.meta.java:5283)
                                                                                // (JavaCodeGenerator.meta.java:5284)
                if (index + 2 < tree.children.length) {                         // (JavaCodeGenerator.meta.java:5285)
                    __Link__notavacc_reserved whiteToken1 = (__Link__notavacc_reserved) tree.children[index - 1];    // (JavaCodeGenerator.meta.java:5286)
                    __Link__notavacc_reserved whiteToken2 = (__Link__notavacc_reserved) tree.children[index + 1];    // (JavaCodeGenerator.meta.java:5287)
                    if (whiteToken1 != whiteToken2)                             // (JavaCodeGenerator.meta.java:5288)
                        heads = __flatWhiteTokens__notavacc_reserved(context, heads, whiteToken2);    // (JavaCodeGenerator.meta.java:5289)
                }                                                               // (JavaCodeGenerator.meta.java:5290)
            }                                                                   // (JavaCodeGenerator.meta.java:5291)
            return heads;                                                       // (JavaCodeGenerator.meta.java:5292)
        }                                                                       // (JavaCodeGenerator.meta.java:5293)
    }                                                                           // (JavaCodeGenerator.meta.java:5294)
    private boolean __getOnlyOneChild__notavacc_reserved(__LabeledNode__notavacc_reserved[] result, __Context__notavacc_reserved context, int labels, __ConcreteSyntaxTree__notavacc_reserved tree) throws ParseException {    // (JavaCodeGenerator.meta.java:5296)
        restart:                                                                // (JavaCodeGenerator.meta.java:5297)
        for (;;) {                                                              // (JavaCodeGenerator.meta.java:5298)
            if (tree.children == null)                                          // (JavaCodeGenerator.meta.java:5299)
                return true;                                                    // (JavaCodeGenerator.meta.java:5300)
                                                                                // (JavaCodeGenerator.meta.java:5301)
            final int[] reduction = BVH_Parser.__reductionTable__notavacc_reserved[tree.reductionID];    // (JavaCodeGenerator.meta.java:5302)
            final int symbolID = reduction[0];                                  // (JavaCodeGenerator.meta.java:5303)
                                                                                // (JavaCodeGenerator.meta.java:5304)
            int reductionIndex = 1;                                             // (JavaCodeGenerator.meta.java:5305)
            for (int index = 1; index < tree.children.length; index += 2) {     // (JavaCodeGenerator.meta.java:5306)
                int mergedLabels = reduction[reductionIndex++];                 // (JavaCodeGenerator.meta.java:5308)
                mergedLabels = __mergeLabels__notavacc_reserved(labels, mergedLabels);    // (JavaCodeGenerator.meta.java:5315)
                                                                                // (JavaCodeGenerator.meta.java:5316)
                java.lang.Object symbol = tree.children[index];                 // (JavaCodeGenerator.meta.java:5317)
                __LabeledNode__notavacc_reserved node = __fixNode__notavacc_reserved(context, symbol, true);    // (JavaCodeGenerator.meta.java:5318)
                if (node != null) {                                             // (JavaCodeGenerator.meta.java:5319)
                    tree.children[index] = node;                                // (JavaCodeGenerator.meta.java:5320)
                    if (result[0] == null)                                      // (JavaCodeGenerator.meta.java:5321)
                        result[0] = new __LabeledNode__notavacc_reserved(mergedLabels, node);    // (JavaCodeGenerator.meta.java:5322)
                    else                                                        // (JavaCodeGenerator.meta.java:5323)
                        return false;                                           // (JavaCodeGenerator.meta.java:5324)
                } else {                                                        // (JavaCodeGenerator.meta.java:5325)
                    if (symbol instanceof __Absorber__notavacc_reserved) {      // (JavaCodeGenerator.meta.java:5326)
                        return false;                                           // (JavaCodeGenerator.meta.java:5327)
                    } else {                                                    // (JavaCodeGenerator.meta.java:5328)
                        if (index + 2 < tree.children.length) {                 // (JavaCodeGenerator.meta.java:5329)
                            if (!__getOnlyOneChild__notavacc_reserved(result, context, mergedLabels, (__ConcreteSyntaxTree__notavacc_reserved) symbol))    // (JavaCodeGenerator.meta.java:5330)
                                return false;                                   // (JavaCodeGenerator.meta.java:5331)
                        } else {                                                // (JavaCodeGenerator.meta.java:5332)
                            // tail recursion                                   // (JavaCodeGenerator.meta.java:5333)
                            labels = mergedLabels;                              // (JavaCodeGenerator.meta.java:5334)
                            tree = (__ConcreteSyntaxTree__notavacc_reserved) symbol;    // (JavaCodeGenerator.meta.java:5335)
                            continue restart;                                   // (JavaCodeGenerator.meta.java:5336)
                        }                                                       // (JavaCodeGenerator.meta.java:5337)
                    }                                                           // (JavaCodeGenerator.meta.java:5338)
                }                                                               // (JavaCodeGenerator.meta.java:5339)
            }                                                                   // (JavaCodeGenerator.meta.java:5340)
            return true;                                                        // (JavaCodeGenerator.meta.java:5341)
        }                                                                       // (JavaCodeGenerator.meta.java:5342)
    }                                                                           // (JavaCodeGenerator.meta.java:5343)
    private java.util.List<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> __flatWhiteTokens__notavacc_reserved(__Context__notavacc_reserved context, java.util.List<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> heads, __Link__notavacc_reserved whiteTokens) {    // (JavaCodeGenerator.meta.java:5345)
        __Link__notavacc_reserved link = whiteTokens;                           // (JavaCodeGenerator.meta.java:5346)
        for (; link != null; link = link.next) {                                // (JavaCodeGenerator.meta.java:5347)
            __LabeledNode__notavacc_reserved n = new __LabeledNode__notavacc_reserved(0, (Token) link.value);    // (JavaCodeGenerator.meta.java:5348)
                                                                                // (JavaCodeGenerator.meta.java:5349)
            java.util.ListIterator<__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>> it = heads.listIterator();    // (JavaCodeGenerator.meta.java:5350)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:5351)
                __Link__notavacc_reserved<__LabeledNode__notavacc_reserved> h = (__Link__notavacc_reserved<__LabeledNode__notavacc_reserved>) it.next();    // (JavaCodeGenerator.meta.java:5352)
                it.set(new __Link__notavacc_reserved<__LabeledNode__notavacc_reserved>(n, h));    // (JavaCodeGenerator.meta.java:5353)
            }                                                                   // (JavaCodeGenerator.meta.java:5354)
        }                                                                       // (JavaCodeGenerator.meta.java:5355)
        return heads;                                                           // (JavaCodeGenerator.meta.java:5356)
    }                                                                           // (JavaCodeGenerator.meta.java:5357)
                                                                                // (JavaCodeGenerator.meta.java:5358)
    private Node createNode(__Context__notavacc_reserved context, int symbolID, __Link__notavacc_reserved<__LabeledNode__notavacc_reserved> nodeList) throws ParseException {    // (JavaCodeGenerator.meta.java:5359)
        // TODO: createNode(symbolID, parameters) ���_�C���N�g�� nodeList ���󂯎��悤�ɏC������B    // (JavaCodeGenerator.meta.java:5360)
                                                                                // (JavaCodeGenerator.meta.java:5361)
        java.util.List<java.lang.Integer> labelBitsList = new java.util.LinkedList<java.lang.Integer>();    // (JavaCodeGenerator.meta.java:5362)
        java.util.List<Node> nodes = new java.util.LinkedList<Node>();          // (JavaCodeGenerator.meta.java:5363)
        for (; nodeList != null; nodeList = nodeList.next) {                    // (JavaCodeGenerator.meta.java:5364)
            __LabeledNode__notavacc_reserved n = (__LabeledNode__notavacc_reserved) nodeList.value;    // (JavaCodeGenerator.meta.java:5365)
            labelBitsList.add(0, new java.lang.Integer(n.labels));              // (JavaCodeGenerator.meta.java:5367)
            nodes.add(0, n.node);                                               // (JavaCodeGenerator.meta.java:5371)
        }                                                                       // (JavaCodeGenerator.meta.java:5372)
        Node[] childNodes = (Node[]) nodes.toArray(new Node[nodes.size()]);     // (JavaCodeGenerator.meta.java:5373)
        context.parameters.childNodes = childNodes;                             // (JavaCodeGenerator.meta.java:5374)
        context.parameters.labelBitsList = labelBitsList;                       // (JavaCodeGenerator.meta.java:5375)
        Node result = createNode(symbolID, context.parameters);                 // (JavaCodeGenerator.meta.java:5376)
        context.parameters.childNodes = null;                                   // (JavaCodeGenerator.meta.java:5377)
        context.parameters.labelBitsList = null;                                // (JavaCodeGenerator.meta.java:5378)
        return result;                                                          // (JavaCodeGenerator.meta.java:5379)
    }                                                                           // (JavaCodeGenerator.meta.java:5380)
                                                                                // (JavaCodeGenerator.meta.java:5381)
                                                                                // (JavaCodeGenerator.meta.java:5382)
    private final static int __ERROR_REPORT_MODE__notavacc_reserved = -1;       // (JavaCodeGenerator.meta.java:5384)
    private void __error__notavacc_reserved(__Context__notavacc_reserved context, LexicalAnalyzer analyzer) throws ParseException {    // (JavaCodeGenerator.meta.java:5386)
        Token errorNextToken = context.nextToken;                               // (JavaCodeGenerator.meta.java:5387)
        context.nextTokenID = __ERROR_REPORT_MODE__notavacc_reserved;           // (JavaCodeGenerator.meta.java:5388)
        context.nextToken = null;                                               // (JavaCodeGenerator.meta.java:5389)
                                                                                // (JavaCodeGenerator.meta.java:5390)
        assert context.unbrokenReducers.isEmpty();                              // (JavaCodeGenerator.meta.java:5391)
        assert context.unbrokenStates.isEmpty();                                // (JavaCodeGenerator.meta.java:5392)
        context.unbrokenStates.addAll(context.states.values());                 // (JavaCodeGenerator.meta.java:5393)
        reduceLoop:                                                             // (JavaCodeGenerator.meta.java:5394)
        while (!context.unbrokenReducers.isEmpty() || !context.unbrokenStates.isEmpty()) {    // (JavaCodeGenerator.meta.java:5395)
            if (!context.unbrokenReducers.isEmpty()) {                          // (JavaCodeGenerator.meta.java:5396)
                $Reducer reducer = ($Reducer) context.unbrokenReducers.removeFirst();    // (JavaCodeGenerator.meta.java:5397)
                __reduce__notavacc_reserved(context, reducer);                  // (JavaCodeGenerator.meta.java:5398)
            } else {                                                            // (JavaCodeGenerator.meta.java:5399)
                java.util.Iterator it = context.unbrokenStates.iterator();      // (JavaCodeGenerator.meta.java:5400)
                __StateVertex__notavacc_reserved state = (__StateVertex__notavacc_reserved) it.next();    // (JavaCodeGenerator.meta.java:5401)
                it.remove();                                                    // (JavaCodeGenerator.meta.java:5402)
                __reduce__notavacc_reserved(context, state);                    // (JavaCodeGenerator.meta.java:5403)
            }                                                                   // (JavaCodeGenerator.meta.java:5404)
        }                                                                       // (JavaCodeGenerator.meta.java:5405)
        context.absorbMap2.clear();                                             // (JavaCodeGenerator.meta.java:5406)
                                                                                // (JavaCodeGenerator.meta.java:5407)
        java.util.Set<java.lang.Integer> nextTokens = new java.util.LinkedHashSet<java.lang.Integer>();    // (JavaCodeGenerator.meta.java:5408)
                                                                                // (JavaCodeGenerator.meta.java:5409)
        java.util.Iterator<__StateVertex__notavacc_reserved> it25 = context.states.values().iterator();    // (JavaCodeGenerator.meta.java:5410)
        shiftLoop:                                                              // (JavaCodeGenerator.meta.java:5411)
        while (it25.hasNext()) {                                                // (JavaCodeGenerator.meta.java:5412)
            __StateVertex__notavacc_reserved currentState = (__StateVertex__notavacc_reserved) it25.next();    // (JavaCodeGenerator.meta.java:5413)
                                                                                // (JavaCodeGenerator.meta.java:5414)
            final int[] tokenIDToNextState = BVH_Parser.__lrTable__notavacc_reserved[currentState.stateNo * 3 + 0];    // (JavaCodeGenerator.meta.java:5415)
            int index = 0;                                                      // (JavaCodeGenerator.meta.java:5416)
            for (; tokenIDToNextState[index] != __TABLE_SENTINEL__notavacc_reserved; index += 2) {    // (JavaCodeGenerator.meta.java:5417)
                nextTokens.add(new java.lang.Integer(tokenIDToNextState[index]));    // (JavaCodeGenerator.meta.java:5418)
            }                                                                   // (JavaCodeGenerator.meta.java:5419)
        }                                                                       // (JavaCodeGenerator.meta.java:5420)
                                                                                // (JavaCodeGenerator.meta.java:5421)
        int[] selectableTokens = new int[nextTokens.size()];                    // (JavaCodeGenerator.meta.java:5422)
        int index = 0;                                                          // (JavaCodeGenerator.meta.java:5423)
        java.util.Iterator it11 = nextTokens.iterator();                        // (JavaCodeGenerator.meta.java:5424)
        while (it11.hasNext()) {                                                // (JavaCodeGenerator.meta.java:5425)
            java.lang.Integer i = (java.lang.Integer) it11.next();              // (JavaCodeGenerator.meta.java:5426)
            selectableTokens[index++] = i.intValue();                           // (JavaCodeGenerator.meta.java:5427)
        }                                                                       // (JavaCodeGenerator.meta.java:5428)
                                                                                // (JavaCodeGenerator.meta.java:5429)
        __error__notavacc_reserved(analyzer, errorNextToken, selectableTokens);    // (JavaCodeGenerator.meta.java:5430)
    }                                                                           // (JavaCodeGenerator.meta.java:5431)
    private static void __error__notavacc_reserved(LexicalAnalyzer analyzer, Token errorNextToken, int[] selectableNextTokens) throws ParseException {    // (JavaCodeGenerator.meta.java:5432)
        java.io.StringWriter buffer = new java.io.StringWriter();               // (JavaCodeGenerator.meta.java:5433)
        java.io.PrintWriter writer = new java.io.PrintWriter(buffer);           // (JavaCodeGenerator.meta.java:5434)
                                                                                // (JavaCodeGenerator.meta.java:5435)
        if (errorNextToken.getSymbolID() != EOF_TOKEN) {                        // (JavaCodeGenerator.meta.java:5436)
            writer.println("The token " + errorNextToken + " should be one of the following.");    // (JavaCodeGenerator.meta.java:5437)
        } else {                                                                // (JavaCodeGenerator.meta.java:5438)
            writer.println("The EOF should be one of the following.");          // (JavaCodeGenerator.meta.java:5439)
        }                                                                       // (JavaCodeGenerator.meta.java:5440)
                                                                                // (JavaCodeGenerator.meta.java:5441)
        for (int i = 0; i < selectableNextTokens.length; i++) {                 // (JavaCodeGenerator.meta.java:5442)
            int selectableNextToken = selectableNextTokens[i];                  // (JavaCodeGenerator.meta.java:5443)
            writer.print("        ");                                           // (JavaCodeGenerator.meta.java:5444)
            writer.println(__symbolIDToName__notavacc_reserved[selectableNextToken]);    // (JavaCodeGenerator.meta.java:5445)
        }                                                                       // (JavaCodeGenerator.meta.java:5446)
                                                                                // (JavaCodeGenerator.meta.java:5447)
        writer.close();                                                         // (JavaCodeGenerator.meta.java:5448)
        if (writer.checkError())                                                // (JavaCodeGenerator.meta.java:5449)
            throw new java.lang.RuntimeException();                             // (JavaCodeGenerator.meta.java:5450)
        throw new ParseException(buffer.toString(), errorNextToken);            // (JavaCodeGenerator.meta.java:5451)
    }                                                                           // (JavaCodeGenerator.meta.java:5452)
                                                                                // (JavaCodeGenerator.meta.java:5453)
                                                                                // (JavaCodeGenerator.meta.java:5454)
                                                                                // (JavaCodeGenerator.meta.java:5456)
                                                                                // (JavaCodeGenerator.meta.java:5457)
                                                                                // (JavaCodeGenerator.meta.java:5464)
    private final static int __TABLE_SENTINEL__notavacc_reserved = java.lang.Integer.MAX_VALUE;    // (JavaCodeGenerator.meta.java:5466)
                                                                                // (JavaCodeGenerator.meta.java:5467)
    private static final int[][] __dfaTable__notavacc_reserved;                 // (JavaCodeGenerator.meta.java:5473)
    static {                                                                    // (JavaCodeGenerator.meta.java:5475)
        __dfaTable__notavacc_reserved = new int[81][];                          // (JavaCodeGenerator.meta.java:5476)
        initializeDFATable0();                                                  // (JavaCodeGenerator.meta.java:5478)
        initializeDFATable50();                                                 // (JavaCodeGenerator.meta.java:5478)
    }                                                                           // (JavaCodeGenerator.meta.java:5480)
    private static void initializeDFATable0() {                                 // (JavaCodeGenerator.meta.java:5483)
        __dfaTable__notavacc_reserved[0] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '\t', '\n', 1,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 1,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 1,                                                        // (JavaCodeGenerator.meta.java:5497)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '-', '-', 3,                                                        // (JavaCodeGenerator.meta.java:5497)
            '.', '.', 20,                                                       // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 22,                                                       // (JavaCodeGenerator.meta.java:5497)
            ':', ':', 23,                                                       // (JavaCodeGenerator.meta.java:5497)
            'A', 'B', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'C', 'C', 24,                                                       // (JavaCodeGenerator.meta.java:5497)
            'D', 'D', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 32,                                                       // (JavaCodeGenerator.meta.java:5497)
            'F', 'F', 35,                                                       // (JavaCodeGenerator.meta.java:5497)
            'G', 'G', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'H', 'H', 41,                                                       // (JavaCodeGenerator.meta.java:5497)
            'I', 'I', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'J', 'J', 50,                                                       // (JavaCodeGenerator.meta.java:5497)
            'K', 'L', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'M', 'M', 55,                                                       // (JavaCodeGenerator.meta.java:5497)
            'N', 'N', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'O', 'O', 61,                                                       // (JavaCodeGenerator.meta.java:5497)
            'P', 'Q', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'R', 'R', 67,                                                       // (JavaCodeGenerator.meta.java:5497)
            'S', 'S', 71,                                                       // (JavaCodeGenerator.meta.java:5497)
            'T', 'T', 75,                                                       // (JavaCodeGenerator.meta.java:5497)
            'U', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '{', '{', 79,                                                       // (JavaCodeGenerator.meta.java:5497)
            '}', '}', 80,                                                       // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[1] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_SPACE,                                             // (JavaCodeGenerator.meta.java:5491)
            '\t', '\n', 1,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 1,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 1,                                                        // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[2] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[3] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            17/*"-"*/,                                                          // (JavaCodeGenerator.meta.java:5491)
            '.', '.', 4,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 19,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[4] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '0', '9', 5,                                                        // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[5] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 5,                                                        // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[6] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '-', '-', 7,                                                        // (JavaCodeGenerator.meta.java:5497)
            '.', '.', 8,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 14,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[7] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '.', '.', 8,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 14,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[8] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '0', '9', 9,                                                        // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[9] = new int[] {                          // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_NUMBERS,                                           // (JavaCodeGenerator.meta.java:5491)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 9,                                                        // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 10,                                                       // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 10,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[10] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '-', '.', 11,                                                       // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 13,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[11] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '0', '9', 12,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[12] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_NUMBERS,                                           // (JavaCodeGenerator.meta.java:5491)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 12,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[13] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_NUMBERS,                                           // (JavaCodeGenerator.meta.java:5491)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '.', '.', 11,                                                       // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 13,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[14] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_NUMBERS,                                           // (JavaCodeGenerator.meta.java:5491)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '.', '.', 8,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 14,                                                       // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 10,                                                       // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 10,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[15] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '-', '.', 16,                                                       // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 18,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[16] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '0', '9', 17,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[17] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 17,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[18] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '.', '.', 16,                                                       // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 18,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[19] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '.', '.', 4,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 19,                                                       // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[20] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            -1,                                                                 // (JavaCodeGenerator.meta.java:5489)
            '0', '9', 21,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[21] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_REAL,                                              // (JavaCodeGenerator.meta.java:5491)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 21,                                                       // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[22] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_NUMBER,                                            // (JavaCodeGenerator.meta.java:5491)
            '\t', '\n', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            '\r', '\r', 6,                                                      // (JavaCodeGenerator.meta.java:5497)
            ' ', ' ', 6,                                                        // (JavaCodeGenerator.meta.java:5497)
            '.', '.', 20,                                                       // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 22,                                                       // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 15,                                                       // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[23] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            18/*":"*/,                                                          // (JavaCodeGenerator.meta.java:5491)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[24] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'G', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'H', 'H', 25,                                                       // (JavaCodeGenerator.meta.java:5497)
            'I', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[25] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'A', 26,                                                       // (JavaCodeGenerator.meta.java:5497)
            'B', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[26] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'M', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'N', 'N', 27,                                                       // (JavaCodeGenerator.meta.java:5497)
            'O', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[27] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'M', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'N', 'N', 28,                                                       // (JavaCodeGenerator.meta.java:5497)
            'O', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[28] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'D', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 29,                                                       // (JavaCodeGenerator.meta.java:5497)
            'F', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[29] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'K', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'L', 'L', 30,                                                       // (JavaCodeGenerator.meta.java:5497)
            'M', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[30] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'R', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'S', 'S', 31,                                                       // (JavaCodeGenerator.meta.java:5497)
            'T', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[31] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_CHANNELS,                                          // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[32] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'm', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'n', 'n', 33,                                                       // (JavaCodeGenerator.meta.java:5497)
            'o', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[33] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'c', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'd', 'd', 34,                                                       // (JavaCodeGenerator.meta.java:5497)
            'e', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[34] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_END,                                               // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[35] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'q', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'r', 'r', 36,                                                       // (JavaCodeGenerator.meta.java:5497)
            's', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[36] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'a', 37,                                                       // (JavaCodeGenerator.meta.java:5497)
            'b', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[37] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'l', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'm', 'm', 38,                                                       // (JavaCodeGenerator.meta.java:5497)
            'n', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[38] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'd', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 39,                                                       // (JavaCodeGenerator.meta.java:5497)
            'f', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[39] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_FRAME,                                             // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'r', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            's', 's', 40,                                                       // (JavaCodeGenerator.meta.java:5497)
            't', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[40] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_FRAMES,                                            // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[41] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'H', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'I', 'I', 42,                                                       // (JavaCodeGenerator.meta.java:5497)
            'J', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[42] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'D', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 43,                                                       // (JavaCodeGenerator.meta.java:5497)
            'F', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[43] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Q', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'R', 'R', 44,                                                       // (JavaCodeGenerator.meta.java:5497)
            'S', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[44] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'A', 45,                                                       // (JavaCodeGenerator.meta.java:5497)
            'B', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[45] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Q', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'R', 'R', 46,                                                       // (JavaCodeGenerator.meta.java:5497)
            'S', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[46] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'B', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'C', 'C', 47,                                                       // (JavaCodeGenerator.meta.java:5497)
            'D', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[47] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'G', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'H', 'H', 48,                                                       // (JavaCodeGenerator.meta.java:5497)
            'I', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[48] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'X', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'Y', 'Y', 49,                                                       // (JavaCodeGenerator.meta.java:5497)
            'Z', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[49] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_HIERARCHY,                                         // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
    }                                                                           // (JavaCodeGenerator.meta.java:5501)
    private static void initializeDFATable50() {                                // (JavaCodeGenerator.meta.java:5483)
        __dfaTable__notavacc_reserved[50] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'N', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'O', 'O', 51,                                                       // (JavaCodeGenerator.meta.java:5497)
            'P', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[51] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'H', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'I', 'I', 52,                                                       // (JavaCodeGenerator.meta.java:5497)
            'J', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[52] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'M', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'N', 'N', 53,                                                       // (JavaCodeGenerator.meta.java:5497)
            'O', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[53] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'S', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'T', 'T', 54,                                                       // (JavaCodeGenerator.meta.java:5497)
            'U', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[54] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_JOINT,                                             // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[55] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'N', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'O', 'O', 56,                                                       // (JavaCodeGenerator.meta.java:5497)
            'P', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[56] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'S', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'T', 'T', 57,                                                       // (JavaCodeGenerator.meta.java:5497)
            'U', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[57] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'H', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'I', 'I', 58,                                                       // (JavaCodeGenerator.meta.java:5497)
            'J', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[58] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'N', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'O', 'O', 59,                                                       // (JavaCodeGenerator.meta.java:5497)
            'P', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[59] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'M', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'N', 'N', 60,                                                       // (JavaCodeGenerator.meta.java:5497)
            'O', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[60] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_MOTION,                                            // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[61] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'E', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'F', 'F', 62,                                                       // (JavaCodeGenerator.meta.java:5497)
            'G', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[62] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'E', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'F', 'F', 63,                                                       // (JavaCodeGenerator.meta.java:5497)
            'G', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[63] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'R', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'S', 'S', 64,                                                       // (JavaCodeGenerator.meta.java:5497)
            'T', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[64] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'D', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'E', 'E', 65,                                                       // (JavaCodeGenerator.meta.java:5497)
            'F', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[65] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'S', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'T', 'T', 66,                                                       // (JavaCodeGenerator.meta.java:5497)
            'U', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[66] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_OFFSET,                                            // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[67] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'N', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'O', 'O', 68,                                                       // (JavaCodeGenerator.meta.java:5497)
            'P', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[68] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'N', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'O', 'O', 69,                                                       // (JavaCodeGenerator.meta.java:5497)
            'P', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[69] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'S', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'T', 'T', 70,                                                       // (JavaCodeGenerator.meta.java:5497)
            'U', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[70] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_ROOT,                                              // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[71] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'h', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'i', 'i', 72,                                                       // (JavaCodeGenerator.meta.java:5497)
            'j', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[72] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 's', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            't', 't', 73,                                                       // (JavaCodeGenerator.meta.java:5497)
            'u', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[73] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'd', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 74,                                                       // (JavaCodeGenerator.meta.java:5497)
            'f', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[74] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_SITE,                                              // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[75] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'h', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'i', 'i', 76,                                                       // (JavaCodeGenerator.meta.java:5497)
            'j', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[76] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'l', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'm', 'm', 77,                                                       // (JavaCodeGenerator.meta.java:5497)
            'n', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[77] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_IDENTIFIER,                                        // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'd', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'e', 'e', 78,                                                       // (JavaCodeGenerator.meta.java:5497)
            'f', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[78] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            BVH_Parser.TOKEN_TIME,                                              // (JavaCodeGenerator.meta.java:5491)
            '$', '$', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '0', '9', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'A', 'Z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '_', '_', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            'a', 'z', 2,                                                        // (JavaCodeGenerator.meta.java:5497)
            '\u0080', '\uFFFF', 2,                                              // (JavaCodeGenerator.meta.java:5497)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[79] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            19/*"{"*/,                                                          // (JavaCodeGenerator.meta.java:5491)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
        __dfaTable__notavacc_reserved[80] = new int[] {                         // (JavaCodeGenerator.meta.java:5486)
            20/*"}"*/,                                                          // (JavaCodeGenerator.meta.java:5491)
        };                                                                      // (JavaCodeGenerator.meta.java:5499)
    }                                                                           // (JavaCodeGenerator.meta.java:5501)
                                                                                // (JavaCodeGenerator.meta.java:5504)
    private static final int[][] __lrTable__notavacc_reserved;                  // (JavaCodeGenerator.meta.java:5516)
    static {                                                                    // (JavaCodeGenerator.meta.java:5518)
        __lrTable__notavacc_reserved = new int[61 * 3][];                       // (JavaCodeGenerator.meta.java:5519)
        initializeLRTable0();                                                   // (JavaCodeGenerator.meta.java:5521)
        initializeLRTable20();                                                  // (JavaCodeGenerator.meta.java:5521)
        initializeLRTable40();                                                  // (JavaCodeGenerator.meta.java:5521)
        initializeLRTable60();                                                  // (JavaCodeGenerator.meta.java:5521)
    }                                                                           // (JavaCodeGenerator.meta.java:5523)
    private static void initializeLRTable0() {                                  // (JavaCodeGenerator.meta.java:5526)
        // State 0  (LRState2)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[0 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[0 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[0 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 1  (LRState0)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[1 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_HIERARCHY, 3,                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[1 * 3 + 1] = new int[] {                   // (JavaCodeGenerator.meta.java:5565)
            Bvh.ID, 2,                                                          // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[1 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 2  (LRState1)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[2 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.EOF_TOKEN, 0,                                            // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[2 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[2 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 3  (LRState3)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[3 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_ROOT, 25,                                          // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[3 * 3 + 1] = new int[] {                   // (JavaCodeGenerator.meta.java:5565)
            Root.ID, 24,                                                        // (JavaCodeGenerator.meta.java:5577)
            34/*root*/, 4,                                                      // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[3 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 4  (LRState4)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[4 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_MOTION, 7,                                         // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[4 * 3 + 1] = new int[] {                   // (JavaCodeGenerator.meta.java:5565)
            Motion.ID, 6,                                                       // (JavaCodeGenerator.meta.java:5577)
            35/*motion*/, 5,                                                    // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[4 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 5  (LRState5)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[5 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[5 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[5 * 3 + 2] = new int[] {                   // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.EOF_TOKEN, 13,                                           // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 6  (LRState6)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[6 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[6 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[6 * 3 + 2] = new int[] {                   // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.EOF_TOKEN, 0,                                            // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 7  (LRState7)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[7 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_FRAMES, 8,                                         // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[7 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[7 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 8  (LRState8)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[8 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            18/*":"*/, 9,                                                       // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[8 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[8 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 9  (LRState9)                                                  // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[9 * 3 + 0] = new int[] {                   // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_NUMBER, 21,                                        // (JavaCodeGenerator.meta.java:5549)
            BVH_Parser.TOKEN_REAL, 22,                                          // (JavaCodeGenerator.meta.java:5549)
            17/*"-"*/, 19,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[9 * 3 + 1] = new int[] {                   // (JavaCodeGenerator.meta.java:5565)
            Minus.ID, 17,                                                       // (JavaCodeGenerator.meta.java:5577)
            Plus.ID, 18,                                                        // (JavaCodeGenerator.meta.java:5577)
            36/*data*/, 10,                                                     // (JavaCodeGenerator.meta.java:5577)
            37/*kindsOfData*/, 23,                                              // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[9 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 10  (LRState10)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[10 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_FRAME, 11,                                         // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[10 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[10 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 11  (LRState11)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[11 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_TIME, 12,                                          // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[11 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[11 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 12  (LRState12)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[12 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            18/*":"*/, 13,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[12 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[12 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 13  (LRState13)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[13 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_NUMBERS, 16,                                       // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[13 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Numbers.ID, 15,                                                     // (JavaCodeGenerator.meta.java:5577)
            38/*numbers*/, 14,                                                  // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[13 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 14  (LRState14)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[14 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[14 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[14 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.EOF_TOKEN, 14,                                           // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 15  (LRState15)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[15 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[15 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[15 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.EOF_TOKEN, 1,                                            // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_CHANNELS, 1,                                       // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 1,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 16  (LRState16)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[16 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[16 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[16 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.EOF_TOKEN, 15,                                           // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_CHANNELS, 15,                                      // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 15,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 17  (LRState17)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[17 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[17 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[17 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_IDENTIFIER, 2,                                     // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_JOINT, 2,                                          // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 2,                                            // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_FRAME, 2,                                          // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 2,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 18  (LRState18)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[18 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[18 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[18 * 3 + 2] = __lrTable__notavacc_reserved[17 * 3 + 2];    // (JavaCodeGenerator.meta.java:5610)
        // State 19  (LRState19)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[19 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_NUMBER, 21,                                        // (JavaCodeGenerator.meta.java:5549)
            BVH_Parser.TOKEN_REAL, 22,                                          // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[19 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            37/*kindsOfData*/, 20,                                              // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[19 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
    }                                                                           // (JavaCodeGenerator.meta.java:5613)
    private static void initializeLRTable20() {                                 // (JavaCodeGenerator.meta.java:5526)
        // State 20  (LRState20)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[20 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[20 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[20 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_IDENTIFIER, 16,                                    // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_JOINT, 16,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 16,                                           // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_FRAME, 16,                                         // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 16,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 21  (LRState21)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[21 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[21 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[21 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_IDENTIFIER, 3,                                     // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_JOINT, 3,                                          // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 3,                                            // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_FRAME, 3,                                          // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 3,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 22  (LRState22)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[22 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[22 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[22 * 3 + 2] = __lrTable__notavacc_reserved[21 * 3 + 2];    // (JavaCodeGenerator.meta.java:5610)
        // State 23  (LRState23)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[23 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[23 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[23 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_IDENTIFIER, 17,                                    // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_JOINT, 17,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 17,                                           // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_FRAME, 17,                                         // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 17,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 24  (LRState24)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[24 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[24 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[24 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_MOTION, 4,                                         // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 25  (LRState25)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[25 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_IDENTIFIER, 26,                                    // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[25 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[25 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 26  (LRState26)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[26 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            19/*"{"*/, 27,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[26 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[26 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 27  (LRState27)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[27 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_OFFSET, 47,                                        // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[27 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Components.ID, 30,                                                  // (JavaCodeGenerator.meta.java:5577)
            Offset.ID, 46,                                                      // (JavaCodeGenerator.meta.java:5577)
            39/*components*/, 28,                                               // (JavaCodeGenerator.meta.java:5577)
            40/*offset*/, 31,                                                   // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[27 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 28  (LRState28)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[28 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            20/*"}"*/, 29,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[28 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[28 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 29  (LRState29)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[29 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[29 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[29 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_MOTION, 18,                                        // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 30  (LRState30)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[30 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[30 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[30 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            20/*"}"*/, 5,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 31  (LRState31)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[31 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_CHANNELS, 55,                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[31 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Channels.ID, 54,                                                    // (JavaCodeGenerator.meta.java:5577)
            41/*channel*/, 32,                                                  // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[31 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 32  (LRState32)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[32 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_JOINT, 41,                                         // (JavaCodeGenerator.meta.java:5549)
            BVH_Parser.TOKEN_END, 49,                                           // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[32 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Joints.ID, 34,                                                      // (JavaCodeGenerator.meta.java:5577)
            Joint.ID, 39,                                                       // (JavaCodeGenerator.meta.java:5577)
            EndSite.ID, 40,                                                     // (JavaCodeGenerator.meta.java:5577)
            42/*joints*/, 33,                                                   // (JavaCodeGenerator.meta.java:5577)
            43/*kindsOfJoint*/, 35,                                             // (JavaCodeGenerator.meta.java:5577)
            44/*joint*/, 37,                                                    // (JavaCodeGenerator.meta.java:5577)
            45/*endsite*/, 38,                                                  // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[32 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            20/*"}"*/, 19,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 33  (LRState33)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[33 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[33 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[33 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            20/*"}"*/, 20,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 34  (LRState34)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[34 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[34 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[34 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            20/*"}"*/, 6,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 35  (LRState35)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[35 * 3 + 0] = __lrTable__notavacc_reserved[32 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[35 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Joints.ID, 34,                                                      // (JavaCodeGenerator.meta.java:5577)
            Joint.ID, 39,                                                       // (JavaCodeGenerator.meta.java:5577)
            EndSite.ID, 40,                                                     // (JavaCodeGenerator.meta.java:5577)
            42/*joints*/, 36,                                                   // (JavaCodeGenerator.meta.java:5577)
            43/*kindsOfJoint*/, 35,                                             // (JavaCodeGenerator.meta.java:5577)
            44/*joint*/, 37,                                                    // (JavaCodeGenerator.meta.java:5577)
            45/*endsite*/, 38,                                                  // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[35 * 3 + 2] = __lrTable__notavacc_reserved[32 * 3 + 2];    // (JavaCodeGenerator.meta.java:5610)
        // State 36  (LRState36)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[36 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[36 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[36 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            20/*"}"*/, 21,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 37  (LRState37)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[37 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[37 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[37 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 7,                                          // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 7,                                            // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 7,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 38  (LRState38)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[38 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[38 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[38 * 3 + 2] = __lrTable__notavacc_reserved[37 * 3 + 2];    // (JavaCodeGenerator.meta.java:5610)
        // State 39  (LRState39)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[39 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[39 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[39 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 8,                                          // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 8,                                            // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 8,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
    }                                                                           // (JavaCodeGenerator.meta.java:5613)
    private static void initializeLRTable40() {                                 // (JavaCodeGenerator.meta.java:5526)
        // State 40  (LRState40)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[40 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[40 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[40 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 9,                                          // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 9,                                            // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 9,                                                       // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 41  (LRState41)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[41 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_IDENTIFIER, 42,                                    // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[41 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[41 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 42  (LRState42)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[42 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            19/*"{"*/, 43,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[42 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[42 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 43  (LRState43)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[43 * 3 + 0] = __lrTable__notavacc_reserved[27 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[43 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Components.ID, 30,                                                  // (JavaCodeGenerator.meta.java:5577)
            Offset.ID, 46,                                                      // (JavaCodeGenerator.meta.java:5577)
            39/*components*/, 44,                                               // (JavaCodeGenerator.meta.java:5577)
            40/*offset*/, 31,                                                   // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[43 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 44  (LRState44)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[44 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            20/*"}"*/, 45,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[44 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[44 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 45  (LRState45)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[45 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[45 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[45 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 22,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 22,                                           // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 22,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 46  (LRState46)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[46 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[46 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[46 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_CHANNELS, 10,                                      // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 10,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 47  (LRState47)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[47 * 3 + 0] = __lrTable__notavacc_reserved[13 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[47 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Numbers.ID, 15,                                                     // (JavaCodeGenerator.meta.java:5577)
            38/*numbers*/, 48,                                                  // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[47 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 48  (LRState48)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[48 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[48 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[48 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_CHANNELS, 23,                                      // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 23,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 49  (LRState49)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[49 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_SITE, 50,                                          // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[49 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[49 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 50  (LRState50)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[50 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            19/*"{"*/, 51,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[50 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[50 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 51  (LRState51)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[51 * 3 + 0] = __lrTable__notavacc_reserved[27 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[51 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Offset.ID, 46,                                                      // (JavaCodeGenerator.meta.java:5577)
            40/*offset*/, 52,                                                   // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[51 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 52  (LRState52)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[52 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            20/*"}"*/, 53,                                                      // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[52 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[52 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 53  (LRState53)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[53 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[53 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[53 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 24,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 24,                                           // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 24,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 54  (LRState54)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[54 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[54 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[54 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 11,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 11,                                           // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 11,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 55  (LRState55)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[55 * 3 + 0] = __lrTable__notavacc_reserved[9 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[55 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            Minus.ID, 17,                                                       // (JavaCodeGenerator.meta.java:5577)
            Plus.ID, 18,                                                        // (JavaCodeGenerator.meta.java:5577)
            36/*data*/, 56,                                                     // (JavaCodeGenerator.meta.java:5577)
            37/*kindsOfData*/, 23,                                              // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[55 * 3 + 2] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5610)
        // State 56  (LRState56)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[56 * 3 + 0] = new int[] {                  // (JavaCodeGenerator.meta.java:5537)
            BVH_Parser.TOKEN_IDENTIFIER, 59,                                    // (JavaCodeGenerator.meta.java:5549)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5553)
        };                                                                      // (JavaCodeGenerator.meta.java:5555)
        __lrTable__notavacc_reserved[56 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            KindsOfChannel.ID, 58,                                              // (JavaCodeGenerator.meta.java:5577)
            46/*kindsOfChannel*/, 57,                                           // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[56 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 25,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 25,                                           // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 25,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 57  (LRState57)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[57 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[57 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[57 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 26,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 26,                                           // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 26,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 58  (LRState58)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[58 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[58 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[58 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 12,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 12,                                           // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 12,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
        // State 59  (LRState59)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[59 * 3 + 0] = __lrTable__notavacc_reserved[56 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[59 * 3 + 1] = new int[] {                  // (JavaCodeGenerator.meta.java:5565)
            KindsOfChannel.ID, 58,                                              // (JavaCodeGenerator.meta.java:5577)
            46/*kindsOfChannel*/, 60,                                           // (JavaCodeGenerator.meta.java:5577)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5581)
        };                                                                      // (JavaCodeGenerator.meta.java:5583)
        __lrTable__notavacc_reserved[59 * 3 + 2] = __lrTable__notavacc_reserved[56 * 3 + 2];    // (JavaCodeGenerator.meta.java:5610)
    }                                                                           // (JavaCodeGenerator.meta.java:5613)
    private static void initializeLRTable60() {                                 // (JavaCodeGenerator.meta.java:5526)
        // State 60  (LRState60)                                                // (JavaCodeGenerator.meta.java:5529)
        __lrTable__notavacc_reserved[60 * 3 + 0] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5557)
        __lrTable__notavacc_reserved[60 * 3 + 1] = __lrTable__notavacc_reserved[0 * 3 + 0];    // (JavaCodeGenerator.meta.java:5585)
        __lrTable__notavacc_reserved[60 * 3 + 2] = new int[] {                  // (JavaCodeGenerator.meta.java:5593)
            BVH_Parser.TOKEN_JOINT, 27,                                         // (JavaCodeGenerator.meta.java:5602)
            BVH_Parser.TOKEN_END, 27,                                           // (JavaCodeGenerator.meta.java:5602)
            20/*"}"*/, 27,                                                      // (JavaCodeGenerator.meta.java:5602)
            __TABLE_SENTINEL__notavacc_reserved,                                // (JavaCodeGenerator.meta.java:5606)
        };                                                                      // (JavaCodeGenerator.meta.java:5608)
    }                                                                           // (JavaCodeGenerator.meta.java:5613)
                                                                                // (JavaCodeGenerator.meta.java:5617)
    private static final int[][] __reductionTable__notavacc_reserved = {        // (JavaCodeGenerator.meta.java:5623)
        /*0*/{ 35/*motion*/,  0x00000001, },                                    // (JavaCodeGenerator.meta.java:5645)
        /*1*/{ 38/*numbers*/,  0x00000001, },                                   // (JavaCodeGenerator.meta.java:5645)
        /*2*/{ 36/*data*/,  0x00000001, },                                      // (JavaCodeGenerator.meta.java:5645)
        /*3*/{ 37/*kindsOfData*/,  0x00000001, },                               // (JavaCodeGenerator.meta.java:5645)
        /*4*/{ 34/*root*/,  0x00000001, },                                      // (JavaCodeGenerator.meta.java:5645)
        /*5*/{ 39/*components*/,  0x00000001, },                                // (JavaCodeGenerator.meta.java:5645)
        /*6*/{ 42/*joints*/,  0x00000001, },                                    // (JavaCodeGenerator.meta.java:5645)
        /*7*/{ 43/*kindsOfJoint*/,  0x00000001, },                              // (JavaCodeGenerator.meta.java:5645)
        /*8*/{ 44/*joint*/,  0x00000001, },                                     // (JavaCodeGenerator.meta.java:5645)
        /*9*/{ 45/*endsite*/,  0x00000001, },                                   // (JavaCodeGenerator.meta.java:5645)
        /*10*/{ 40/*offset*/,  0x00000001, },                                   // (JavaCodeGenerator.meta.java:5645)
        /*11*/{ 41/*channel*/,  0x00000001, },                                  // (JavaCodeGenerator.meta.java:5645)
        /*12*/{ 46/*kindsOfChannel*/,  0x00000001, },                           // (JavaCodeGenerator.meta.java:5645)
        /*13*/{ Bvh.ID,  0x00000000, 0x00008000, 0x00000400, },                 // (JavaCodeGenerator.meta.java:5645)
        /*14*/{ Motion.ID,  0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x00000000, 0x00000000, 0x00000000, 0x00002000, },    // (JavaCodeGenerator.meta.java:5645)
        /*15*/{ Numbers.ID,  0x00000008, },                                     // (JavaCodeGenerator.meta.java:5645)
        /*16*/{ Minus.ID,  0x00000000, 0x00000020, },                           // (JavaCodeGenerator.meta.java:5645)
        /*17*/{ Plus.ID,  0x00000020, },                                        // (JavaCodeGenerator.meta.java:5645)
        /*18*/{ Root.ID,  0x00000000, 0x00000800, 0x00000000, 0x00000004, 0x00000000, },    // (JavaCodeGenerator.meta.java:5645)
        /*19*/{ 42/*joints*/,  },                                               // (JavaCodeGenerator.meta.java:5645)
        /*20*/{ Components.ID,  0x00004000, 0x00000002, 0x00000100, },          // (JavaCodeGenerator.meta.java:5645)
        /*21*/{ Joints.ID,  0x00000080, 0x00001000, },                          // (JavaCodeGenerator.meta.java:5645)
        /*22*/{ Joint.ID,  0x00000000, 0x00000800, 0x00000000, 0x00000004, 0x00000000, },    // (JavaCodeGenerator.meta.java:5645)
        /*23*/{ Offset.ID,  0x00000000, 0x00002000, },                          // (JavaCodeGenerator.meta.java:5645)
        /*24*/{ EndSite.ID,  0x00000000, 0x00000000, 0x00000000, 0x00004000, 0x00000000, },    // (JavaCodeGenerator.meta.java:5645)
        /*25*/{ 46/*kindsOfChannel*/,  },                                       // (JavaCodeGenerator.meta.java:5645)
        /*26*/{ Channels.ID,  0x00000000, 0x00000008, 0x00000200, },            // (JavaCodeGenerator.meta.java:5645)
        /*27*/{ KindsOfChannel.ID,  0x00000010, 0x00001000, },                  // (JavaCodeGenerator.meta.java:5645)
    };                                                                          // (JavaCodeGenerator.meta.java:5647)
                                                                                // (JavaCodeGenerator.meta.java:5649)
                                                                                // (JavaCodeGenerator.meta.java:5654)
    private static java.lang.String[] __symbolIDToName__notavacc_reserved = {    // (JavaCodeGenerator.meta.java:5656)
        "<EOF>",                                                                // (JavaCodeGenerator.meta.java:5658)
        "SPACE",                                                                // (JavaCodeGenerator.meta.java:5658)
        "NUMBER",                                                               // (JavaCodeGenerator.meta.java:5658)
        "REAL",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "IDENTIFIER",                                                           // (JavaCodeGenerator.meta.java:5658)
        "NUMBERS",                                                              // (JavaCodeGenerator.meta.java:5658)
        "HIERARCHY",                                                            // (JavaCodeGenerator.meta.java:5658)
        "ROOT",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "OFFSET",                                                               // (JavaCodeGenerator.meta.java:5658)
        "CHANNELS",                                                             // (JavaCodeGenerator.meta.java:5658)
        "JOINT",                                                                // (JavaCodeGenerator.meta.java:5658)
        "END",                                                                  // (JavaCodeGenerator.meta.java:5658)
        "SITE",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "MOTION",                                                               // (JavaCodeGenerator.meta.java:5658)
        "FRAMES",                                                               // (JavaCodeGenerator.meta.java:5658)
        "FRAME",                                                                // (JavaCodeGenerator.meta.java:5658)
        "TIME",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "\"-\"",                                                                // (JavaCodeGenerator.meta.java:5658)
        "\":\"",                                                                // (JavaCodeGenerator.meta.java:5658)
        "\"{\"",                                                                // (JavaCodeGenerator.meta.java:5658)
        "\"}\"",                                                                // (JavaCodeGenerator.meta.java:5658)
        "Bvh",                                                                  // (JavaCodeGenerator.meta.java:5658)
        "Root",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "Motion",                                                               // (JavaCodeGenerator.meta.java:5658)
        "Minus",                                                                // (JavaCodeGenerator.meta.java:5658)
        "Plus",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "Numbers",                                                              // (JavaCodeGenerator.meta.java:5658)
        "Components",                                                           // (JavaCodeGenerator.meta.java:5658)
        "Offset",                                                               // (JavaCodeGenerator.meta.java:5658)
        "Channels",                                                             // (JavaCodeGenerator.meta.java:5658)
        "Joints",                                                               // (JavaCodeGenerator.meta.java:5658)
        "Joint",                                                                // (JavaCodeGenerator.meta.java:5658)
        "EndSite",                                                              // (JavaCodeGenerator.meta.java:5658)
        "KindsOfChannel",                                                       // (JavaCodeGenerator.meta.java:5658)
        "root",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "motion",                                                               // (JavaCodeGenerator.meta.java:5658)
        "data",                                                                 // (JavaCodeGenerator.meta.java:5658)
        "kindsOfData",                                                          // (JavaCodeGenerator.meta.java:5658)
        "numbers",                                                              // (JavaCodeGenerator.meta.java:5658)
        "components",                                                           // (JavaCodeGenerator.meta.java:5658)
        "offset",                                                               // (JavaCodeGenerator.meta.java:5658)
        "channel",                                                              // (JavaCodeGenerator.meta.java:5658)
        "joints",                                                               // (JavaCodeGenerator.meta.java:5658)
        "kindsOfJoint",                                                         // (JavaCodeGenerator.meta.java:5658)
        "joint",                                                                // (JavaCodeGenerator.meta.java:5658)
        "endsite",                                                              // (JavaCodeGenerator.meta.java:5658)
        "kindsOfChannel",                                                       // (JavaCodeGenerator.meta.java:5658)
    };                                                                          // (JavaCodeGenerator.meta.java:5660)
                                                                                // (JavaCodeGenerator.meta.java:5669)
    private static <T> void __replaceAll__notavacc_reserved(java.util.List<T> list, Node oldValue, T newValue) {    // (JavaCodeGenerator.meta.java:5671)
        java.util.ListIterator<T> it = list.listIterator();                     // (JavaCodeGenerator.meta.java:5675)
        if (oldValue == null) {                                                 // (JavaCodeGenerator.meta.java:5676)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:5677)
                java.lang.Object old = it.next();                               // (JavaCodeGenerator.meta.java:5678)
                if (oldValue == old)                                            // (JavaCodeGenerator.meta.java:5679)
                    it.set(newValue);                                           // (JavaCodeGenerator.meta.java:5680)
            }                                                                   // (JavaCodeGenerator.meta.java:5681)
        } else {                                                                // (JavaCodeGenerator.meta.java:5682)
            while (it.hasNext()) {                                              // (JavaCodeGenerator.meta.java:5683)
                java.lang.Object old = it.next();                               // (JavaCodeGenerator.meta.java:5684)
                if (oldValue instanceof BVH_Parser.AmbiguityAbsorber && oldValue.equals(((Node) old).getWrappedAmbiguityAbsorber()))    // (JavaCodeGenerator.meta.java:5686)
                    it.set(newValue);                                           // (JavaCodeGenerator.meta.java:5687)
                else                                                            // (JavaCodeGenerator.meta.java:5688)
                    if (oldValue.equals(old))                                   // (JavaCodeGenerator.meta.java:5690)
                    it.set(newValue);                                           // (JavaCodeGenerator.meta.java:5691)
            }                                                                   // (JavaCodeGenerator.meta.java:5692)
        }                                                                       // (JavaCodeGenerator.meta.java:5693)
    }                                                                           // (JavaCodeGenerator.meta.java:5695)
                                                                                // (JavaCodeGenerator.meta.java:5716)
    private static java.lang.String __toHexCode__notavacc_reserved(char ch) {    // (JavaCodeGenerator.meta.java:5718)
        java.lang.String hex = "000" + java.lang.Integer.toString(ch, 16).toUpperCase(java.util.Locale.ENGLISH);    // (JavaCodeGenerator.meta.java:5719)
        hex = hex.substring(hex.length() - 4);                                  // (JavaCodeGenerator.meta.java:5720)
        return hex;                                                             // (JavaCodeGenerator.meta.java:5721)
    }                                                                           // (JavaCodeGenerator.meta.java:5722)
                                                                                // (JavaCodeGenerator.meta.java:5723)
    /*
    private static String __quoted__notavacc_reserved(char ch) {
    StringBuffer quoted = new StringBuffer("\'");
    __quoted__notavacc_reserved(quoted, ch);
    quoted.append("\'");
    return quoted.toString();
    }
    private static String __quoted__notavacc_reserved(String str) {
    return __quoted__notavacc_reserved(str, true);
    }
    private static String __quoted__notavacc_reserved(String str, boolean quote) {
    StringBuffer quoted = new StringBuffer();
    if (quote)
    quoted.append("\"");
    for (int i = 0; i < str.length(); i++) {
    char ch = str.charAt(i);
    __quoted__notavacc_reserved(quoted, ch);
    }
    if (quote)
    quoted.append("\"");
    return quoted.toString();
    }
    private static void __quoted__notavacc_reserved(StringBuffer result, char ch) {
    switch (ch) {
    default:
    if (0x0020 <= ch && ch <= 0x007E) {
    result.append(ch);
    } else {
    result.append("\\u").append(__toHexCode__notavacc_reserved(ch));
    }
    break;
    case '\n':   result.append("\\n");      break;
    case '\t':   result.append("\\t");      break;
    case '\b':   result.append("\\b");      break;
    case '\r':   result.append("\\r");      break;
    case '\f':   result.append("\\f");      break;
    case '\\':   result.append("\\\\");     break;
    case '\'':   result.append("\\\'");     break;
    case '\"':   result.append("\\\"");     break;
    }
    }
     */
                                                                                // (JavaCodeGenerator.meta.java:5767)
    /**
     * Parses the given files and prints the syntax tree.
     *
     * @param   args
     *      the names of the files to parse.
     */
    public static void main(java.lang.String[] args) {                          // (JavaCodeGenerator.meta.java:5803)
        try {                                                                   // (JavaCodeGenerator.meta.java:5804)
            BVH_Parser p = new BVH_Parser();                                    // (JavaCodeGenerator.meta.java:5805)
            for (int i = 0; i < args.length; i++) {                             // (JavaCodeGenerator.meta.java:5806)
                java.io.File file = new java.io.File(args[i]);                  // (JavaCodeGenerator.meta.java:5807)
                java.lang.System.out.println(file);                             // (JavaCodeGenerator.meta.java:5808)
                                                                                // (JavaCodeGenerator.meta.java:5809)
                java.lang.System.out.println(p.parseBvh(file, null));           // (JavaCodeGenerator.meta.java:5815)
            }                                                                   // (JavaCodeGenerator.meta.java:5819)
        } catch(java.lang.Exception x) {                                        // (JavaCodeGenerator.meta.java:5820)
            x.printStackTrace();                                                // (JavaCodeGenerator.meta.java:5821)
        }                                                                       // (JavaCodeGenerator.meta.java:5822)
    }                                                                           // (JavaCodeGenerator.meta.java:5823)
} // class BVH_Parser                                                           // (JavaCodeGenerator.meta.java:5825)
